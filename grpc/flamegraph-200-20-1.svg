<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="565.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="565.00"> </text><svg id="frames" x="10" width="1180" total_samples="59560850755"><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (16,445,261 samples, 0.03%)</title><rect x="0.2071%" y="309" width="0.0276%" height="15" fill="rgb(227,0,7)" fg:x="123324720" fg:w="16445261"/><text x="0.4571%" y="319.50"></text></g><g><title>checked_request2size (8,197,408 samples, 0.01%)</title><rect x="0.6267%" y="229" width="0.0138%" height="15" fill="rgb(217,0,24)" fg:x="373263622" fg:w="8197408"/><text x="0.8767%" y="239.50"></text></g><g><title>__GI___libc_malloc (155,274,087 samples, 0.26%)</title><rect x="0.3868%" y="261" width="0.2607%" height="15" fill="rgb(221,193,54)" fg:x="230399730" fg:w="155274087"/><text x="0.6368%" y="271.50"></text></g><g><title>_int_malloc (138,783,330 samples, 0.23%)</title><rect x="0.4145%" y="245" width="0.2330%" height="15" fill="rgb(248,212,6)" fg:x="246890487" fg:w="138783330"/><text x="0.6645%" y="255.50"></text></g><g><title>malloc_consolidate (28,452,985 samples, 0.05%)</title><rect x="0.6541%" y="181" width="0.0478%" height="15" fill="rgb(208,68,35)" fg:x="389611206" fg:w="28452985"/><text x="0.9041%" y="191.50"></text></g><g><title>unlink_chunk (12,465,125 samples, 0.02%)</title><rect x="0.6810%" y="165" width="0.0209%" height="15" fill="rgb(232,128,0)" fg:x="405599066" fg:w="12465125"/><text x="0.9310%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (32,467,479 samples, 0.05%)</title><rect x="0.6541%" y="261" width="0.0545%" height="15" fill="rgb(207,160,47)" fg:x="389611206" fg:w="32467479"/><text x="0.9041%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (32,467,479 samples, 0.05%)</title><rect x="0.6541%" y="245" width="0.0545%" height="15" fill="rgb(228,23,34)" fg:x="389611206" fg:w="32467479"/><text x="0.9041%" y="255.50"></text></g><g><title>__GI___libc_realloc (32,467,479 samples, 0.05%)</title><rect x="0.6541%" y="229" width="0.0545%" height="15" fill="rgb(218,30,26)" fg:x="389611206" fg:w="32467479"/><text x="0.9041%" y="239.50"></text></g><g><title>_int_realloc (32,467,479 samples, 0.05%)</title><rect x="0.6541%" y="213" width="0.0545%" height="15" fill="rgb(220,122,19)" fg:x="389611206" fg:w="32467479"/><text x="0.9041%" y="223.50"></text></g><g><title>_int_malloc (32,467,479 samples, 0.05%)</title><rect x="0.6541%" y="197" width="0.0545%" height="15" fill="rgb(250,228,42)" fg:x="389611206" fg:w="32467479"/><text x="0.9041%" y="207.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (238,843,364 samples, 0.40%)</title><rect x="0.3387%" y="277" width="0.4010%" height="15" fill="rgb(240,193,28)" fg:x="201720075" fg:w="238843364"/><text x="0.5887%" y="287.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (18,484,754 samples, 0.03%)</title><rect x="0.7087%" y="261" width="0.0310%" height="15" fill="rgb(216,20,37)" fg:x="422078685" fg:w="18484754"/><text x="0.9587%" y="271.50"></text></g><g><title>__GI_memcpy (28,014,515 samples, 0.05%)</title><rect x="0.7741%" y="213" width="0.0470%" height="15" fill="rgb(206,188,39)" fg:x="461061122" fg:w="28014515"/><text x="1.0241%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned_erms (28,014,515 samples, 0.05%)</title><rect x="0.7741%" y="197" width="0.0470%" height="15" fill="rgb(217,207,13)" fg:x="461061122" fg:w="28014515"/><text x="1.0241%" y="207.50"></text></g><g><title>__GI___libc_realloc (77,172,847 samples, 0.13%)</title><rect x="0.7604%" y="245" width="0.1296%" height="15" fill="rgb(231,73,38)" fg:x="452874203" fg:w="77172847"/><text x="1.0104%" y="255.50"></text></g><g><title>_int_realloc (73,123,058 samples, 0.12%)</title><rect x="0.7672%" y="229" width="0.1228%" height="15" fill="rgb(225,20,46)" fg:x="456923992" fg:w="73123058"/><text x="1.0172%" y="239.50"></text></g><g><title>_int_malloc (40,971,413 samples, 0.07%)</title><rect x="0.8211%" y="213" width="0.0688%" height="15" fill="rgb(210,31,41)" fg:x="489075637" fg:w="40971413"/><text x="1.0711%" y="223.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (369,626,136 samples, 0.62%)</title><rect x="0.2761%" y="293" width="0.6206%" height="15" fill="rgb(221,200,47)" fg:x="164434080" fg:w="369626136"/><text x="0.5261%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (93,496,777 samples, 0.16%)</title><rect x="0.7397%" y="277" width="0.1570%" height="15" fill="rgb(226,26,5)" fg:x="440563439" fg:w="93496777"/><text x="0.9897%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (93,496,777 samples, 0.16%)</title><rect x="0.7397%" y="261" width="0.1570%" height="15" fill="rgb(249,33,26)" fg:x="440563439" fg:w="93496777"/><text x="0.9897%" y="271.50"></text></g><g><title>__GI___libc_free (73,728,679 samples, 0.12%)</title><rect x="0.8967%" y="293" width="0.1238%" height="15" fill="rgb(235,183,28)" fg:x="534060216" fg:w="73728679"/><text x="1.1467%" y="303.50"></text></g><g><title>_int_free (57,258,427 samples, 0.10%)</title><rect x="0.9243%" y="277" width="0.0961%" height="15" fill="rgb(221,5,38)" fg:x="550530468" fg:w="57258427"/><text x="1.1743%" y="287.50"></text></g><g><title>__rdl_dealloc (12,530,278 samples, 0.02%)</title><rect x="1.0205%" y="293" width="0.0210%" height="15" fill="rgb(247,18,42)" fg:x="607788895" fg:w="12530278"/><text x="1.2705%" y="303.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::connect (8,288,968 samples, 0.01%)</title><rect x="1.0415%" y="293" width="0.0139%" height="15" fill="rgb(241,131,45)" fg:x="620319173" fg:w="8288968"/><text x="1.2915%" y="303.50"></text></g><g><title>__GI___libc_free (8,262,482 samples, 0.01%)</title><rect x="1.2472%" y="261" width="0.0139%" height="15" fill="rgb(249,31,29)" fg:x="742817863" fg:w="8262482"/><text x="1.4972%" y="271.50"></text></g><g><title>_int_free (8,262,482 samples, 0.01%)</title><rect x="1.2472%" y="245" width="0.0139%" height="15" fill="rgb(225,111,53)" fg:x="742817863" fg:w="8262482"/><text x="1.4972%" y="255.50"></text></g><g><title>__GI___libc_malloc (28,593,609 samples, 0.05%)</title><rect x="1.2610%" y="261" width="0.0480%" height="15" fill="rgb(238,160,17)" fg:x="751080345" fg:w="28593609"/><text x="1.5110%" y="271.50"></text></g><g><title>_int_malloc (28,593,609 samples, 0.05%)</title><rect x="1.2610%" y="245" width="0.0480%" height="15" fill="rgb(214,148,48)" fg:x="751080345" fg:w="28593609"/><text x="1.5110%" y="255.50"></text></g><g><title>__memset_avx2_unaligned (7,718,280 samples, 0.01%)</title><rect x="1.3090%" y="261" width="0.0130%" height="15" fill="rgb(232,36,49)" fg:x="779673954" fg:w="7718280"/><text x="1.5590%" y="271.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.7027266497679388191 (183,335,714 samples, 0.31%)</title><rect x="1.1585%" y="277" width="0.3078%" height="15" fill="rgb(209,103,24)" fg:x="689984445" fg:w="183335714"/><text x="1.4085%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (85,927,925 samples, 0.14%)</title><rect x="1.3220%" y="261" width="0.1443%" height="15" fill="rgb(229,88,8)" fg:x="787392234" fg:w="85927925"/><text x="1.5720%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (302,231,258 samples, 0.51%)</title><rect x="1.0554%" y="293" width="0.5074%" height="15" fill="rgb(213,181,19)" fg:x="628608141" fg:w="302231258"/><text x="1.3054%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (57,519,240 samples, 0.10%)</title><rect x="1.4663%" y="277" width="0.0966%" height="15" fill="rgb(254,191,54)" fg:x="873320159" fg:w="57519240"/><text x="1.7163%" y="287.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (807,626,668 samples, 1.36%)</title><rect x="0.2347%" y="309" width="1.3560%" height="15" fill="rgb(241,83,37)" fg:x="139769981" fg:w="807626668"/><text x="0.4847%" y="319.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (16,557,250 samples, 0.03%)</title><rect x="1.5628%" y="293" width="0.0278%" height="15" fill="rgb(233,36,39)" fg:x="930839399" fg:w="16557250"/><text x="1.8128%" y="303.50"></text></g><g><title>_int_malloc (95,006,731 samples, 0.16%)</title><rect x="1.9277%" y="245" width="0.1595%" height="15" fill="rgb(226,3,54)" fg:x="1148153076" fg:w="95006731"/><text x="2.1777%" y="255.50"></text></g><g><title>__GI___libc_malloc (152,307,519 samples, 0.26%)</title><rect x="1.8386%" y="261" width="0.2557%" height="15" fill="rgb(245,192,40)" fg:x="1095084694" fg:w="152307519"/><text x="2.0886%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (16,366,712 samples, 0.03%)</title><rect x="2.0943%" y="261" width="0.0275%" height="15" fill="rgb(238,167,29)" fg:x="1247392213" fg:w="16366712"/><text x="2.3443%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (24,392,387 samples, 0.04%)</title><rect x="2.1218%" y="261" width="0.0410%" height="15" fill="rgb(232,182,51)" fg:x="1263758925" fg:w="24392387"/><text x="2.3718%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (241,996,635 samples, 0.41%)</title><rect x="1.7701%" y="277" width="0.4063%" height="15" fill="rgb(231,60,39)" fg:x="1054269844" fg:w="241996635"/><text x="2.0201%" y="287.50"></text></g><g><title>__rust_alloc (8,115,167 samples, 0.01%)</title><rect x="2.1627%" y="261" width="0.0136%" height="15" fill="rgb(208,69,12)" fg:x="1288151312" fg:w="8115167"/><text x="2.4127%" y="271.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h7d8f287740a6f638E.llvm.6127000297180534061 (352,898,189 samples, 0.59%)</title><rect x="1.5906%" y="309" width="0.5925%" height="15" fill="rgb(235,93,37)" fg:x="947396649" fg:w="352898189"/><text x="1.8406%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (348,729,368 samples, 0.59%)</title><rect x="1.5976%" y="293" width="0.5855%" height="15" fill="rgb(213,116,39)" fg:x="951565470" fg:w="348729368"/><text x="1.8476%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,120,276 samples, 0.01%)</title><rect x="2.1968%" y="293" width="0.0136%" height="15" fill="rgb(222,207,29)" fg:x="1308413720" fg:w="8120276"/><text x="2.4468%" y="303.50"></text></g><g><title>_int_free_maybe_consolidate (24,334,566 samples, 0.04%)</title><rect x="2.2104%" y="277" width="0.0409%" height="15" fill="rgb(206,96,30)" fg:x="1316533996" fg:w="24334566"/><text x="2.4604%" y="287.50"></text></g><g><title>malloc_consolidate (24,334,566 samples, 0.04%)</title><rect x="2.2104%" y="261" width="0.0409%" height="15" fill="rgb(218,138,4)" fg:x="1316533996" fg:w="24334566"/><text x="2.4604%" y="271.50"></text></g><g><title>unlink_chunk (12,139,087 samples, 0.02%)</title><rect x="2.2309%" y="245" width="0.0204%" height="15" fill="rgb(250,191,14)" fg:x="1328729475" fg:w="12139087"/><text x="2.4809%" y="255.50"></text></g><g><title>__GI___libc_free (36,734,289 samples, 0.06%)</title><rect x="2.2104%" y="293" width="0.0617%" height="15" fill="rgb(239,60,40)" fg:x="1316533996" fg:w="36734289"/><text x="2.4604%" y="303.50"></text></g><g><title>_int_free_merge_chunk (12,399,723 samples, 0.02%)</title><rect x="2.2513%" y="277" width="0.0208%" height="15" fill="rgb(206,27,48)" fg:x="1340868562" fg:w="12399723"/><text x="2.5013%" y="287.50"></text></g><g><title>_int_free_create_chunk (8,387,559 samples, 0.01%)</title><rect x="2.2580%" y="261" width="0.0141%" height="15" fill="rgb(225,35,8)" fg:x="1344880726" fg:w="8387559"/><text x="2.5080%" y="271.50"></text></g><g><title>[unknown] (83,116,674 samples, 0.14%)</title><rect x="2.5723%" y="261" width="0.1395%" height="15" fill="rgb(250,213,24)" fg:x="1532096243" fg:w="83116674"/><text x="2.8223%" y="271.50"></text></g><g><title>[unknown] (83,116,674 samples, 0.14%)</title><rect x="2.5723%" y="245" width="0.1395%" height="15" fill="rgb(247,123,22)" fg:x="1532096243" fg:w="83116674"/><text x="2.8223%" y="255.50"></text></g><g><title>[unknown] (83,116,674 samples, 0.14%)</title><rect x="2.5723%" y="229" width="0.1395%" height="15" fill="rgb(231,138,38)" fg:x="1532096243" fg:w="83116674"/><text x="2.8223%" y="239.50"></text></g><g><title>[unknown] (79,062,312 samples, 0.13%)</title><rect x="2.5791%" y="213" width="0.1327%" height="15" fill="rgb(231,145,46)" fg:x="1536150605" fg:w="79062312"/><text x="2.8291%" y="223.50"></text></g><g><title>[unknown] (79,062,312 samples, 0.13%)</title><rect x="2.5791%" y="197" width="0.1327%" height="15" fill="rgb(251,118,11)" fg:x="1536150605" fg:w="79062312"/><text x="2.8291%" y="207.50"></text></g><g><title>[unknown] (62,633,733 samples, 0.11%)</title><rect x="2.6067%" y="181" width="0.1052%" height="15" fill="rgb(217,147,25)" fg:x="1552579184" fg:w="62633733"/><text x="2.8567%" y="191.50"></text></g><g><title>[unknown] (58,613,006 samples, 0.10%)</title><rect x="2.6135%" y="165" width="0.0984%" height="15" fill="rgb(247,81,37)" fg:x="1556599911" fg:w="58613006"/><text x="2.8635%" y="175.50"></text></g><g><title>[unknown] (42,267,627 samples, 0.07%)</title><rect x="2.6409%" y="149" width="0.0710%" height="15" fill="rgb(209,12,38)" fg:x="1572945290" fg:w="42267627"/><text x="2.8909%" y="159.50"></text></g><g><title>[unknown] (26,335,572 samples, 0.04%)</title><rect x="2.6677%" y="133" width="0.0442%" height="15" fill="rgb(227,1,9)" fg:x="1588877345" fg:w="26335572"/><text x="2.9177%" y="143.50"></text></g><g><title>[unknown] (18,368,027 samples, 0.03%)</title><rect x="2.6810%" y="117" width="0.0308%" height="15" fill="rgb(248,47,43)" fg:x="1596844890" fg:w="18368027"/><text x="2.9310%" y="127.50"></text></g><g><title>[unknown] (8,412,721 samples, 0.01%)</title><rect x="2.6977%" y="101" width="0.0141%" height="15" fill="rgb(221,10,30)" fg:x="1606800196" fg:w="8412721"/><text x="2.9477%" y="111.50"></text></g><g><title>malloc_consolidate (57,081,714 samples, 0.10%)</title><rect x="2.7186%" y="229" width="0.0958%" height="15" fill="rgb(210,229,1)" fg:x="1619209443" fg:w="57081714"/><text x="2.9686%" y="239.50"></text></g><g><title>unlink_chunk (32,509,714 samples, 0.05%)</title><rect x="2.7598%" y="213" width="0.0546%" height="15" fill="rgb(222,148,37)" fg:x="1643781443" fg:w="32509714"/><text x="3.0098%" y="223.50"></text></g><g><title>__GI___libc_malloc (65,294,694 samples, 0.11%)</title><rect x="2.7119%" y="261" width="0.1096%" height="15" fill="rgb(234,67,33)" fg:x="1615212917" fg:w="65294694"/><text x="2.9619%" y="271.50"></text></g><g><title>_int_malloc (65,294,694 samples, 0.11%)</title><rect x="2.7119%" y="245" width="0.1096%" height="15" fill="rgb(247,98,35)" fg:x="1615212917" fg:w="65294694"/><text x="2.9619%" y="255.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.7027266497679388191 (282,301,713 samples, 0.47%)</title><rect x="2.4837%" y="277" width="0.4740%" height="15" fill="rgb(247,138,52)" fg:x="1479294585" fg:w="282301713"/><text x="2.7337%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (81,088,687 samples, 0.14%)</title><rect x="2.8215%" y="261" width="0.1361%" height="15" fill="rgb(213,79,30)" fg:x="1680507611" fg:w="81088687"/><text x="3.0715%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (12,127,695 samples, 0.02%)</title><rect x="2.9373%" y="245" width="0.0204%" height="15" fill="rgb(246,177,23)" fg:x="1749468603" fg:w="12127695"/><text x="3.1873%" y="255.50"></text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (502,283,321 samples, 0.84%)</title><rect x="2.1898%" y="309" width="0.8433%" height="15" fill="rgb(230,62,27)" fg:x="1304248688" fg:w="502283321"/><text x="2.4398%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (453,263,724 samples, 0.76%)</title><rect x="2.2721%" y="293" width="0.7610%" height="15" fill="rgb(216,154,8)" fg:x="1353268285" fg:w="453263724"/><text x="2.5221%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (44,935,711 samples, 0.08%)</title><rect x="2.9576%" y="277" width="0.0754%" height="15" fill="rgb(244,35,45)" fg:x="1761596298" fg:w="44935711"/><text x="3.2076%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,217,629 samples, 0.01%)</title><rect x="3.0193%" y="261" width="0.0138%" height="15" fill="rgb(251,115,12)" fg:x="1798314380" fg:w="8217629"/><text x="3.2693%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (1,801,319,378 samples, 3.02%)</title><rect x="0.2000%" y="325" width="3.0243%" height="15" fill="rgb(240,54,50)" fg:x="119114864" fg:w="1801319378"/><text x="0.4500%" y="335.50">&lt;gr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (113,902,233 samples, 0.19%)</title><rect x="3.0331%" y="309" width="0.1912%" height="15" fill="rgb(233,84,52)" fg:x="1806532009" fg:w="113902233"/><text x="3.2831%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (113,902,233 samples, 0.19%)</title><rect x="3.0331%" y="293" width="0.1912%" height="15" fill="rgb(207,117,47)" fg:x="1806532009" fg:w="113902233"/><text x="3.2831%" y="303.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (105,729,694 samples, 0.18%)</title><rect x="3.0468%" y="277" width="0.1775%" height="15" fill="rgb(249,43,39)" fg:x="1814704548" fg:w="105729694"/><text x="3.2968%" y="287.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.7022287322672284463 (97,730,294 samples, 0.16%)</title><rect x="3.0602%" y="261" width="0.1641%" height="15" fill="rgb(209,38,44)" fg:x="1822703948" fg:w="97730294"/><text x="3.3102%" y="271.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h8e0f56f6ac8014d1E.llvm.6127000297180534061 (12,169,595 samples, 0.02%)</title><rect x="3.2243%" y="325" width="0.0204%" height="15" fill="rgb(236,212,23)" fg:x="1920434242" fg:w="12169595"/><text x="3.4743%" y="335.50"></text></g><g><title>__GI___libc_malloc (12,169,595 samples, 0.02%)</title><rect x="3.2243%" y="309" width="0.0204%" height="15" fill="rgb(242,79,21)" fg:x="1920434242" fg:w="12169595"/><text x="3.4743%" y="319.50"></text></g><g><title>_int_malloc (12,169,595 samples, 0.02%)</title><rect x="3.2243%" y="293" width="0.0204%" height="15" fill="rgb(211,96,35)" fg:x="1920434242" fg:w="12169595"/><text x="3.4743%" y="303.50"></text></g><g><title>malloc_consolidate (8,027,460 samples, 0.01%)</title><rect x="3.2313%" y="277" width="0.0135%" height="15" fill="rgb(253,215,40)" fg:x="1924576377" fg:w="8027460"/><text x="3.4813%" y="287.50"></text></g><g><title>__GI___libc_malloc (155,228,273 samples, 0.26%)</title><rect x="3.2448%" y="325" width="0.2606%" height="15" fill="rgb(211,81,21)" fg:x="1932603837" fg:w="155228273"/><text x="3.4948%" y="335.50"></text></g><g><title>_int_malloc (118,412,042 samples, 0.20%)</title><rect x="3.3066%" y="309" width="0.1988%" height="15" fill="rgb(208,190,38)" fg:x="1969420068" fg:w="118412042"/><text x="3.5566%" y="319.50"></text></g><g><title>__rust_alloc (16,356,285 samples, 0.03%)</title><rect x="3.5054%" y="325" width="0.0275%" height="15" fill="rgb(235,213,38)" fg:x="2087832110" fg:w="16356285"/><text x="3.7554%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (28,971,883 samples, 0.05%)</title><rect x="3.7365%" y="293" width="0.0486%" height="15" fill="rgb(237,122,38)" fg:x="2225493770" fg:w="28971883"/><text x="3.9865%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16,177,350 samples, 0.03%)</title><rect x="3.9844%" y="261" width="0.0272%" height="15" fill="rgb(244,218,35)" fg:x="2373152153" fg:w="16177350"/><text x="4.2344%" y="271.50"></text></g><g><title>_int_malloc (150,768,680 samples, 0.25%)</title><rect x="4.1219%" y="213" width="0.2531%" height="15" fill="rgb(240,68,47)" fg:x="2455029979" fg:w="150768680"/><text x="4.3719%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (294,023,094 samples, 0.49%)</title><rect x="3.8950%" y="277" width="0.4937%" height="15" fill="rgb(210,16,53)" fg:x="2319923258" fg:w="294023094"/><text x="4.1450%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (224,616,849 samples, 0.38%)</title><rect x="4.0116%" y="261" width="0.3771%" height="15" fill="rgb(235,124,12)" fg:x="2389329503" fg:w="224616849"/><text x="4.2616%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (196,451,789 samples, 0.33%)</title><rect x="4.0589%" y="245" width="0.3298%" height="15" fill="rgb(224,169,11)" fg:x="2417494563" fg:w="196451789"/><text x="4.3089%" y="255.50"></text></g><g><title>__GI___libc_malloc (188,283,847 samples, 0.32%)</title><rect x="4.0726%" y="229" width="0.3161%" height="15" fill="rgb(250,166,2)" fg:x="2425662505" fg:w="188283847"/><text x="4.3226%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (591,980,571 samples, 0.99%)</title><rect x="3.5328%" y="325" width="0.9939%" height="15" fill="rgb(242,216,29)" fg:x="2104188395" fg:w="591980571"/><text x="3.7828%" y="335.50"></text></g><g><title>core::fmt::write (556,581,789 samples, 0.93%)</title><rect x="3.5923%" y="309" width="0.9345%" height="15" fill="rgb(230,116,27)" fg:x="2139587177" fg:w="556581789"/><text x="3.8423%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (441,703,313 samples, 0.74%)</title><rect x="3.7851%" y="293" width="0.7416%" height="15" fill="rgb(228,99,48)" fg:x="2254465653" fg:w="441703313"/><text x="4.0351%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral (82,222,614 samples, 0.14%)</title><rect x="4.3887%" y="277" width="0.1380%" height="15" fill="rgb(253,11,6)" fg:x="2613946352" fg:w="82222614"/><text x="4.6387%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (37,030,992 samples, 0.06%)</title><rect x="4.4646%" y="261" width="0.0622%" height="15" fill="rgb(247,143,39)" fg:x="2659137974" fg:w="37030992"/><text x="4.7146%" y="271.50"></text></g><g><title>__GI_memcpy (20,401,724 samples, 0.03%)</title><rect x="4.5614%" y="261" width="0.0343%" height="15" fill="rgb(236,97,10)" fg:x="2716819073" fg:w="20401724"/><text x="4.8114%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16,222,016 samples, 0.03%)</title><rect x="4.5684%" y="245" width="0.0272%" height="15" fill="rgb(233,208,19)" fg:x="2720998781" fg:w="16222016"/><text x="4.8184%" y="255.50"></text></g><g><title>malloc_consolidate (126,601,305 samples, 0.21%)</title><rect x="4.6508%" y="245" width="0.2126%" height="15" fill="rgb(216,164,2)" fg:x="2770028505" fg:w="126601305"/><text x="4.9008%" y="255.50"></text></g><g><title>unlink_chunk (20,957,100 samples, 0.04%)</title><rect x="4.8281%" y="229" width="0.0352%" height="15" fill="rgb(220,129,5)" fg:x="2875672710" fg:w="20957100"/><text x="5.0781%" y="239.50"></text></g><g><title>_int_malloc (159,269,118 samples, 0.27%)</title><rect x="4.6027%" y="261" width="0.2674%" height="15" fill="rgb(242,17,10)" fg:x="2741389977" fg:w="159269118"/><text x="4.8527%" y="271.50"></text></g><g><title>_int_realloc (187,946,390 samples, 0.32%)</title><rect x="4.5614%" y="277" width="0.3156%" height="15" fill="rgb(242,107,0)" fg:x="2716819073" fg:w="187946390"/><text x="4.8114%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (212,681,964 samples, 0.36%)</title><rect x="4.5267%" y="325" width="0.3571%" height="15" fill="rgb(251,28,31)" fg:x="2696168966" fg:w="212681964"/><text x="4.7767%" y="335.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (196,184,136 samples, 0.33%)</title><rect x="4.5544%" y="309" width="0.3294%" height="15" fill="rgb(233,223,10)" fg:x="2712666794" fg:w="196184136"/><text x="4.8044%" y="319.50"></text></g><g><title>__GI___libc_realloc (192,031,857 samples, 0.32%)</title><rect x="4.5614%" y="293" width="0.3224%" height="15" fill="rgb(215,21,27)" fg:x="2716819073" fg:w="192031857"/><text x="4.8114%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (54,492,995 samples, 0.09%)</title><rect x="6.2696%" y="277" width="0.0915%" height="15" fill="rgb(232,23,21)" fg:x="3734245966" fg:w="54492995"/><text x="6.5196%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,879,169 samples, 0.04%)</title><rect x="6.3680%" y="277" width="0.0351%" height="15" fill="rgb(244,5,23)" fg:x="3792853181" fg:w="20879169"/><text x="6.6180%" y="287.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (633,794,758 samples, 1.06%)</title><rect x="5.3599%" y="293" width="1.0641%" height="15" fill="rgb(226,81,46)" fg:x="3192373742" fg:w="633794758"/><text x="5.6099%" y="303.50"></text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::iter (12,436,150 samples, 0.02%)</title><rect x="6.4031%" y="277" width="0.0209%" height="15" fill="rgb(247,70,30)" fg:x="3813732350" fg:w="12436150"/><text x="6.6531%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (46,042,611 samples, 0.08%)</title><rect x="6.4240%" y="293" width="0.0773%" height="15" fill="rgb(212,68,19)" fg:x="3826168500" fg:w="46042611"/><text x="6.6740%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,429,647 samples, 0.02%)</title><rect x="6.5708%" y="277" width="0.0209%" height="15" fill="rgb(240,187,13)" fg:x="3913605658" fg:w="12429647"/><text x="6.8208%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (900,604,039 samples, 1.51%)</title><rect x="5.1005%" y="309" width="1.5121%" height="15" fill="rgb(223,113,26)" fg:x="3037884485" fg:w="900604039"/><text x="5.3505%" y="319.50"></text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (66,277,413 samples, 0.11%)</title><rect x="6.5013%" y="293" width="0.1113%" height="15" fill="rgb(206,192,2)" fg:x="3872211111" fg:w="66277413"/><text x="6.7513%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8,288,680 samples, 0.01%)</title><rect x="6.5986%" y="277" width="0.0139%" height="15" fill="rgb(241,108,4)" fg:x="3930199844" fg:w="8288680"/><text x="6.8486%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37,517,228 samples, 0.06%)</title><rect x="6.6125%" y="309" width="0.0630%" height="15" fill="rgb(247,173,49)" fg:x="3938488524" fg:w="37517228"/><text x="6.8625%" y="319.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (41,796,505 samples, 0.07%)</title><rect x="6.6755%" y="309" width="0.0702%" height="15" fill="rgb(224,114,35)" fg:x="3976005752" fg:w="41796505"/><text x="6.9255%" y="319.50"></text></g><g><title>__GI___libc_malloc (20,510,869 samples, 0.03%)</title><rect x="16.3876%" y="277" width="0.0344%" height="15" fill="rgb(245,159,27)" fg:x="9760583225" fg:w="20510869"/><text x="16.6376%" y="287.50"></text></g><g><title>tcache_get (12,417,013 samples, 0.02%)</title><rect x="16.4012%" y="261" width="0.0208%" height="15" fill="rgb(245,172,44)" fg:x="9768677081" fg:w="12417013"/><text x="16.6512%" y="271.50"></text></g><g><title>tcache_get_n (12,417,013 samples, 0.02%)</title><rect x="16.4012%" y="245" width="0.0208%" height="15" fill="rgb(236,23,11)" fg:x="9768677081" fg:w="12417013"/><text x="16.6512%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (292,320,882 samples, 0.49%)</title><rect x="16.8432%" y="197" width="0.4908%" height="15" fill="rgb(205,117,38)" fg:x="10031926941" fg:w="292320882"/><text x="17.0932%" y="207.50"></text></g><g><title>__GI_memcpy (304,890,236 samples, 0.51%)</title><rect x="16.8291%" y="213" width="0.5119%" height="15" fill="rgb(237,72,25)" fg:x="10023561857" fg:w="304890236"/><text x="17.0791%" y="223.50"></text></g><g><title>_int_free (33,248,222 samples, 0.06%)</title><rect x="17.3410%" y="213" width="0.0558%" height="15" fill="rgb(244,70,9)" fg:x="10328452093" fg:w="33248222"/><text x="17.5910%" y="223.50"></text></g><g><title>_int_free_create_chunk (91,697,379 samples, 0.15%)</title><rect x="17.4180%" y="197" width="0.1540%" height="15" fill="rgb(217,125,39)" fg:x="10374316167" fg:w="91697379"/><text x="17.6680%" y="207.50"></text></g><g><title>unlink_chunk (20,838,955 samples, 0.03%)</title><rect x="17.5370%" y="181" width="0.0350%" height="15" fill="rgb(235,36,10)" fg:x="10445174591" fg:w="20838955"/><text x="17.7870%" y="191.50"></text></g><g><title>_int_free_merge_chunk (112,621,479 samples, 0.19%)</title><rect x="17.3968%" y="213" width="0.1891%" height="15" fill="rgb(251,123,47)" fg:x="10361700315" fg:w="112621479"/><text x="17.6468%" y="223.50"></text></g><g><title>malloc_consolidate (25,233,904 samples, 0.04%)</title><rect x="18.0960%" y="197" width="0.0424%" height="15" fill="rgb(221,13,13)" fg:x="10778137234" fg:w="25233904"/><text x="18.3460%" y="207.50"></text></g><g><title>_int_malloc (404,076,943 samples, 0.68%)</title><rect x="17.5859%" y="213" width="0.6784%" height="15" fill="rgb(238,131,9)" fg:x="10474321794" fg:w="404076943"/><text x="17.8359%" y="223.50"></text></g><g><title>unlink_chunk (75,027,599 samples, 0.13%)</title><rect x="18.1384%" y="197" width="0.1260%" height="15" fill="rgb(211,50,8)" fg:x="10803371138" fg:w="75027599"/><text x="18.3884%" y="207.50"></text></g><g><title>_int_realloc (930,306,671 samples, 1.56%)</title><rect x="16.7095%" y="229" width="1.5619%" height="15" fill="rgb(245,182,24)" fg:x="9952318572" fg:w="930306671"/><text x="16.9595%" y="239.50"></text></g><g><title>__GI___libc_realloc (993,064,625 samples, 1.67%)</title><rect x="16.6182%" y="245" width="1.6673%" height="15" fill="rgb(242,14,37)" fg:x="9897932100" fg:w="993064625"/><text x="16.8682%" y="255.50"></text></g><g><title>musable (8,371,482 samples, 0.01%)</title><rect x="18.2714%" y="229" width="0.0141%" height="15" fill="rgb(246,228,12)" fg:x="10882625243" fg:w="8371482"/><text x="18.5214%" y="239.50"></text></g><g><title>__rdl_realloc (20,846,236 samples, 0.03%)</title><rect x="18.2855%" y="245" width="0.0350%" height="15" fill="rgb(213,55,15)" fg:x="10890996725" fg:w="20846236"/><text x="18.5355%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,710,731,504 samples, 7.91%)</title><rect x="10.4393%" y="293" width="7.9091%" height="15" fill="rgb(209,9,3)" fg:x="6217746887" fg:w="4710731504"/><text x="10.6893%" y="303.50">&lt;alloc::vec..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,147,384,297 samples, 1.93%)</title><rect x="16.4220%" y="277" width="1.9264%" height="15" fill="rgb(230,59,30)" fg:x="9781094094" fg:w="1147384297"/><text x="16.6720%" y="287.50">a..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (1,068,262,539 samples, 1.79%)</title><rect x="16.5549%" y="261" width="1.7936%" height="15" fill="rgb(209,121,21)" fg:x="9860215852" fg:w="1068262539"/><text x="16.8049%" y="271.50">_..</text></g><g><title>__rust_realloc (16,635,430 samples, 0.03%)</title><rect x="18.3205%" y="245" width="0.0279%" height="15" fill="rgb(220,109,13)" fg:x="10911842961" fg:w="16635430"/><text x="18.5705%" y="255.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (33,386,749 samples, 0.06%)</title><rect x="18.3484%" y="293" width="0.0561%" height="15" fill="rgb(232,18,1)" fg:x="10928478391" fg:w="33386749"/><text x="18.5984%" y="303.50"></text></g><g><title>_int_free (41,326,487 samples, 0.07%)</title><rect x="18.4045%" y="277" width="0.0694%" height="15" fill="rgb(215,41,42)" fg:x="10961865140" fg:w="41326487"/><text x="18.6545%" y="287.50"></text></g><g><title>__GI___libc_free (62,004,740 samples, 0.10%)</title><rect x="18.4045%" y="293" width="0.1041%" height="15" fill="rgb(224,123,36)" fg:x="10961865140" fg:w="62004740"/><text x="18.6545%" y="303.50"></text></g><g><title>_int_free_merge_chunk (20,678,253 samples, 0.03%)</title><rect x="18.4739%" y="277" width="0.0347%" height="15" fill="rgb(240,125,3)" fg:x="11003191627" fg:w="20678253"/><text x="18.7239%" y="287.50"></text></g><g><title>_int_free_create_chunk (12,391,823 samples, 0.02%)</title><rect x="18.4878%" y="261" width="0.0208%" height="15" fill="rgb(205,98,50)" fg:x="11011478057" fg:w="12391823"/><text x="18.7378%" y="271.50"></text></g><g><title>unlink_chunk (8,212,440 samples, 0.01%)</title><rect x="18.4948%" y="245" width="0.0138%" height="15" fill="rgb(205,185,37)" fg:x="11015657440" fg:w="8212440"/><text x="18.7448%" y="255.50"></text></g><g><title>alloc_perturb (8,393,842 samples, 0.01%)</title><rect x="18.8788%" y="261" width="0.0141%" height="15" fill="rgb(238,207,15)" fg:x="11244357722" fg:w="8393842"/><text x="19.1288%" y="271.50"></text></g><g><title>malloc_consolidate (20,634,106 samples, 0.03%)</title><rect x="18.8929%" y="261" width="0.0346%" height="15" fill="rgb(213,199,42)" fg:x="11252751564" fg:w="20634106"/><text x="19.1429%" y="271.50"></text></g><g><title>__GI___libc_malloc (278,603,064 samples, 0.47%)</title><rect x="18.5086%" y="293" width="0.4678%" height="15" fill="rgb(235,201,11)" fg:x="11023869880" fg:w="278603064"/><text x="18.7586%" y="303.50"></text></g><g><title>_int_malloc (241,307,675 samples, 0.41%)</title><rect x="18.5712%" y="277" width="0.4051%" height="15" fill="rgb(207,46,11)" fg:x="11061165269" fg:w="241307675"/><text x="18.8212%" y="287.50"></text></g><g><title>unlink_chunk (29,087,274 samples, 0.05%)</title><rect x="18.9275%" y="261" width="0.0488%" height="15" fill="rgb(241,35,35)" fg:x="11273385670" fg:w="29087274"/><text x="19.1775%" y="271.50"></text></g><g><title>__rust_alloc (12,436,363 samples, 0.02%)</title><rect x="18.9833%" y="293" width="0.0209%" height="15" fill="rgb(243,32,47)" fg:x="11306631167" fg:w="12436363"/><text x="19.2333%" y="303.50"></text></g><g><title>_int_free (8,417,737 samples, 0.01%)</title><rect x="19.0111%" y="261" width="0.0141%" height="15" fill="rgb(247,202,23)" fg:x="11323156538" fg:w="8417737"/><text x="19.2611%" y="271.50"></text></g><g><title>__GI___libc_free (33,378,677 samples, 0.06%)</title><rect x="19.0111%" y="277" width="0.0560%" height="15" fill="rgb(219,102,11)" fg:x="11323156538" fg:w="33378677"/><text x="19.2611%" y="287.50"></text></g><g><title>_int_free_merge_chunk (24,960,940 samples, 0.04%)</title><rect x="19.0252%" y="261" width="0.0419%" height="15" fill="rgb(243,110,44)" fg:x="11331574275" fg:w="24960940"/><text x="19.2752%" y="271.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h8e0f56f6ac8014d1E.llvm.6127000297180534061 (10,341,499,246 samples, 17.36%)</title><rect x="6.7457%" y="309" width="17.3629%" height="15" fill="rgb(222,74,54)" fg:x="4017802257" fg:w="10341499246"/><text x="6.9957%" y="319.50">_ZN7lb_apis15del_pol_batche..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3,040,233,973 samples, 5.10%)</title><rect x="19.0042%" y="293" width="5.1044%" height="15" fill="rgb(216,99,12)" fg:x="11319067530" fg:w="3040233973"/><text x="19.2542%" y="303.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::RRPickerPicker&gt; (2,998,599,963 samples, 5.03%)</title><rect x="19.0741%" y="277" width="5.0345%" height="15" fill="rgb(226,22,26)" fg:x="11360701540" fg:w="2998599963"/><text x="19.3241%" y="287.50">core::..</text></g><g><title>__GI___libc_free (8,373,404 samples, 0.01%)</title><rect x="24.1086%" y="309" width="0.0141%" height="15" fill="rgb(217,163,10)" fg:x="14359301503" fg:w="8373404"/><text x="24.3586%" y="319.50"></text></g><g><title>__GI___libc_malloc (29,185,593 samples, 0.05%)</title><rect x="24.3192%" y="261" width="0.0490%" height="15" fill="rgb(213,25,53)" fg:x="14484701120" fg:w="29185593"/><text x="24.5692%" y="271.50"></text></g><g><title>tcache_get (12,428,578 samples, 0.02%)</title><rect x="24.3473%" y="245" width="0.0209%" height="15" fill="rgb(252,105,26)" fg:x="14501458135" fg:w="12428578"/><text x="24.5973%" y="255.50"></text></g><g><title>tcache_get_n (12,428,578 samples, 0.02%)</title><rect x="24.3473%" y="229" width="0.0209%" height="15" fill="rgb(220,39,43)" fg:x="14501458135" fg:w="12428578"/><text x="24.5973%" y="239.50"></text></g><g><title>__memset_avx2_unaligned (8,336,475 samples, 0.01%)</title><rect x="24.3682%" y="261" width="0.0140%" height="15" fill="rgb(229,68,48)" fg:x="14513886713" fg:w="8336475"/><text x="24.6182%" y="271.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h495a2cfee390e142E.llvm.2064171167310178009 (79,228,913 samples, 0.13%)</title><rect x="24.2631%" y="277" width="0.1330%" height="15" fill="rgb(252,8,32)" fg:x="14451306448" fg:w="79228913"/><text x="24.5131%" y="287.50"></text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::set (175,328,824 samples, 0.29%)</title><rect x="24.1297%" y="309" width="0.2944%" height="15" fill="rgb(223,20,43)" fg:x="14371844844" fg:w="175328824"/><text x="24.3797%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (150,369,792 samples, 0.25%)</title><rect x="24.1716%" y="293" width="0.2525%" height="15" fill="rgb(229,81,49)" fg:x="14396803876" fg:w="150369792"/><text x="24.4216%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,638,307 samples, 0.03%)</title><rect x="24.3961%" y="277" width="0.0279%" height="15" fill="rgb(236,28,36)" fg:x="14530535361" fg:w="16638307"/><text x="24.6461%" y="287.50"></text></g><g><title>rand::rng::Rng::gen_range (41,600,653 samples, 0.07%)</title><rect x="24.4241%" y="309" width="0.0698%" height="15" fill="rgb(249,185,26)" fg:x="14547173668" fg:w="41600653"/><text x="24.6741%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (12,362,688 samples, 0.02%)</title><rect x="24.4731%" y="293" width="0.0208%" height="15" fill="rgb(249,174,33)" fg:x="14576411633" fg:w="12362688"/><text x="24.7231%" y="303.50"></text></g><g><title>bencher::Bencher::iter (11,684,123,834 samples, 19.62%)</title><rect x="4.8838%" y="325" width="19.6171%" height="15" fill="rgb(233,201,37)" fg:x="2908850930" fg:w="11684123834"/><text x="5.1338%" y="335.50">bencher::Bencher::iter</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28,650,487 samples, 0.05%)</title><rect x="24.5010%" y="309" width="0.0481%" height="15" fill="rgb(221,78,26)" fg:x="14592974764" fg:w="28650487"/><text x="24.7510%" y="319.50"></text></g><g><title>__GI___libc_free (12,343,559 samples, 0.02%)</title><rect x="24.6522%" y="277" width="0.0207%" height="15" fill="rgb(250,127,30)" fg:x="14683059601" fg:w="12343559"/><text x="24.9022%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58,635,295 samples, 0.10%)</title><rect x="24.6043%" y="293" width="0.0984%" height="15" fill="rgb(230,49,44)" fg:x="14654517323" fg:w="58635295"/><text x="24.8543%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (17,749,458 samples, 0.03%)</title><rect x="24.6729%" y="277" width="0.0298%" height="15" fill="rgb(229,67,23)" fg:x="14695403160" fg:w="17749458"/><text x="24.9229%" y="287.50"></text></g><g><title>_int_free (53,380,754 samples, 0.09%)</title><rect x="24.7234%" y="277" width="0.0896%" height="15" fill="rgb(249,83,47)" fg:x="14725475968" fg:w="53380754"/><text x="24.9734%" y="287.50"></text></g><g><title>_int_free_maybe_consolidate (142,925,135 samples, 0.24%)</title><rect x="24.8130%" y="277" width="0.2400%" height="15" fill="rgb(215,43,3)" fg:x="14778856722" fg:w="142925135"/><text x="25.0630%" y="287.50"></text></g><g><title>malloc_consolidate (142,925,135 samples, 0.24%)</title><rect x="24.8130%" y="261" width="0.2400%" height="15" fill="rgb(238,154,13)" fg:x="14778856722" fg:w="142925135"/><text x="25.0630%" y="271.50"></text></g><g><title>unlink_chunk (61,761,927 samples, 0.10%)</title><rect x="24.9493%" y="245" width="0.1037%" height="15" fill="rgb(219,56,2)" fg:x="14860019930" fg:w="61761927"/><text x="25.1993%" y="255.50"></text></g><g><title>__GI___libc_free (224,723,661 samples, 0.38%)</title><rect x="24.7027%" y="293" width="0.3773%" height="15" fill="rgb(233,0,4)" fg:x="14713152618" fg:w="224723661"/><text x="24.9527%" y="303.50"></text></g><g><title>arena_for_chunk (12,101,346 samples, 0.02%)</title><rect x="25.0597%" y="277" width="0.0203%" height="15" fill="rgb(235,30,7)" fg:x="14925774933" fg:w="12101346"/><text x="25.3097%" y="287.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.13988653600275597160 (332,843,653 samples, 0.56%)</title><rect x="24.5491%" y="309" width="0.5588%" height="15" fill="rgb(250,79,13)" fg:x="14621625251" fg:w="332843653"/><text x="24.7991%" y="319.50"></text></g><g><title>__rdl_dealloc (16,592,625 samples, 0.03%)</title><rect x="25.0800%" y="293" width="0.0279%" height="15" fill="rgb(211,146,34)" fg:x="14937876279" fg:w="16592625"/><text x="25.3300%" y="303.50"></text></g><g><title>_int_free_maybe_consolidate (16,356,161 samples, 0.03%)</title><rect x="25.1147%" y="293" width="0.0275%" height="15" fill="rgb(228,22,38)" fg:x="14958516577" fg:w="16356161"/><text x="25.3647%" y="303.50"></text></g><g><title>malloc_consolidate (16,356,161 samples, 0.03%)</title><rect x="25.1147%" y="277" width="0.0275%" height="15" fill="rgb(235,168,5)" fg:x="14958516577" fg:w="16356161"/><text x="25.3647%" y="287.50"></text></g><g><title>unlink_chunk (8,228,464 samples, 0.01%)</title><rect x="25.1283%" y="261" width="0.0138%" height="15" fill="rgb(221,155,16)" fg:x="14966644274" fg:w="8228464"/><text x="25.3783%" y="271.50"></text></g><g><title>__GI___libc_free (24,519,940 samples, 0.04%)</title><rect x="25.1079%" y="309" width="0.0412%" height="15" fill="rgb(215,215,53)" fg:x="14954468904" fg:w="24519940"/><text x="25.3579%" y="319.50"></text></g><g><title>lb_apis::batched (14,987,193,599 samples, 25.16%)</title><rect x="0.0068%" y="341" width="25.1628%" height="15" fill="rgb(223,4,10)" fg:x="4067358" fg:w="14987193599"/><text x="0.2568%" y="351.50">lb_apis::batched</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::DelegatingPolicy&gt; (398,286,193 samples, 0.67%)</title><rect x="24.5010%" y="325" width="0.6687%" height="15" fill="rgb(234,103,6)" fg:x="14592974764" fg:w="398286193"/><text x="24.7510%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (12,272,113 samples, 0.02%)</title><rect x="25.1491%" y="309" width="0.0206%" height="15" fill="rgb(227,97,0)" fg:x="14978988844" fg:w="12272113"/><text x="25.3991%" y="319.50"></text></g><g><title>__GI___libc_malloc (29,118,861 samples, 0.05%)</title><rect x="25.5920%" y="245" width="0.0489%" height="15" fill="rgb(234,150,53)" fg:x="15242797678" fg:w="29118861"/><text x="25.8420%" y="255.50"></text></g><g><title>_int_malloc (24,972,099 samples, 0.04%)</title><rect x="25.5989%" y="229" width="0.0419%" height="15" fill="rgb(228,201,54)" fg:x="15246944440" fg:w="24972099"/><text x="25.8489%" y="239.50"></text></g><g><title>[unknown] (8,317,094 samples, 0.01%)</title><rect x="25.6269%" y="213" width="0.0140%" height="15" fill="rgb(222,22,37)" fg:x="15263599445" fg:w="8317094"/><text x="25.8769%" y="223.50"></text></g><g><title>[unknown] (8,317,094 samples, 0.01%)</title><rect x="25.6269%" y="197" width="0.0140%" height="15" fill="rgb(237,53,32)" fg:x="15263599445" fg:w="8317094"/><text x="25.8769%" y="207.50"></text></g><g><title>_ZN115_$LT$lb_apis..del_pol_cb..WrappedController$u20$as$u20$grpc..client..load_balancing..ChannelControllerCallbacks$GT$14new_subchannel17h0141975eaf9a6d3bE.llvm.8308943596923409684 (70,706,946 samples, 0.12%)</title><rect x="25.5292%" y="261" width="0.1187%" height="15" fill="rgb(233,25,53)" fg:x="15205436570" fg:w="70706946"/><text x="25.7792%" y="271.50"></text></g><g><title>alloc_perturb (8,344,742 samples, 0.01%)</title><rect x="25.8280%" y="213" width="0.0140%" height="15" fill="rgb(210,40,34)" fg:x="15383360120" fg:w="8344742"/><text x="26.0780%" y="223.50"></text></g><g><title>__GI___libc_malloc (86,506,849 samples, 0.15%)</title><rect x="25.7175%" y="245" width="0.1452%" height="15" fill="rgb(241,220,44)" fg:x="15317564737" fg:w="86506849"/><text x="25.9675%" y="255.50"></text></g><g><title>_int_malloc (61,886,083 samples, 0.10%)</title><rect x="25.7588%" y="229" width="0.1039%" height="15" fill="rgb(235,28,35)" fg:x="15342185503" fg:w="61886083"/><text x="26.0088%" y="239.50"></text></g><g><title>tcache_get (8,272,154 samples, 0.01%)</title><rect x="25.8489%" y="213" width="0.0139%" height="15" fill="rgb(210,56,17)" fg:x="15395799432" fg:w="8272154"/><text x="26.0989%" y="223.50"></text></g><g><title>tcache_get_n (8,272,154 samples, 0.01%)</title><rect x="25.8489%" y="197" width="0.0139%" height="15" fill="rgb(224,130,29)" fg:x="15395799432" fg:w="8272154"/><text x="26.0989%" y="207.50"></text></g><g><title>_ZN116_$LT$lb_apis..StubChannelControllerCallbacks$u20$as$u20$grpc..client..load_balancing..ChannelControllerCallbacks$GT$14new_subchannel17hcdcb3d6e4c734d49E.llvm.8982057957549636664 (136,119,580 samples, 0.23%)</title><rect x="25.6480%" y="261" width="0.2285%" height="15" fill="rgb(235,212,8)" fg:x="15276143516" fg:w="136119580"/><text x="25.8980%" y="271.50"></text></g><g><title>__rust_alloc (8,191,510 samples, 0.01%)</title><rect x="25.8627%" y="245" width="0.0138%" height="15" fill="rgb(223,33,50)" fg:x="15404071586" fg:w="8191510"/><text x="26.1127%" y="255.50"></text></g><g><title>_int_malloc (33,266,584 samples, 0.06%)</title><rect x="25.8996%" y="245" width="0.0559%" height="15" fill="rgb(219,149,13)" fg:x="15426046656" fg:w="33266584"/><text x="26.1496%" y="255.50"></text></g><g><title>__GI___libc_malloc (51,214,398 samples, 0.09%)</title><rect x="25.8765%" y="261" width="0.0860%" height="15" fill="rgb(250,156,29)" fg:x="15412263096" fg:w="51214398"/><text x="26.1265%" y="271.50"></text></g><g><title>__GI___libc_realloc (20,855,292 samples, 0.04%)</title><rect x="25.9695%" y="229" width="0.0350%" height="15" fill="rgb(216,193,19)" fg:x="15467653672" fg:w="20855292"/><text x="26.2195%" y="239.50"></text></g><g><title>_int_realloc (20,855,292 samples, 0.04%)</title><rect x="25.9695%" y="213" width="0.0350%" height="15" fill="rgb(216,135,14)" fg:x="15467653672" fg:w="20855292"/><text x="26.2195%" y="223.50"></text></g><g><title>_int_malloc (20,855,292 samples, 0.04%)</title><rect x="25.9695%" y="197" width="0.0350%" height="15" fill="rgb(241,47,5)" fg:x="15467653672" fg:w="20855292"/><text x="26.2195%" y="207.50"></text></g><g><title>[unknown] (12,515,554 samples, 0.02%)</title><rect x="25.9835%" y="181" width="0.0210%" height="15" fill="rgb(233,42,35)" fg:x="15475993410" fg:w="12515554"/><text x="26.2335%" y="191.50"></text></g><g><title>[unknown] (12,515,554 samples, 0.02%)</title><rect x="25.9835%" y="165" width="0.0210%" height="15" fill="rgb(231,13,6)" fg:x="15475993410" fg:w="12515554"/><text x="26.2335%" y="175.50"></text></g><g><title>[unknown] (12,515,554 samples, 0.02%)</title><rect x="25.9835%" y="149" width="0.0210%" height="15" fill="rgb(207,181,40)" fg:x="15475993410" fg:w="12515554"/><text x="26.2335%" y="159.50"></text></g><g><title>[unknown] (12,515,554 samples, 0.02%)</title><rect x="25.9835%" y="133" width="0.0210%" height="15" fill="rgb(254,173,49)" fg:x="15475993410" fg:w="12515554"/><text x="26.2335%" y="143.50"></text></g><g><title>[unknown] (12,515,554 samples, 0.02%)</title><rect x="25.9835%" y="117" width="0.0210%" height="15" fill="rgb(221,1,38)" fg:x="15475993410" fg:w="12515554"/><text x="26.2335%" y="127.50"></text></g><g><title>[unknown] (12,515,554 samples, 0.02%)</title><rect x="25.9835%" y="101" width="0.0210%" height="15" fill="rgb(206,124,46)" fg:x="15475993410" fg:w="12515554"/><text x="26.2335%" y="111.50"></text></g><g><title>[unknown] (12,515,554 samples, 0.02%)</title><rect x="25.9835%" y="85" width="0.0210%" height="15" fill="rgb(249,21,11)" fg:x="15475993410" fg:w="12515554"/><text x="26.2335%" y="95.50"></text></g><g><title>[unknown] (12,515,554 samples, 0.02%)</title><rect x="25.9835%" y="69" width="0.0210%" height="15" fill="rgb(222,201,40)" fg:x="15475993410" fg:w="12515554"/><text x="26.2335%" y="79.50"></text></g><g><title>[unknown] (8,350,507 samples, 0.01%)</title><rect x="25.9905%" y="53" width="0.0140%" height="15" fill="rgb(235,61,29)" fg:x="15480158457" fg:w="8350507"/><text x="26.2405%" y="63.50"></text></g><g><title>[unknown] (8,350,507 samples, 0.01%)</title><rect x="25.9905%" y="37" width="0.0140%" height="15" fill="rgb(219,207,3)" fg:x="15480158457" fg:w="8350507"/><text x="26.2405%" y="47.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel (336,744,645 samples, 0.57%)</title><rect x="25.4461%" y="277" width="0.5654%" height="15" fill="rgb(222,56,46)" fg:x="15155935171" fg:w="336744645"/><text x="25.6961%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (25,026,144 samples, 0.04%)</title><rect x="25.9695%" y="261" width="0.0420%" height="15" fill="rgb(239,76,54)" fg:x="15467653672" fg:w="25026144"/><text x="26.2195%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (25,026,144 samples, 0.04%)</title><rect x="25.9695%" y="245" width="0.0420%" height="15" fill="rgb(231,124,27)" fg:x="15467653672" fg:w="25026144"/><text x="26.2195%" y="255.50"></text></g><g><title>_int_free (32,987,082 samples, 0.06%)</title><rect x="26.0531%" y="261" width="0.0554%" height="15" fill="rgb(249,195,6)" fg:x="15517452149" fg:w="32987082"/><text x="26.3031%" y="271.50"></text></g><g><title>__GI___libc_free (61,932,935 samples, 0.10%)</title><rect x="26.0115%" y="277" width="0.1040%" height="15" fill="rgb(237,174,47)" fg:x="15492679816" fg:w="61932935"/><text x="26.2615%" y="287.50"></text></g><g><title>_int_malloc (24,782,434 samples, 0.04%)</title><rect x="26.1225%" y="261" width="0.0416%" height="15" fill="rgb(206,201,31)" fg:x="15558798901" fg:w="24782434"/><text x="26.3725%" y="271.50"></text></g><g><title>tcache_put (8,285,771 samples, 0.01%)</title><rect x="26.1502%" y="245" width="0.0139%" height="15" fill="rgb(231,57,52)" fg:x="15575295564" fg:w="8285771"/><text x="26.4002%" y="255.50"></text></g><g><title>__GI___libc_malloc (37,145,841 samples, 0.06%)</title><rect x="26.1155%" y="277" width="0.0624%" height="15" fill="rgb(248,177,22)" fg:x="15554612751" fg:w="37145841"/><text x="26.3655%" y="287.50"></text></g><g><title>tcache_get (8,177,257 samples, 0.01%)</title><rect x="26.1641%" y="261" width="0.0137%" height="15" fill="rgb(215,211,37)" fg:x="15583581335" fg:w="8177257"/><text x="26.4141%" y="271.50"></text></g><g><title>tcache_get_n (8,177,257 samples, 0.01%)</title><rect x="26.1641%" y="245" width="0.0137%" height="15" fill="rgb(241,128,51)" fg:x="15583581335" fg:w="8177257"/><text x="26.4141%" y="255.50"></text></g><g><title>__rdl_dealloc (8,288,730 samples, 0.01%)</title><rect x="26.1779%" y="277" width="0.0139%" height="15" fill="rgb(227,165,31)" fg:x="15591758592" fg:w="8288730"/><text x="26.4279%" y="287.50"></text></g><g><title>__GI___libc_malloc (16,642,364 samples, 0.03%)</title><rect x="26.3176%" y="245" width="0.0279%" height="15" fill="rgb(228,167,24)" fg:x="15674985292" fg:w="16642364"/><text x="26.5676%" y="255.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.7027266497679388191 (89,020,887 samples, 0.15%)</title><rect x="26.2751%" y="261" width="0.1495%" height="15" fill="rgb(228,143,12)" fg:x="15649645148" fg:w="89020887"/><text x="26.5251%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (47,038,379 samples, 0.08%)</title><rect x="26.3455%" y="245" width="0.0790%" height="15" fill="rgb(249,149,8)" fg:x="15691627656" fg:w="47038379"/><text x="26.5955%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,306,150 samples, 0.01%)</title><rect x="26.4106%" y="229" width="0.0139%" height="15" fill="rgb(243,35,44)" fg:x="15730359885" fg:w="8306150"/><text x="26.6606%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (171,894,599 samples, 0.29%)</title><rect x="26.1918%" y="277" width="0.2886%" height="15" fill="rgb(246,89,9)" fg:x="15600047322" fg:w="171894599"/><text x="26.4418%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33,275,886 samples, 0.06%)</title><rect x="26.4245%" y="261" width="0.0559%" height="15" fill="rgb(233,213,13)" fg:x="15738666035" fg:w="33275886"/><text x="26.6745%" y="271.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (744,417,335 samples, 1.25%)</title><rect x="25.2932%" y="293" width="1.2498%" height="15" fill="rgb(233,141,41)" fg:x="15064827940" fg:w="744417335"/><text x="25.5432%" y="303.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (37,303,354 samples, 0.06%)</title><rect x="26.4804%" y="277" width="0.0626%" height="15" fill="rgb(239,167,4)" fg:x="15771941921" fg:w="37303354"/><text x="26.7304%" y="287.50"></text></g><g><title>__GI___libc_malloc (107,616,160 samples, 0.18%)</title><rect x="26.6749%" y="245" width="0.1807%" height="15" fill="rgb(209,217,16)" fg:x="15887798399" fg:w="107616160"/><text x="26.9249%" y="255.50"></text></g><g><title>_int_malloc (74,635,446 samples, 0.13%)</title><rect x="26.7303%" y="229" width="0.1253%" height="15" fill="rgb(219,88,35)" fg:x="15920779113" fg:w="74635446"/><text x="26.9803%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned (8,239,007 samples, 0.01%)</title><rect x="26.8556%" y="245" width="0.0138%" height="15" fill="rgb(220,193,23)" fg:x="15995414559" fg:w="8239007"/><text x="27.1056%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (132,428,925 samples, 0.22%)</title><rect x="26.6610%" y="261" width="0.2223%" height="15" fill="rgb(230,90,52)" fg:x="15879498831" fg:w="132428925"/><text x="26.9110%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,274,190 samples, 0.01%)</title><rect x="26.8694%" y="245" width="0.0139%" height="15" fill="rgb(252,106,19)" fg:x="16003653566" fg:w="8274190"/><text x="27.1194%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (194,335,897 samples, 0.33%)</title><rect x="26.5710%" y="277" width="0.3263%" height="15" fill="rgb(206,74,20)" fg:x="15825887604" fg:w="194335897"/><text x="26.8210%" y="287.50"></text></g><g><title>__GI___libc_malloc (8,295,745 samples, 0.01%)</title><rect x="26.8833%" y="261" width="0.0139%" height="15" fill="rgb(230,138,44)" fg:x="16011927756" fg:w="8295745"/><text x="27.1333%" y="271.50"></text></g><g><title>_int_malloc (8,295,745 samples, 0.01%)</title><rect x="26.8833%" y="245" width="0.0139%" height="15" fill="rgb(235,182,43)" fg:x="16011927756" fg:w="8295745"/><text x="27.1333%" y="255.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17he913d698642fd5ddE.llvm.8308943596923409684 (210,994,156 samples, 0.35%)</title><rect x="26.5499%" y="293" width="0.3542%" height="15" fill="rgb(242,16,51)" fg:x="15813354470" fg:w="210994156"/><text x="26.7999%" y="303.50"></text></g><g><title>__GI___libc_malloc (8,318,183 samples, 0.01%)</title><rect x="26.9042%" y="293" width="0.0140%" height="15" fill="rgb(248,9,4)" fg:x="16024348626" fg:w="8318183"/><text x="27.1542%" y="303.50"></text></g><g><title>_int_malloc (8,318,183 samples, 0.01%)</title><rect x="26.9042%" y="277" width="0.0140%" height="15" fill="rgb(210,31,22)" fg:x="16024348626" fg:w="8318183"/><text x="27.1542%" y="287.50"></text></g><g><title>[unknown] (16,457,339 samples, 0.03%)</title><rect x="27.2145%" y="245" width="0.0276%" height="15" fill="rgb(239,54,39)" fg:x="16209173437" fg:w="16457339"/><text x="27.4645%" y="255.50"></text></g><g><title>[unknown] (16,457,339 samples, 0.03%)</title><rect x="27.2145%" y="229" width="0.0276%" height="15" fill="rgb(230,99,41)" fg:x="16209173437" fg:w="16457339"/><text x="27.4645%" y="239.50"></text></g><g><title>[unknown] (12,379,015 samples, 0.02%)</title><rect x="27.2213%" y="213" width="0.0208%" height="15" fill="rgb(253,106,12)" fg:x="16213251761" fg:w="12379015"/><text x="27.4713%" y="223.50"></text></g><g><title>[unknown] (12,379,015 samples, 0.02%)</title><rect x="27.2213%" y="197" width="0.0208%" height="15" fill="rgb(213,46,41)" fg:x="16213251761" fg:w="12379015"/><text x="27.4713%" y="207.50"></text></g><g><title>[unknown] (12,379,015 samples, 0.02%)</title><rect x="27.2213%" y="181" width="0.0208%" height="15" fill="rgb(215,133,35)" fg:x="16213251761" fg:w="12379015"/><text x="27.4713%" y="191.50"></text></g><g><title>[unknown] (8,223,624 samples, 0.01%)</title><rect x="27.2283%" y="165" width="0.0138%" height="15" fill="rgb(213,28,5)" fg:x="16217407152" fg:w="8223624"/><text x="27.4783%" y="175.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.7027266497679388191 (169,261,696 samples, 0.28%)</title><rect x="27.0410%" y="261" width="0.2842%" height="15" fill="rgb(215,77,49)" fg:x="16105879045" fg:w="169261696"/><text x="27.2910%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45,400,310 samples, 0.08%)</title><rect x="27.2490%" y="245" width="0.0762%" height="15" fill="rgb(248,100,22)" fg:x="16229740431" fg:w="45400310"/><text x="27.4990%" y="255.50"></text></g><g><title>grpc::client::load_balancing::child_manager_cb::Inner&lt;T&gt;::resolve_child_controller (267,464,718 samples, 0.45%)</title><rect x="26.9250%" y="293" width="0.4491%" height="15" fill="rgb(208,67,9)" fg:x="16036741992" fg:w="267464718"/><text x="27.1750%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (255,076,638 samples, 0.43%)</title><rect x="26.9458%" y="277" width="0.4283%" height="15" fill="rgb(219,133,21)" fg:x="16049130072" fg:w="255076638"/><text x="27.1958%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29,065,969 samples, 0.05%)</title><rect x="27.3252%" y="261" width="0.0488%" height="15" fill="rgb(246,46,29)" fg:x="16275140741" fg:w="29065969"/><text x="27.5752%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (1,297,325,233 samples, 2.18%)</title><rect x="25.2862%" y="309" width="2.1782%" height="15" fill="rgb(246,185,52)" fg:x="15060698070" fg:w="1297325233"/><text x="25.5362%" y="319.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (53,816,593 samples, 0.09%)</title><rect x="27.3740%" y="293" width="0.0904%" height="15" fill="rgb(252,136,11)" fg:x="16304206710" fg:w="53816593"/><text x="27.6240%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (53,816,593 samples, 0.09%)</title><rect x="27.3740%" y="277" width="0.0904%" height="15" fill="rgb(219,138,53)" fg:x="16304206710" fg:w="53816593"/><text x="27.6240%" y="287.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (49,701,645 samples, 0.08%)</title><rect x="27.3809%" y="261" width="0.0834%" height="15" fill="rgb(211,51,23)" fg:x="16308321658" fg:w="49701645"/><text x="27.6309%" y="271.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.7022287322672284463 (37,325,815 samples, 0.06%)</title><rect x="27.4017%" y="245" width="0.0627%" height="15" fill="rgb(247,221,28)" fg:x="16320697488" fg:w="37325815"/><text x="27.6517%" y="255.50"></text></g><g><title>&lt;lb_apis::del_pol_cb::DelegatingPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (1,305,554,539 samples, 2.19%)</title><rect x="25.2793%" y="325" width="2.1920%" height="15" fill="rgb(251,222,45)" fg:x="15056571538" fg:w="1305554539"/><text x="25.5293%" y="335.50">&lt;..</text></g><g><title>_int_free (28,837,226 samples, 0.05%)</title><rect x="27.4783%" y="309" width="0.0484%" height="15" fill="rgb(217,162,53)" fg:x="16366317709" fg:w="28837226"/><text x="27.7283%" y="319.50"></text></g><g><title>__GI___libc_free (169,448,128 samples, 0.28%)</title><rect x="27.4783%" y="325" width="0.2845%" height="15" fill="rgb(229,93,14)" fg:x="16366317709" fg:w="169448128"/><text x="27.7283%" y="335.50"></text></g><g><title>_int_free_maybe_consolidate (140,610,902 samples, 0.24%)</title><rect x="27.5267%" y="309" width="0.2361%" height="15" fill="rgb(209,67,49)" fg:x="16395154935" fg:w="140610902"/><text x="27.7767%" y="319.50"></text></g><g><title>malloc_consolidate (140,610,902 samples, 0.24%)</title><rect x="27.5267%" y="293" width="0.2361%" height="15" fill="rgb(213,87,29)" fg:x="16395154935" fg:w="140610902"/><text x="27.7767%" y="303.50"></text></g><g><title>unlink_chunk (37,164,902 samples, 0.06%)</title><rect x="27.7004%" y="277" width="0.0624%" height="15" fill="rgb(205,151,52)" fg:x="16498600935" fg:w="37164902"/><text x="27.9504%" y="287.50"></text></g><g><title>__GI___libc_malloc (74,737,833 samples, 0.13%)</title><rect x="27.7628%" y="325" width="0.1255%" height="15" fill="rgb(253,215,39)" fg:x="16535765837" fg:w="74737833"/><text x="28.0128%" y="335.50"></text></g><g><title>_int_malloc (62,233,551 samples, 0.10%)</title><rect x="27.7838%" y="309" width="0.1045%" height="15" fill="rgb(221,220,41)" fg:x="16548270119" fg:w="62233551"/><text x="28.0338%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (37,189,299 samples, 0.06%)</title><rect x="27.9856%" y="293" width="0.0624%" height="15" fill="rgb(218,133,21)" fg:x="16668436959" fg:w="37189299"/><text x="28.2356%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned (8,331,419 samples, 0.01%)</title><rect x="28.1240%" y="261" width="0.0140%" height="15" fill="rgb(221,193,43)" fg:x="16750886929" fg:w="8331419"/><text x="28.3740%" y="271.50"></text></g><g><title>_int_malloc (82,003,716 samples, 0.14%)</title><rect x="28.2287%" y="213" width="0.1377%" height="15" fill="rgb(240,128,52)" fg:x="16813279990" fg:w="82003716"/><text x="28.4787%" y="223.50"></text></g><g><title>checked_request2size (8,183,911 samples, 0.01%)</title><rect x="28.3527%" y="197" width="0.0137%" height="15" fill="rgb(253,114,12)" fg:x="16887099795" fg:w="8183911"/><text x="28.6027%" y="207.50"></text></g><g><title>__GI___libc_malloc (119,702,389 samples, 0.20%)</title><rect x="28.1730%" y="229" width="0.2010%" height="15" fill="rgb(215,223,47)" fg:x="16780078150" fg:w="119702389"/><text x="28.4230%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (173,808,317 samples, 0.29%)</title><rect x="28.0961%" y="277" width="0.2918%" height="15" fill="rgb(248,225,23)" fg:x="16734304407" fg:w="173808317"/><text x="28.3461%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (148,894,376 samples, 0.25%)</title><rect x="28.1380%" y="261" width="0.2500%" height="15" fill="rgb(250,108,0)" fg:x="16759218348" fg:w="148894376"/><text x="28.3880%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (136,384,327 samples, 0.23%)</title><rect x="28.1590%" y="245" width="0.2290%" height="15" fill="rgb(228,208,7)" fg:x="16771728397" fg:w="136384327"/><text x="28.4090%" y="255.50"></text></g><g><title>__rust_alloc (8,332,185 samples, 0.01%)</title><rect x="28.3740%" y="229" width="0.0140%" height="15" fill="rgb(244,45,10)" fg:x="16899780539" fg:w="8332185"/><text x="28.6240%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (364,303,560 samples, 0.61%)</title><rect x="27.8952%" y="325" width="0.6116%" height="15" fill="rgb(207,125,25)" fg:x="16614612180" fg:w="364303560"/><text x="28.1452%" y="335.50"></text></g><g><title>core::fmt::write (347,764,772 samples, 0.58%)</title><rect x="27.9230%" y="309" width="0.5839%" height="15" fill="rgb(210,195,18)" fg:x="16631150968" fg:w="347764772"/><text x="28.1730%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (273,289,482 samples, 0.46%)</title><rect x="28.0480%" y="293" width="0.4588%" height="15" fill="rgb(249,80,12)" fg:x="16705626258" fg:w="273289482"/><text x="28.2980%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral (70,803,016 samples, 0.12%)</title><rect x="28.3880%" y="277" width="0.1189%" height="15" fill="rgb(221,65,9)" fg:x="16908112724" fg:w="70803016"/><text x="28.6380%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (25,074,271 samples, 0.04%)</title><rect x="28.4647%" y="261" width="0.0421%" height="15" fill="rgb(235,49,36)" fg:x="16953841469" fg:w="25074271"/><text x="28.7147%" y="271.50"></text></g><g><title>__GI_memcpy (20,406,797 samples, 0.03%)</title><rect x="28.5207%" y="261" width="0.0343%" height="15" fill="rgb(225,32,20)" fg:x="16987184440" fg:w="20406797"/><text x="28.7707%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16,292,177 samples, 0.03%)</title><rect x="28.5276%" y="245" width="0.0274%" height="15" fill="rgb(215,141,46)" fg:x="16991299060" fg:w="16292177"/><text x="28.7776%" y="255.50"></text></g><g><title>_int_malloc (144,073,781 samples, 0.24%)</title><rect x="28.5550%" y="261" width="0.2419%" height="15" fill="rgb(250,160,47)" fg:x="17007591237" fg:w="144073781"/><text x="28.8050%" y="271.50"></text></g><g><title>malloc_consolidate (86,710,938 samples, 0.15%)</title><rect x="28.6513%" y="245" width="0.1456%" height="15" fill="rgb(216,222,40)" fg:x="17064954080" fg:w="86710938"/><text x="28.9013%" y="255.50"></text></g><g><title>unlink_chunk (33,190,145 samples, 0.06%)</title><rect x="28.7412%" y="229" width="0.0557%" height="15" fill="rgb(234,217,39)" fg:x="17118474873" fg:w="33190145"/><text x="28.9912%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (176,940,081 samples, 0.30%)</title><rect x="28.5068%" y="325" width="0.2971%" height="15" fill="rgb(207,178,40)" fg:x="16978915740" fg:w="176940081"/><text x="28.7568%" y="335.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (176,940,081 samples, 0.30%)</title><rect x="28.5068%" y="309" width="0.2971%" height="15" fill="rgb(221,136,13)" fg:x="16978915740" fg:w="176940081"/><text x="28.7568%" y="319.50"></text></g><g><title>__GI___libc_realloc (168,671,381 samples, 0.28%)</title><rect x="28.5207%" y="293" width="0.2832%" height="15" fill="rgb(249,199,10)" fg:x="16987184440" fg:w="168671381"/><text x="28.7707%" y="303.50"></text></g><g><title>_int_realloc (168,671,381 samples, 0.28%)</title><rect x="28.5207%" y="277" width="0.2832%" height="15" fill="rgb(249,222,13)" fg:x="16987184440" fg:w="168671381"/><text x="28.7707%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,709,902 samples, 0.04%)</title><rect x="28.8593%" y="309" width="0.0415%" height="15" fill="rgb(244,185,38)" fg:x="17188828111" fg:w="24709902"/><text x="29.1093%" y="319.50"></text></g><g><title>_int_free (16,498,111 samples, 0.03%)</title><rect x="28.9561%" y="277" width="0.0277%" height="15" fill="rgb(236,202,9)" fg:x="17246522419" fg:w="16498111"/><text x="29.2061%" y="287.50"></text></g><g><title>__GI___libc_free (41,220,077 samples, 0.07%)</title><rect x="28.9217%" y="293" width="0.0692%" height="15" fill="rgb(250,229,37)" fg:x="17226025206" fg:w="41220077"/><text x="29.1717%" y="303.50"></text></g><g><title>__GI___libc_free (20,677,072 samples, 0.03%)</title><rect x="29.0327%" y="261" width="0.0347%" height="15" fill="rgb(206,174,23)" fg:x="17292135843" fg:w="20677072"/><text x="29.2827%" y="271.50"></text></g><g><title>_int_free (20,677,072 samples, 0.03%)</title><rect x="29.0327%" y="245" width="0.0347%" height="15" fill="rgb(211,33,43)" fg:x="17292135843" fg:w="20677072"/><text x="29.2827%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (61,941,483 samples, 0.10%)</title><rect x="28.9979%" y="277" width="0.1040%" height="15" fill="rgb(245,58,50)" fg:x="17271401338" fg:w="61941483"/><text x="29.2479%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (20,529,906 samples, 0.03%)</title><rect x="29.0674%" y="261" width="0.0345%" height="15" fill="rgb(244,68,36)" fg:x="17312812915" fg:w="20529906"/><text x="29.3174%" y="271.50"></text></g><g><title>_int_free_maybe_consolidate (99,050,977 samples, 0.17%)</title><rect x="29.1019%" y="261" width="0.1663%" height="15" fill="rgb(232,229,15)" fg:x="17333342821" fg:w="99050977"/><text x="29.3519%" y="271.50"></text></g><g><title>malloc_consolidate (99,050,977 samples, 0.17%)</title><rect x="29.1019%" y="245" width="0.1663%" height="15" fill="rgb(254,30,23)" fg:x="17333342821" fg:w="99050977"/><text x="29.3519%" y="255.50"></text></g><g><title>unlink_chunk (49,305,709 samples, 0.08%)</title><rect x="29.1854%" y="229" width="0.0828%" height="15" fill="rgb(235,160,14)" fg:x="17383088089" fg:w="49305709"/><text x="29.4354%" y="239.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.13988653600275597160 (231,391,408 samples, 0.39%)</title><rect x="28.9008%" y="309" width="0.3885%" height="15" fill="rgb(212,155,44)" fg:x="17213538013" fg:w="231391408"/><text x="29.1508%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (173,528,083 samples, 0.29%)</title><rect x="28.9979%" y="293" width="0.2913%" height="15" fill="rgb(226,2,50)" fg:x="17271401338" fg:w="173528083"/><text x="29.2479%" y="303.50"></text></g><g><title>__GI___libc_free (111,586,600 samples, 0.19%)</title><rect x="29.1019%" y="277" width="0.1873%" height="15" fill="rgb(234,177,6)" fg:x="17333342821" fg:w="111586600"/><text x="29.3519%" y="287.50"></text></g><g><title>_int_free_merge_chunk (12,535,623 samples, 0.02%)</title><rect x="29.2682%" y="261" width="0.0210%" height="15" fill="rgb(217,24,9)" fg:x="17432393798" fg:w="12535623"/><text x="29.5182%" y="271.50"></text></g><g><title>_int_free_create_chunk (12,535,623 samples, 0.02%)</title><rect x="29.2682%" y="245" width="0.0210%" height="15" fill="rgb(220,13,46)" fg:x="17432393798" fg:w="12535623"/><text x="29.5182%" y="255.50"></text></g><g><title>unlink_chunk (12,535,623 samples, 0.02%)</title><rect x="29.2682%" y="229" width="0.0210%" height="15" fill="rgb(239,221,27)" fg:x="17432393798" fg:w="12535623"/><text x="29.5182%" y="239.50"></text></g><g><title>_int_free (16,606,990 samples, 0.03%)</title><rect x="29.3031%" y="293" width="0.0279%" height="15" fill="rgb(222,198,25)" fg:x="17453192519" fg:w="16606990"/><text x="29.5531%" y="303.50"></text></g><g><title>__GI___libc_free (28,806,530 samples, 0.05%)</title><rect x="29.2893%" y="309" width="0.0484%" height="15" fill="rgb(211,99,13)" fg:x="17444929421" fg:w="28806530"/><text x="29.5393%" y="319.50"></text></g><g><title>__GI___libc_free (20,774,611 samples, 0.03%)</title><rect x="29.3952%" y="293" width="0.0349%" height="15" fill="rgb(232,111,31)" fg:x="17508040372" fg:w="20774611"/><text x="29.6452%" y="303.50"></text></g><g><title>_int_free (12,510,262 samples, 0.02%)</title><rect x="29.4091%" y="277" width="0.0210%" height="15" fill="rgb(245,82,37)" fg:x="17516304721" fg:w="12510262"/><text x="29.6591%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (422,527,191 samples, 0.71%)</title><rect x="28.8039%" y="325" width="0.7094%" height="15" fill="rgb(227,149,46)" fg:x="17155855821" fg:w="422527191"/><text x="29.0539%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::del_pol_cb::WrappedController as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (96,522,531 samples, 0.16%)</title><rect x="29.3513%" y="309" width="0.1621%" height="15" fill="rgb(218,36,50)" fg:x="17481860481" fg:w="96522531"/><text x="29.6013%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;grpc::client::name_resolution::Endpoint&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (49,568,029 samples, 0.08%)</title><rect x="29.4301%" y="293" width="0.0832%" height="15" fill="rgb(226,80,48)" fg:x="17528814983" fg:w="49568029"/><text x="29.6801%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::{{closure}}&gt; (12,427,588 samples, 0.02%)</title><rect x="29.4925%" y="277" width="0.0209%" height="15" fill="rgb(238,224,15)" fg:x="17565955424" fg:w="12427588"/><text x="29.7425%" y="287.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (44,034,149 samples, 0.07%)</title><rect x="29.5481%" y="309" width="0.0739%" height="15" fill="rgb(241,136,10)" fg:x="17599114057" fg:w="44034149"/><text x="29.7981%" y="319.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (32,897,512 samples, 0.06%)</title><rect x="32.2869%" y="245" width="0.0552%" height="15" fill="rgb(208,32,45)" fg:x="19230329558" fg:w="32897512"/><text x="32.5369%" y="255.50"></text></g><g><title>__GI___libc_malloc (24,795,601 samples, 0.04%)</title><rect x="32.3421%" y="245" width="0.0416%" height="15" fill="rgb(207,135,9)" fg:x="19263227070" fg:w="24795601"/><text x="32.5921%" y="255.50"></text></g><g><title>tcache_get (16,609,448 samples, 0.03%)</title><rect x="32.3558%" y="229" width="0.0279%" height="15" fill="rgb(206,86,44)" fg:x="19271413223" fg:w="16609448"/><text x="32.6058%" y="239.50"></text></g><g><title>tcache_get_n (16,609,448 samples, 0.03%)</title><rect x="32.3558%" y="213" width="0.0279%" height="15" fill="rgb(245,177,15)" fg:x="19271413223" fg:w="16609448"/><text x="32.6058%" y="223.50"></text></g><g><title>__rust_alloc (8,292,931 samples, 0.01%)</title><rect x="32.3837%" y="245" width="0.0139%" height="15" fill="rgb(206,64,50)" fg:x="19288022671" fg:w="8292931"/><text x="32.6337%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::_{{closure}} (1,143,033,959 samples, 1.92%)</title><rect x="30.4994%" y="261" width="1.9191%" height="15" fill="rgb(234,36,40)" fg:x="18165716036" fg:w="1143033959"/><text x="30.7494%" y="271.50">&lt;..</text></g><g><title>core::hash::BuildHasher::hash_one (12,434,393 samples, 0.02%)</title><rect x="32.3976%" y="245" width="0.0209%" height="15" fill="rgb(213,64,8)" fg:x="19296315602" fg:w="12434393"/><text x="32.6476%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (37,295,185 samples, 0.06%)</title><rect x="32.4185%" y="261" width="0.0626%" height="15" fill="rgb(210,75,36)" fg:x="19308749995" fg:w="37295185"/><text x="32.6685%" y="271.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,585,011 samples, 0.03%)</title><rect x="32.5580%" y="245" width="0.0346%" height="15" fill="rgb(229,88,21)" fg:x="19391845863" fg:w="20585011"/><text x="32.8080%" y="255.50"></text></g><g><title>__GI___libc_free (29,103,492 samples, 0.05%)</title><rect x="32.5926%" y="245" width="0.0489%" height="15" fill="rgb(252,204,47)" fg:x="19412430874" fg:w="29103492"/><text x="32.8426%" y="255.50"></text></g><g><title>_int_free (24,913,803 samples, 0.04%)</title><rect x="32.5996%" y="229" width="0.0418%" height="15" fill="rgb(208,77,27)" fg:x="19416620563" fg:w="24913803"/><text x="32.8496%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (1,483,371,060 samples, 2.49%)</title><rect x="30.1580%" y="277" width="2.4905%" height="15" fill="rgb(221,76,26)" fg:x="17962356323" fg:w="1483371060"/><text x="30.4080%" y="287.50">&lt;g..</text></g><g><title>grpc::client::load_balancing::child_manager_cb::Inner&lt;T&gt;::resolve_child_controller (99,682,203 samples, 0.17%)</title><rect x="32.4811%" y="261" width="0.1674%" height="15" fill="rgb(225,139,18)" fg:x="19346045180" fg:w="99682203"/><text x="32.7311%" y="271.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (16,512,023 samples, 0.03%)</title><rect x="36.2021%" y="261" width="0.0277%" height="15" fill="rgb(230,137,11)" fg:x="21562265678" fg:w="16512023"/><text x="36.4521%" y="271.50"></text></g><g><title>__GI___libc_free (70,313,236 samples, 0.12%)</title><rect x="36.2298%" y="261" width="0.1181%" height="15" fill="rgb(212,28,1)" fg:x="21578777701" fg:w="70313236"/><text x="36.4798%" y="271.50"></text></g><g><title>_int_free (45,523,372 samples, 0.08%)</title><rect x="36.2714%" y="245" width="0.0764%" height="15" fill="rgb(248,164,17)" fg:x="21603567565" fg:w="45523372"/><text x="36.5214%" y="255.50"></text></g><g><title>__GI___libc_malloc (77,879,983 samples, 0.13%)</title><rect x="36.3479%" y="261" width="0.1308%" height="15" fill="rgb(222,171,42)" fg:x="21649090937" fg:w="77879983"/><text x="36.5979%" y="271.50"></text></g><g><title>tcache_get (20,668,323 samples, 0.03%)</title><rect x="36.4439%" y="245" width="0.0347%" height="15" fill="rgb(243,84,45)" fg:x="21706302597" fg:w="20668323"/><text x="36.6939%" y="255.50"></text></g><g><title>tcache_get_n (20,668,323 samples, 0.03%)</title><rect x="36.4439%" y="229" width="0.0347%" height="15" fill="rgb(252,49,23)" fg:x="21706302597" fg:w="20668323"/><text x="36.6939%" y="239.50"></text></g><g><title>__rust_alloc (12,473,061 samples, 0.02%)</title><rect x="36.4923%" y="261" width="0.0209%" height="15" fill="rgb(215,19,7)" fg:x="21735142056" fg:w="12473061"/><text x="36.7423%" y="271.50"></text></g><g><title>__rust_dealloc (27,496,643 samples, 0.05%)</title><rect x="36.5133%" y="261" width="0.0462%" height="15" fill="rgb(238,81,41)" fg:x="21747615117" fg:w="27496643"/><text x="36.7633%" y="271.50"></text></g><g><title>_int_free (12,419,589 samples, 0.02%)</title><rect x="36.5873%" y="229" width="0.0209%" height="15" fill="rgb(210,199,37)" fg:x="21791704758" fg:w="12419589"/><text x="36.8373%" y="239.50"></text></g><g><title>_int_free_create_chunk (16,664,292 samples, 0.03%)</title><rect x="36.6429%" y="213" width="0.0280%" height="15" fill="rgb(244,192,49)" fg:x="21824849149" fg:w="16664292"/><text x="36.8929%" y="223.50"></text></g><g><title>__GI___libc_free (53,981,402 samples, 0.09%)</title><rect x="36.5873%" y="245" width="0.0906%" height="15" fill="rgb(226,211,11)" fg:x="21791704758" fg:w="53981402"/><text x="36.8373%" y="255.50"></text></g><g><title>_int_free_merge_chunk (41,561,813 samples, 0.07%)</title><rect x="36.6081%" y="229" width="0.0698%" height="15" fill="rgb(236,162,54)" fg:x="21804124347" fg:w="41561813"/><text x="36.8581%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5,075,244,198 samples, 8.52%)</title><rect x="36.5594%" y="261" width="8.5211%" height="15" fill="rgb(220,229,9)" fg:x="21775111760" fg:w="5075244198"/><text x="36.8094%" y="271.50">alloc::sync:..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_cb::RRPickerPicker&gt; (5,004,669,798 samples, 8.40%)</title><rect x="36.6779%" y="245" width="8.4026%" height="15" fill="rgb(250,87,22)" fg:x="21845686160" fg:w="5004669798"/><text x="36.9279%" y="255.50">core::ptr::d..</text></g><g><title>_ZN4core3ptr202drop_in_place$LT$core..iter..adapters..flatten..Flatten$LT$alloc..vec..into_iter..IntoIter$LT$core..option..Option$LT$alloc..sync..Arc$LT$dyn$u20$grpc..client..load_balancing..Picker$GT$$GT$$GT$$GT$$GT$17hd9a587cc961adddbE.llvm.6127000297180534061 (41,536,863 samples, 0.07%)</title><rect x="46.5443%" y="245" width="0.0697%" height="15" fill="rgb(239,43,17)" fg:x="27722175819" fg:w="41536863"/><text x="46.7943%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33,256,696 samples, 0.06%)</title><rect x="46.5582%" y="229" width="0.0558%" height="15" fill="rgb(231,177,25)" fg:x="27730455986" fg:w="33256696"/><text x="46.8082%" y="239.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (938,343,534 samples, 1.58%)</title><rect x="45.0805%" y="261" width="1.5754%" height="15" fill="rgb(219,179,1)" fg:x="26850355958" fg:w="938343534"/><text x="45.3305%" y="271.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::forget_allocation_drop_remaining (24,986,810 samples, 0.04%)</title><rect x="46.6140%" y="245" width="0.0420%" height="15" fill="rgb(238,219,53)" fg:x="27763712682" fg:w="24986810"/><text x="46.8640%" y="255.50"></text></g><g><title>_int_malloc (157,548,824 samples, 0.26%)</title><rect x="56.7687%" y="229" width="0.2645%" height="15" fill="rgb(232,167,36)" fg:x="33811903753" fg:w="157548824"/><text x="57.0187%" y="239.50"></text></g><g><title>unlink_chunk (37,290,027 samples, 0.06%)</title><rect x="56.9706%" y="213" width="0.0626%" height="15" fill="rgb(244,19,51)" fg:x="33932162550" fg:w="37290027"/><text x="57.2206%" y="223.50"></text></g><g><title>__GI___libc_malloc (211,677,296 samples, 0.36%)</title><rect x="56.7128%" y="245" width="0.3554%" height="15" fill="rgb(224,6,22)" fg:x="33778632542" fg:w="211677296"/><text x="56.9628%" y="255.50"></text></g><g><title>tcache_get (16,704,754 samples, 0.03%)</title><rect x="57.0402%" y="229" width="0.0280%" height="15" fill="rgb(224,145,5)" fg:x="33973605084" fg:w="16704754"/><text x="57.2902%" y="239.50"></text></g><g><title>tcache_get_n (16,704,754 samples, 0.03%)</title><rect x="57.0402%" y="213" width="0.0280%" height="15" fill="rgb(234,130,49)" fg:x="33973605084" fg:w="16704754"/><text x="57.2902%" y="223.50"></text></g><g><title>lb_apis::StubChannelControllerCallbacks::send_update (16,347,098,376 samples, 27.45%)</title><rect x="29.6290%" y="309" width="27.4460%" height="15" fill="rgb(254,6,2)" fg:x="17647308618" fg:w="16347098376"/><text x="29.8790%" y="319.50">lb_apis::StubChannelControllerCallbacks::sen..</text></g><g><title>&lt;lb_apis::del_pol_cb::WrappedController as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (16,139,888,206 samples, 27.10%)</title><rect x="29.9769%" y="293" width="27.0981%" height="15" fill="rgb(208,96,46)" fg:x="17854518788" fg:w="16139888206"/><text x="30.2269%" y="303.50">&lt;lb_apis::del_pol_cb::WrappedController as ..</text></g><g><title>_ZN7lb_apis10del_pol_cb13update_picker17h37b9e3191a1a2a2eE.llvm.8308943596923409684 (14,548,679,611 samples, 24.43%)</title><rect x="32.6485%" y="277" width="24.4266%" height="15" fill="rgb(239,3,39)" fg:x="19445727383" fg:w="14548679611"/><text x="32.8985%" y="287.50">_ZN7lb_apis10del_pol_cb13update_picker1..</text></g><g><title>grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt;::map_child_states (6,205,707,502 samples, 10.42%)</title><rect x="46.6560%" y="261" width="10.4191%" height="15" fill="rgb(233,210,1)" fg:x="27788699492" fg:w="6205707502"/><text x="46.9060%" y="271.50">grpc::client::l..</text></g><g><title>rand::rng::Rng::gen_range (53,837,658 samples, 0.09%)</title><rect x="57.0751%" y="309" width="0.0904%" height="15" fill="rgb(244,137,37)" fg:x="33994406994" fg:w="53837658"/><text x="57.3251%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (29,001,620 samples, 0.05%)</title><rect x="57.1168%" y="293" width="0.0487%" height="15" fill="rgb(240,136,2)" fg:x="34019243032" fg:w="29001620"/><text x="57.3668%" y="303.50"></text></g><g><title>lb_apis::callbacks (19,061,139,861 samples, 32.00%)</title><rect x="25.1697%" y="341" width="32.0028%" height="15" fill="rgb(239,18,37)" fg:x="14991260957" fg:w="19061139861"/><text x="25.4197%" y="351.50">lb_apis::callbacks</text></g><g><title>bencher::Bencher::iter (16,474,017,806 samples, 27.66%)</title><rect x="29.5133%" y="325" width="27.6591%" height="15" fill="rgb(218,185,22)" fg:x="17578383012" fg:w="16474017806"/><text x="29.7633%" y="335.50">bencher::Bencher::iter</text></g><g><title>__GI___libc_malloc (74,349,550 samples, 0.12%)</title><rect x="57.5055%" y="261" width="0.1248%" height="15" fill="rgb(225,218,4)" fg:x="34250742434" fg:w="74349550"/><text x="57.7555%" y="271.50"></text></g><g><title>_int_malloc (70,220,446 samples, 0.12%)</title><rect x="57.5124%" y="245" width="0.1179%" height="15" fill="rgb(230,182,32)" fg:x="34254871538" fg:w="70220446"/><text x="57.7624%" y="255.50"></text></g><g><title>unlink_chunk (8,219,069 samples, 0.01%)</title><rect x="57.6165%" y="229" width="0.0138%" height="15" fill="rgb(242,56,43)" fg:x="34316872915" fg:w="8219069"/><text x="57.8665%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16,512,788 samples, 0.03%)</title><rect x="57.6439%" y="261" width="0.0277%" height="15" fill="rgb(233,99,24)" fg:x="34333182868" fg:w="16512788"/><text x="57.8939%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (16,512,788 samples, 0.03%)</title><rect x="57.6439%" y="245" width="0.0277%" height="15" fill="rgb(234,209,42)" fg:x="34333182868" fg:w="16512788"/><text x="57.8939%" y="255.50"></text></g><g><title>__GI___libc_realloc (16,512,788 samples, 0.03%)</title><rect x="57.6439%" y="229" width="0.0277%" height="15" fill="rgb(227,7,12)" fg:x="34333182868" fg:w="16512788"/><text x="57.8939%" y="239.50"></text></g><g><title>_int_realloc (16,512,788 samples, 0.03%)</title><rect x="57.6439%" y="213" width="0.0277%" height="15" fill="rgb(245,203,43)" fg:x="34333182868" fg:w="16512788"/><text x="57.8939%" y="223.50"></text></g><g><title>_int_malloc (12,363,792 samples, 0.02%)</title><rect x="57.6508%" y="197" width="0.0208%" height="15" fill="rgb(238,205,33)" fg:x="34337331864" fg:w="12363792"/><text x="57.9008%" y="207.50"></text></g><g><title>malloc_consolidate (12,363,792 samples, 0.02%)</title><rect x="57.6508%" y="181" width="0.0208%" height="15" fill="rgb(231,56,7)" fg:x="34337331864" fg:w="12363792"/><text x="57.9008%" y="191.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (165,208,415 samples, 0.28%)</title><rect x="57.4152%" y="277" width="0.2774%" height="15" fill="rgb(244,186,29)" fg:x="34196960434" fg:w="165208415"/><text x="57.6652%" y="287.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (12,473,193 samples, 0.02%)</title><rect x="57.6716%" y="261" width="0.0209%" height="15" fill="rgb(234,111,31)" fg:x="34349695656" fg:w="12473193"/><text x="57.9216%" y="271.50"></text></g><g><title>_int_realloc (41,359,057 samples, 0.07%)</title><rect x="57.7065%" y="229" width="0.0694%" height="15" fill="rgb(241,149,10)" fg:x="34370488873" fg:w="41359057"/><text x="57.9565%" y="239.50"></text></g><g><title>_int_malloc (24,756,975 samples, 0.04%)</title><rect x="57.7344%" y="213" width="0.0416%" height="15" fill="rgb(249,206,44)" fg:x="34387090955" fg:w="24756975"/><text x="57.9844%" y="223.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (252,025,722 samples, 0.42%)</title><rect x="57.3597%" y="293" width="0.4231%" height="15" fill="rgb(251,153,30)" fg:x="34163932023" fg:w="252025722"/><text x="57.6097%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (53,788,896 samples, 0.09%)</title><rect x="57.6925%" y="277" width="0.0903%" height="15" fill="rgb(239,152,38)" fg:x="34362168849" fg:w="53788896"/><text x="57.9425%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (49,620,864 samples, 0.08%)</title><rect x="57.6995%" y="261" width="0.0833%" height="15" fill="rgb(249,139,47)" fg:x="34366336881" fg:w="49620864"/><text x="57.9495%" y="271.50"></text></g><g><title>__GI___libc_realloc (49,620,864 samples, 0.08%)</title><rect x="57.6995%" y="245" width="0.0833%" height="15" fill="rgb(244,64,35)" fg:x="34366336881" fg:w="49620864"/><text x="57.9495%" y="255.50"></text></g><g><title>_int_free (45,493,113 samples, 0.08%)</title><rect x="57.8036%" y="277" width="0.0764%" height="15" fill="rgb(216,46,15)" fg:x="34428340566" fg:w="45493113"/><text x="58.0536%" y="287.50"></text></g><g><title>__GI___libc_free (61,898,243 samples, 0.10%)</title><rect x="57.7829%" y="293" width="0.1039%" height="15" fill="rgb(250,74,19)" fg:x="34415957745" fg:w="61898243"/><text x="58.0329%" y="303.50"></text></g><g><title>__memset_avx2_unaligned (8,255,046 samples, 0.01%)</title><rect x="58.1502%" y="261" width="0.0139%" height="15" fill="rgb(249,42,33)" fg:x="34634732385" fg:w="8255046"/><text x="58.4002%" y="271.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.7027266497679388191 (103,344,644 samples, 0.17%)</title><rect x="58.0184%" y="277" width="0.1735%" height="15" fill="rgb(242,149,17)" fg:x="34556270373" fg:w="103344644"/><text x="58.2684%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,462,483 samples, 0.02%)</title><rect x="58.1710%" y="261" width="0.0209%" height="15" fill="rgb(244,29,21)" fg:x="34647152534" fg:w="12462483"/><text x="58.4210%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (202,435,072 samples, 0.34%)</title><rect x="57.8937%" y="293" width="0.3399%" height="15" fill="rgb(220,130,37)" fg:x="34482003581" fg:w="202435072"/><text x="58.1437%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24,823,636 samples, 0.04%)</title><rect x="58.1919%" y="277" width="0.0417%" height="15" fill="rgb(211,67,2)" fg:x="34659615017" fg:w="24823636"/><text x="58.4419%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,290,061 samples, 0.01%)</title><rect x="58.2197%" y="261" width="0.0139%" height="15" fill="rgb(235,68,52)" fg:x="34676148592" fg:w="8290061"/><text x="58.4697%" y="271.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (528,704,211 samples, 0.89%)</title><rect x="57.3527%" y="309" width="0.8877%" height="15" fill="rgb(246,142,3)" fg:x="34159779706" fg:w="528704211"/><text x="57.6027%" y="319.50"></text></g><g><title>alloc_perturb (8,311,501 samples, 0.01%)</title><rect x="58.4834%" y="229" width="0.0140%" height="15" fill="rgb(241,25,7)" fg:x="34833185268" fg:w="8311501"/><text x="58.7334%" y="239.50"></text></g><g><title>__GI___libc_malloc (66,084,140 samples, 0.11%)</title><rect x="58.3932%" y="261" width="0.1110%" height="15" fill="rgb(242,119,39)" fg:x="34779464648" fg:w="66084140"/><text x="58.6432%" y="271.50"></text></g><g><title>_int_malloc (49,556,369 samples, 0.08%)</title><rect x="58.4209%" y="245" width="0.0832%" height="15" fill="rgb(241,98,45)" fg:x="34795992419" fg:w="49556369"/><text x="58.6709%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,255,027 samples, 0.01%)</title><rect x="58.5111%" y="261" width="0.0139%" height="15" fill="rgb(254,28,30)" fg:x="34849705855" fg:w="8255027"/><text x="58.7611%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (169,597,914 samples, 0.28%)</title><rect x="58.2542%" y="293" width="0.2847%" height="15" fill="rgb(241,142,54)" fg:x="34696671449" fg:w="169597914"/><text x="58.5042%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (115,901,021 samples, 0.19%)</title><rect x="58.3443%" y="277" width="0.1946%" height="15" fill="rgb(222,85,15)" fg:x="34750368342" fg:w="115901021"/><text x="58.5943%" y="287.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h407cd80dd67508b8E.llvm.13083574330315652211 (181,902,007 samples, 0.31%)</title><rect x="58.2472%" y="309" width="0.3054%" height="15" fill="rgb(210,85,47)" fg:x="34692557476" fg:w="181902007"/><text x="58.4972%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,190,120 samples, 0.01%)</title><rect x="58.5389%" y="293" width="0.0138%" height="15" fill="rgb(224,206,25)" fg:x="34866269363" fg:w="8190120"/><text x="58.7889%" y="303.50"></text></g><g><title>[unknown] (8,223,302 samples, 0.01%)</title><rect x="58.7193%" y="261" width="0.0138%" height="15" fill="rgb(243,201,19)" fg:x="34973740416" fg:w="8223302"/><text x="58.9693%" y="271.50"></text></g><g><title>[unknown] (8,223,302 samples, 0.01%)</title><rect x="58.7193%" y="245" width="0.0138%" height="15" fill="rgb(236,59,4)" fg:x="34973740416" fg:w="8223302"/><text x="58.9693%" y="255.50"></text></g><g><title>__GI___libc_malloc (61,998,848 samples, 0.10%)</title><rect x="58.7331%" y="261" width="0.1041%" height="15" fill="rgb(254,179,45)" fg:x="34981963718" fg:w="61998848"/><text x="58.9831%" y="271.50"></text></g><g><title>_int_malloc (61,998,848 samples, 0.10%)</title><rect x="58.7331%" y="245" width="0.1041%" height="15" fill="rgb(226,14,10)" fg:x="34981963718" fg:w="61998848"/><text x="58.9831%" y="255.50"></text></g><g><title>malloc_consolidate (57,831,775 samples, 0.10%)</title><rect x="58.7401%" y="229" width="0.0971%" height="15" fill="rgb(244,27,41)" fg:x="34986130791" fg:w="57831775"/><text x="58.9901%" y="239.50"></text></g><g><title>unlink_chunk (20,577,990 samples, 0.03%)</title><rect x="58.8027%" y="213" width="0.0345%" height="15" fill="rgb(235,35,32)" fg:x="35023384576" fg:w="20577990"/><text x="59.0527%" y="223.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.7027266497679388191 (173,618,157 samples, 0.29%)</title><rect x="58.6290%" y="277" width="0.2915%" height="15" fill="rgb(218,68,31)" fg:x="34919920357" fg:w="173618157"/><text x="58.8790%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45,430,480 samples, 0.08%)</title><rect x="58.8442%" y="261" width="0.0763%" height="15" fill="rgb(207,120,37)" fg:x="35048108034" fg:w="45430480"/><text x="59.0942%" y="271.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17h76fd9fded13229cdE.llvm.6968854181879494103 (252,206,756 samples, 0.42%)</title><rect x="58.5527%" y="309" width="0.4234%" height="15" fill="rgb(227,98,0)" fg:x="34874459483" fg:w="252206756"/><text x="58.8027%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (248,035,882 samples, 0.42%)</title><rect x="58.5597%" y="293" width="0.4164%" height="15" fill="rgb(207,7,3)" fg:x="34878630357" fg:w="248035882"/><text x="58.8097%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33,127,725 samples, 0.06%)</title><rect x="58.9205%" y="277" width="0.0556%" height="15" fill="rgb(206,98,19)" fg:x="35093538514" fg:w="33127725"/><text x="59.1705%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,272,234 samples, 0.01%)</title><rect x="58.9622%" y="261" width="0.0139%" height="15" fill="rgb(217,5,26)" fg:x="35118394005" fg:w="8272234"/><text x="59.2122%" y="271.50"></text></g><g><title>__GI___libc_malloc (8,275,994 samples, 0.01%)</title><rect x="58.9761%" y="309" width="0.0139%" height="15" fill="rgb(235,190,38)" fg:x="35126666239" fg:w="8275994"/><text x="59.2261%" y="319.50"></text></g><g><title>_int_malloc (8,275,994 samples, 0.01%)</title><rect x="58.9761%" y="293" width="0.0139%" height="15" fill="rgb(247,86,24)" fg:x="35126666239" fg:w="8275994"/><text x="59.2261%" y="303.50"></text></g><g><title>grpc::client::load_balancing::LbState::initial (8,331,209 samples, 0.01%)</title><rect x="58.9900%" y="309" width="0.0140%" height="15" fill="rgb(205,101,16)" fg:x="35134942233" fg:w="8331209"/><text x="59.2400%" y="319.50"></text></g><g><title>__GI___libc_malloc (8,331,209 samples, 0.01%)</title><rect x="58.9900%" y="293" width="0.0140%" height="15" fill="rgb(246,168,33)" fg:x="35134942233" fg:w="8331209"/><text x="59.2400%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (1,074,685,572 samples, 1.80%)</title><rect x="57.3460%" y="325" width="1.8043%" height="15" fill="rgb(231,114,1)" fg:x="34155740401" fg:w="1074685572"/><text x="57.5960%" y="335.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (87,152,531 samples, 0.15%)</title><rect x="59.0040%" y="309" width="0.1463%" height="15" fill="rgb(207,184,53)" fg:x="35143273442" fg:w="87152531"/><text x="59.2540%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (87,152,531 samples, 0.15%)</title><rect x="59.0040%" y="293" width="0.1463%" height="15" fill="rgb(224,95,51)" fg:x="35143273442" fg:w="87152531"/><text x="59.2540%" y="303.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (87,152,531 samples, 0.15%)</title><rect x="59.0040%" y="277" width="0.1463%" height="15" fill="rgb(212,188,45)" fg:x="35143273442" fg:w="87152531"/><text x="59.2540%" y="287.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.7022287322672284463 (74,653,084 samples, 0.13%)</title><rect x="59.0250%" y="261" width="0.1253%" height="15" fill="rgb(223,154,38)" fg:x="35155772889" fg:w="74653084"/><text x="59.2750%" y="271.50"></text></g><g><title>__GI___libc_malloc (53,686,124 samples, 0.09%)</title><rect x="59.1571%" y="325" width="0.0901%" height="15" fill="rgb(251,22,52)" fg:x="35234485108" fg:w="53686124"/><text x="59.4071%" y="335.50"></text></g><g><title>_int_malloc (33,133,823 samples, 0.06%)</title><rect x="59.1916%" y="309" width="0.0556%" height="15" fill="rgb(229,209,22)" fg:x="35255037409" fg:w="33133823"/><text x="59.4416%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned (12,470,090 samples, 0.02%)</title><rect x="59.4136%" y="261" width="0.0209%" height="15" fill="rgb(234,138,34)" fg:x="35387221614" fg:w="12470090"/><text x="59.6636%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,303,924 samples, 0.01%)</title><rect x="59.4345%" y="261" width="0.0139%" height="15" fill="rgb(212,95,11)" fg:x="35399691704" fg:w="8303924"/><text x="59.6845%" y="271.50"></text></g><g><title>_int_malloc (74,420,002 samples, 0.12%)</title><rect x="59.4833%" y="213" width="0.1249%" height="15" fill="rgb(240,179,47)" fg:x="35428737529" fg:w="74420002"/><text x="59.7333%" y="223.50"></text></g><g><title>__GI___libc_malloc (91,142,724 samples, 0.15%)</title><rect x="59.4622%" y="229" width="0.1530%" height="15" fill="rgb(240,163,11)" fg:x="35416197742" fg:w="91142724"/><text x="59.7122%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (157,464,913 samples, 0.26%)</title><rect x="59.3718%" y="277" width="0.2644%" height="15" fill="rgb(236,37,12)" fg:x="35362368886" fg:w="157464913"/><text x="59.6218%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (111,838,171 samples, 0.19%)</title><rect x="59.4484%" y="261" width="0.1878%" height="15" fill="rgb(232,164,16)" fg:x="35407995628" fg:w="111838171"/><text x="59.6984%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (111,838,171 samples, 0.19%)</title><rect x="59.4484%" y="245" width="0.1878%" height="15" fill="rgb(244,205,15)" fg:x="35407995628" fg:w="111838171"/><text x="59.6984%" y="255.50"></text></g><g><title>__rust_alloc (12,493,333 samples, 0.02%)</title><rect x="59.6152%" y="229" width="0.0210%" height="15" fill="rgb(223,117,47)" fg:x="35507340466" fg:w="12493333"/><text x="59.8652%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (289,645,776 samples, 0.49%)</title><rect x="59.2540%" y="325" width="0.4863%" height="15" fill="rgb(244,107,35)" fg:x="35292208406" fg:w="289645776"/><text x="59.5040%" y="335.50"></text></g><g><title>core::fmt::write (273,187,211 samples, 0.46%)</title><rect x="59.2817%" y="309" width="0.4587%" height="15" fill="rgb(205,140,8)" fg:x="35308666971" fg:w="273187211"/><text x="59.5317%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (236,057,127 samples, 0.40%)</title><rect x="59.3440%" y="293" width="0.3963%" height="15" fill="rgb(228,84,46)" fg:x="35345797055" fg:w="236057127"/><text x="59.5940%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral (62,020,383 samples, 0.10%)</title><rect x="59.6362%" y="277" width="0.1041%" height="15" fill="rgb(254,188,9)" fg:x="35519833799" fg:w="62020383"/><text x="59.8862%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (29,018,710 samples, 0.05%)</title><rect x="59.6916%" y="261" width="0.0487%" height="15" fill="rgb(206,112,54)" fg:x="35552835472" fg:w="29018710"/><text x="59.9416%" y="271.50"></text></g><g><title>__GI_memcpy (12,411,047 samples, 0.02%)</title><rect x="59.7474%" y="261" width="0.0208%" height="15" fill="rgb(216,84,49)" fg:x="35586035369" fg:w="12411047"/><text x="59.9974%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,411,047 samples, 0.02%)</title><rect x="59.7474%" y="245" width="0.0208%" height="15" fill="rgb(214,194,35)" fg:x="35586035369" fg:w="12411047"/><text x="59.9974%" y="255.50"></text></g><g><title>malloc_consolidate (103,243,104 samples, 0.17%)</title><rect x="59.8376%" y="245" width="0.1733%" height="15" fill="rgb(249,28,3)" fg:x="35639807221" fg:w="103243104"/><text x="60.0876%" y="255.50"></text></g><g><title>unlink_chunk (32,951,318 samples, 0.06%)</title><rect x="59.9557%" y="229" width="0.0553%" height="15" fill="rgb(222,56,52)" fg:x="35710099007" fg:w="32951318"/><text x="60.2057%" y="239.50"></text></g><g><title>_int_realloc (165,290,884 samples, 0.28%)</title><rect x="59.7474%" y="277" width="0.2775%" height="15" fill="rgb(245,217,50)" fg:x="35586035369" fg:w="165290884"/><text x="59.9974%" y="287.50"></text></g><g><title>_int_malloc (148,729,000 samples, 0.25%)</title><rect x="59.7752%" y="261" width="0.2497%" height="15" fill="rgb(213,201,24)" fg:x="35602597253" fg:w="148729000"/><text x="60.0252%" y="271.50"></text></g><g><title>unlink_chunk (8,275,928 samples, 0.01%)</title><rect x="60.0110%" y="245" width="0.0139%" height="15" fill="rgb(248,116,28)" fg:x="35743050325" fg:w="8275928"/><text x="60.2610%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (173,625,432 samples, 0.29%)</title><rect x="59.7403%" y="325" width="0.2915%" height="15" fill="rgb(219,72,43)" fg:x="35581854182" fg:w="173625432"/><text x="59.9903%" y="335.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (169,444,245 samples, 0.28%)</title><rect x="59.7474%" y="309" width="0.2845%" height="15" fill="rgb(209,138,14)" fg:x="35586035369" fg:w="169444245"/><text x="59.9974%" y="319.50"></text></g><g><title>__GI___libc_realloc (169,444,245 samples, 0.28%)</title><rect x="59.7474%" y="293" width="0.2845%" height="15" fill="rgb(222,18,33)" fg:x="35586035369" fg:w="169444245"/><text x="59.9974%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (74,829,219 samples, 0.13%)</title><rect x="63.0721%" y="277" width="0.1256%" height="15" fill="rgb(213,199,7)" fg:x="37566263189" fg:w="74829219"/><text x="63.3221%" y="287.50"></text></g><g><title>__GI___libc_malloc (16,634,871 samples, 0.03%)</title><rect x="63.1977%" y="277" width="0.0279%" height="15" fill="rgb(250,110,10)" fg:x="37641092408" fg:w="16634871"/><text x="63.4477%" y="287.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (1,449,561,742 samples, 2.43%)</title><rect x="60.8893%" y="293" width="2.4337%" height="15" fill="rgb(248,123,6)" fg:x="36266183474" fg:w="1449561742"/><text x="61.1393%" y="303.50">&lt;l..</text></g><g><title>core::hash::BuildHasher::hash_one (53,837,604 samples, 0.09%)</title><rect x="63.2327%" y="277" width="0.0904%" height="15" fill="rgb(206,91,31)" fg:x="37661907612" fg:w="53837604"/><text x="63.4827%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49,846,119 samples, 0.08%)</title><rect x="63.4763%" y="277" width="0.0837%" height="15" fill="rgb(211,154,13)" fg:x="37807011098" fg:w="49846119"/><text x="63.7263%" y="287.50"></text></g><g><title>__GI___libc_free (12,401,469 samples, 0.02%)</title><rect x="63.5600%" y="277" width="0.0208%" height="15" fill="rgb(225,148,7)" fg:x="37856857217" fg:w="12401469"/><text x="63.8100%" y="287.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17h76fd9fded13229cdE.llvm.6968854181879494103 (182,564,049 samples, 0.31%)</title><rect x="63.3230%" y="293" width="0.3065%" height="15" fill="rgb(220,160,43)" fg:x="37715745216" fg:w="182564049"/><text x="63.5730%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (29,050,579 samples, 0.05%)</title><rect x="63.5808%" y="277" width="0.0488%" height="15" fill="rgb(213,52,39)" fg:x="37869258686" fg:w="29050579"/><text x="63.8308%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (1,860,441,645 samples, 3.12%)</title><rect x="60.5548%" y="309" width="3.1236%" height="15" fill="rgb(243,137,7)" fg:x="36066929377" fg:w="1860441645"/><text x="60.8048%" y="319.50">&lt;gr..</text></g><g><title>core::hash::BuildHasher::hash_one (29,061,757 samples, 0.05%)</title><rect x="63.6296%" y="293" width="0.0488%" height="15" fill="rgb(230,79,13)" fg:x="37898309265" fg:w="29061757"/><text x="63.8796%" y="303.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (54,109,549 samples, 0.09%)</title><rect x="63.6784%" y="309" width="0.0908%" height="15" fill="rgb(247,105,23)" fg:x="37927371022" fg:w="54109549"/><text x="63.9284%" y="319.50"></text></g><g><title>__GI___libc_malloc (20,863,475 samples, 0.04%)</title><rect x="83.7568%" y="277" width="0.0350%" height="15" fill="rgb(223,179,41)" fg:x="49886281744" fg:w="20863475"/><text x="84.0068%" y="287.50"></text></g><g><title>tcache_get (16,681,455 samples, 0.03%)</title><rect x="83.7639%" y="261" width="0.0280%" height="15" fill="rgb(218,9,34)" fg:x="49890463764" fg:w="16681455"/><text x="84.0139%" y="271.50"></text></g><g><title>tcache_get_n (16,681,455 samples, 0.03%)</title><rect x="83.7639%" y="245" width="0.0280%" height="15" fill="rgb(222,106,8)" fg:x="49890463764" fg:w="16681455"/><text x="84.0139%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned (16,634,705 samples, 0.03%)</title><rect x="84.6714%" y="197" width="0.0279%" height="15" fill="rgb(211,220,0)" fg:x="50430982997" fg:w="16634705"/><text x="84.9214%" y="207.50"></text></g><g><title>__GI_memcpy (439,586,912 samples, 0.74%)</title><rect x="84.6505%" y="213" width="0.7380%" height="15" fill="rgb(229,52,16)" fg:x="50418543421" fg:w="439586912"/><text x="84.9005%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned_erms (410,512,631 samples, 0.69%)</title><rect x="84.6993%" y="197" width="0.6892%" height="15" fill="rgb(212,155,18)" fg:x="50447617702" fg:w="410512631"/><text x="84.9493%" y="207.50"></text></g><g><title>_int_free (116,027,652 samples, 0.19%)</title><rect x="85.3885%" y="213" width="0.1948%" height="15" fill="rgb(242,21,14)" fg:x="50858130333" fg:w="116027652"/><text x="85.6385%" y="223.50"></text></g><g><title>_int_free_create_chunk (112,225,805 samples, 0.19%)</title><rect x="85.6739%" y="197" width="0.1884%" height="15" fill="rgb(222,19,48)" fg:x="51028103486" fg:w="112225805"/><text x="85.9239%" y="207.50"></text></g><g><title>unlink_chunk (29,078,232 samples, 0.05%)</title><rect x="85.8135%" y="181" width="0.0488%" height="15" fill="rgb(232,45,27)" fg:x="51111251059" fg:w="29078232"/><text x="86.0635%" y="191.50"></text></g><g><title>_int_free_merge_chunk (170,296,187 samples, 0.29%)</title><rect x="85.5833%" y="213" width="0.2859%" height="15" fill="rgb(249,103,42)" fg:x="50974157985" fg:w="170296187"/><text x="85.8333%" y="223.50"></text></g><g><title>malloc_consolidate (8,281,920 samples, 0.01%)</title><rect x="87.0265%" y="197" width="0.0139%" height="15" fill="rgb(246,81,33)" fg:x="51833701298" fg:w="8281920"/><text x="87.2765%" y="207.50"></text></g><g><title>_int_malloc (854,979,340 samples, 1.44%)</title><rect x="85.8692%" y="213" width="1.4355%" height="15" fill="rgb(252,33,42)" fg:x="51144454172" fg:w="854979340"/><text x="86.1192%" y="223.50"></text></g><g><title>unlink_chunk (157,450,294 samples, 0.26%)</title><rect x="87.0404%" y="197" width="0.2644%" height="15" fill="rgb(209,212,41)" fg:x="51841983218" fg:w="157450294"/><text x="87.2904%" y="207.50"></text></g><g><title>_int_realloc (1,718,140,953 samples, 2.88%)</title><rect x="84.4270%" y="229" width="2.8847%" height="15" fill="rgb(207,154,6)" fg:x="50285444574" fg:w="1718140953"/><text x="84.6770%" y="239.50">_i..</text></g><g><title>checked_request2size (16,642,946 samples, 0.03%)</title><rect x="87.3117%" y="229" width="0.0279%" height="15" fill="rgb(223,64,47)" fg:x="52003585527" fg:w="16642946"/><text x="87.5617%" y="239.50"></text></g><g><title>__GI___libc_realloc (1,880,352,256 samples, 3.16%)</title><rect x="84.1966%" y="245" width="3.1570%" height="15" fill="rgb(211,161,38)" fg:x="50148227603" fg:w="1880352256"/><text x="84.4466%" y="255.50">__G..</text></g><g><title>musable (8,351,386 samples, 0.01%)</title><rect x="87.3396%" y="229" width="0.0140%" height="15" fill="rgb(219,138,40)" fg:x="52020228473" fg:w="8351386"/><text x="87.5896%" y="239.50"></text></g><g><title>__rdl_realloc (70,552,522 samples, 0.12%)</title><rect x="87.3537%" y="245" width="0.1185%" height="15" fill="rgb(241,228,46)" fg:x="52028579859" fg:w="70552522"/><text x="87.6037%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10,290,863,756 samples, 17.28%)</title><rect x="70.2359%" y="293" width="17.2779%" height="15" fill="rgb(223,209,38)" fg:x="41833125415" fg:w="10290863756"/><text x="70.4859%" y="303.50">&lt;alloc::vec::Vec&lt;T&gt; as allo..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,212,692,692 samples, 3.72%)</title><rect x="83.7988%" y="277" width="3.7150%" height="15" fill="rgb(236,164,45)" fg:x="49911296479" fg:w="2212692692"/><text x="84.0488%" y="287.50">allo..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (2,083,747,121 samples, 3.50%)</title><rect x="84.0153%" y="261" width="3.4985%" height="15" fill="rgb(231,15,5)" fg:x="50040242050" fg:w="2083747121"/><text x="84.2653%" y="271.50">_ZN..</text></g><g><title>__rust_realloc (24,856,790 samples, 0.04%)</title><rect x="87.4721%" y="245" width="0.0417%" height="15" fill="rgb(252,35,15)" fg:x="52099132381" fg:w="24856790"/><text x="87.7221%" y="255.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (41,603,334 samples, 0.07%)</title><rect x="87.5138%" y="293" width="0.0699%" height="15" fill="rgb(248,181,18)" fg:x="52123989171" fg:w="41603334"/><text x="87.7638%" y="303.50"></text></g><g><title>get_max_fast (12,459,196 samples, 0.02%)</title><rect x="87.6813%" y="261" width="0.0209%" height="15" fill="rgb(233,39,42)" fg:x="52223753078" fg:w="12459196"/><text x="87.9313%" y="271.50"></text></g><g><title>_int_free (49,866,910 samples, 0.08%)</title><rect x="87.6256%" y="277" width="0.0837%" height="15" fill="rgb(238,110,33)" fg:x="52190528994" fg:w="49866910"/><text x="87.8756%" y="287.50"></text></g><g><title>__GI___libc_free (108,057,678 samples, 0.18%)</title><rect x="87.5837%" y="293" width="0.1814%" height="15" fill="rgb(233,195,10)" fg:x="52165592505" fg:w="108057678"/><text x="87.8337%" y="303.50"></text></g><g><title>_int_free_merge_chunk (33,254,279 samples, 0.06%)</title><rect x="87.7093%" y="277" width="0.0558%" height="15" fill="rgb(254,105,3)" fg:x="52240395904" fg:w="33254279"/><text x="87.9593%" y="287.50"></text></g><g><title>_int_free_create_chunk (24,995,626 samples, 0.04%)</title><rect x="87.7232%" y="261" width="0.0420%" height="15" fill="rgb(221,225,9)" fg:x="52248654557" fg:w="24995626"/><text x="87.9732%" y="271.50"></text></g><g><title>_int_malloc (315,528,722 samples, 0.53%)</title><rect x="87.8626%" y="277" width="0.5298%" height="15" fill="rgb(224,227,45)" fg:x="52331731091" fg:w="315528722"/><text x="88.1126%" y="287.50"></text></g><g><title>unlink_chunk (24,955,077 samples, 0.04%)</title><rect x="88.3505%" y="261" width="0.0419%" height="15" fill="rgb(229,198,43)" fg:x="52622304736" fg:w="24955077"/><text x="88.6005%" y="271.50"></text></g><g><title>__GI___libc_malloc (377,788,900 samples, 0.63%)</title><rect x="87.7651%" y="293" width="0.6343%" height="15" fill="rgb(206,209,35)" fg:x="52273650183" fg:w="377788900"/><text x="88.0151%" y="303.50"></text></g><g><title>__rdl_alloc (16,627,255 samples, 0.03%)</title><rect x="88.3994%" y="293" width="0.0279%" height="15" fill="rgb(245,195,53)" fg:x="52651439083" fg:w="16627255"/><text x="88.6494%" y="303.50"></text></g><g><title>__rust_alloc (16,581,353 samples, 0.03%)</title><rect x="88.4343%" y="293" width="0.0278%" height="15" fill="rgb(240,92,26)" fg:x="52672242964" fg:w="16581353"/><text x="88.6843%" y="303.50"></text></g><g><title>_int_free (8,318,173 samples, 0.01%)</title><rect x="88.5180%" y="261" width="0.0140%" height="15" fill="rgb(207,40,23)" fg:x="52722085352" fg:w="8318173"/><text x="88.7680%" y="271.50"></text></g><g><title>__GI___libc_free (45,732,876 samples, 0.08%)</title><rect x="88.5040%" y="277" width="0.0768%" height="15" fill="rgb(223,111,35)" fg:x="52713761809" fg:w="45732876"/><text x="88.7540%" y="287.50"></text></g><g><title>_int_free_merge_chunk (29,091,160 samples, 0.05%)</title><rect x="88.5320%" y="261" width="0.0488%" height="15" fill="rgb(229,147,28)" fg:x="52730403525" fg:w="29091160"/><text x="88.7820%" y="271.50"></text></g><g><title>_int_free_create_chunk (12,465,281 samples, 0.02%)</title><rect x="88.5599%" y="245" width="0.0209%" height="15" fill="rgb(211,29,28)" fg:x="52747029404" fg:w="12465281"/><text x="88.8099%" y="255.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h910e9d5dc148ea65E.llvm.13083574330315652211 (21,188,876,080 samples, 35.58%)</title><rect x="63.7692%" y="309" width="35.5752%" height="15" fill="rgb(228,72,33)" fg:x="37981480571" fg:w="21188876080"/><text x="64.0192%" y="319.50">_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_pick..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6,477,353,114 samples, 10.88%)</title><rect x="88.4692%" y="293" width="10.8752%" height="15" fill="rgb(205,214,31)" fg:x="52693003537" fg:w="6477353114"/><text x="88.7192%" y="303.50">alloc::sync::Arc..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::RRPickerPicker&gt; (6,410,861,966 samples, 10.76%)</title><rect x="88.5808%" y="277" width="10.7636%" height="15" fill="rgb(224,111,15)" fg:x="52759494685" fg:w="6410861966"/><text x="88.8308%" y="287.50">core::ptr::drop_..</text></g><g><title>rand::rng::Rng::gen_range (49,775,305 samples, 0.08%)</title><rect x="99.3444%" y="309" width="0.0836%" height="15" fill="rgb(253,21,26)" fg:x="59170356651" fg:w="49775305"/><text x="99.5944%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (16,498,922 samples, 0.03%)</title><rect x="99.4002%" y="293" width="0.0277%" height="15" fill="rgb(245,139,43)" fg:x="59203633034" fg:w="16498922"/><text x="99.6502%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (29,051,378 samples, 0.05%)</title><rect x="99.4350%" y="309" width="0.0488%" height="15" fill="rgb(252,170,7)" fg:x="59224316471" fg:w="29051378"/><text x="99.6850%" y="319.50"></text></g><g><title>bencher::Bencher::iter (23,501,993,234 samples, 39.46%)</title><rect x="60.0318%" y="325" width="39.4588%" height="15" fill="rgb(231,118,14)" fg:x="35755479614" fg:w="23501993234"/><text x="60.2818%" y="335.50">bencher::Bencher::iter</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,785,022 samples, 0.03%)</title><rect x="99.4906%" y="309" width="0.0349%" height="15" fill="rgb(238,83,0)" fg:x="59257472848" fg:w="20785022"/><text x="99.7406%" y="319.50"></text></g><g><title>__GI___libc_free (8,302,399 samples, 0.01%)</title><rect x="99.5880%" y="277" width="0.0139%" height="15" fill="rgb(221,39,39)" fg:x="59315456750" fg:w="8302399"/><text x="99.8380%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45,359,279 samples, 0.08%)</title><rect x="99.5532%" y="293" width="0.0762%" height="15" fill="rgb(222,119,46)" fg:x="59294752270" fg:w="45359279"/><text x="99.8032%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16,352,400 samples, 0.03%)</title><rect x="99.6019%" y="277" width="0.0275%" height="15" fill="rgb(222,165,49)" fg:x="59323759149" fg:w="16352400"/><text x="99.8519%" y="287.50"></text></g><g><title>_int_free (37,205,967 samples, 0.06%)</title><rect x="99.6711%" y="277" width="0.0625%" height="15" fill="rgb(219,113,52)" fg:x="59364969374" fg:w="37205967"/><text x="99.9211%" y="287.50"></text></g><g><title>_int_free_maybe_consolidate (120,234,694 samples, 0.20%)</title><rect x="99.7336%" y="277" width="0.2019%" height="15" fill="rgb(214,7,15)" fg:x="59402175341" fg:w="120234694"/><text x="99.9836%" y="287.50"></text></g><g><title>malloc_consolidate (120,234,694 samples, 0.20%)</title><rect x="99.7336%" y="261" width="0.2019%" height="15" fill="rgb(235,32,4)" fg:x="59402175341" fg:w="120234694"/><text x="99.9836%" y="271.50"></text></g><g><title>unlink_chunk (58,050,469 samples, 0.10%)</title><rect x="99.8380%" y="245" width="0.0975%" height="15" fill="rgb(238,90,54)" fg:x="59464359566" fg:w="58050469"/><text x="100.0880%" y="255.50"></text></g><g><title>__GI___libc_free (190,473,834 samples, 0.32%)</title><rect x="99.6294%" y="293" width="0.3198%" height="15" fill="rgb(213,208,19)" fg:x="59340111549" fg:w="190473834"/><text x="99.8794%" y="303.50"></text></g><g><title>_int_free_merge_chunk (8,175,348 samples, 0.01%)</title><rect x="99.9355%" y="277" width="0.0137%" height="15" fill="rgb(233,156,4)" fg:x="59522410035" fg:w="8175348"/><text x="100.1855%" y="287.50"></text></g><g><title>__libc_start_main_impl (59,538,870,742 samples, 99.96%)</title><rect x="0.0000%" y="485" width="99.9631%" height="15" fill="rgb(207,194,5)" fg:x="1" fg:w="59538870742"/><text x="0.2500%" y="495.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (59,538,870,742 samples, 99.96%)</title><rect x="0.0000%" y="469" width="99.9631%" height="15" fill="rgb(206,111,30)" fg:x="1" fg:w="59538870742"/><text x="0.2500%" y="479.50">__libc_start_call_main</text></g><g><title>main (59,538,870,742 samples, 99.96%)</title><rect x="0.0000%" y="453" width="99.9631%" height="15" fill="rgb(243,70,54)" fg:x="1" fg:w="59538870742"/><text x="0.2500%" y="463.50">main</text></g><g><title>std::rt::lang_start_internal (59,538,870,742 samples, 99.96%)</title><rect x="0.0000%" y="437" width="99.9631%" height="15" fill="rgb(242,28,8)" fg:x="1" fg:w="59538870742"/><text x="0.2500%" y="447.50">std::rt::lang_start_internal</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.11651210448435583721 (59,538,870,742 samples, 99.96%)</title><rect x="0.0000%" y="421" width="99.9631%" height="15" fill="rgb(219,106,18)" fg:x="1" fg:w="59538870742"/><text x="0.2500%" y="431.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.11651210448435583721</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (59,538,870,742 samples, 99.96%)</title><rect x="0.0000%" y="405" width="99.9631%" height="15" fill="rgb(244,222,10)" fg:x="1" fg:w="59538870742"/><text x="0.2500%" y="415.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lb_apis::main (59,538,870,742 samples, 99.96%)</title><rect x="0.0000%" y="389" width="99.9631%" height="15" fill="rgb(236,179,52)" fg:x="1" fg:w="59538870742"/><text x="0.2500%" y="399.50">lb_apis::main</text></g><g><title>bencher::run_tests_console (59,538,870,742 samples, 99.96%)</title><rect x="0.0000%" y="373" width="99.9631%" height="15" fill="rgb(213,23,39)" fg:x="1" fg:w="59538870742"/><text x="0.2500%" y="383.50">bencher::run_tests_console</text></g><g><title>bencher::Bencher::auto_bench (59,538,870,742 samples, 99.96%)</title><rect x="0.0000%" y="357" width="99.9631%" height="15" fill="rgb(238,48,10)" fg:x="1" fg:w="59538870742"/><text x="0.2500%" y="367.50">bencher::Bencher::auto_bench</text></g><g><title>lb_apis::single (25,486,469,925 samples, 42.79%)</title><rect x="57.1725%" y="341" width="42.7906%" height="15" fill="rgb(251,196,23)" fg:x="34052400818" fg:w="25486469925"/><text x="57.4225%" y="351.50">lb_apis::single</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::DelegatingPolicy&gt; (281,397,895 samples, 0.47%)</title><rect x="99.4906%" y="325" width="0.4725%" height="15" fill="rgb(250,152,24)" fg:x="59257472848" fg:w="281397895"/><text x="99.7406%" y="335.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.13988653600275597160 (260,612,873 samples, 0.44%)</title><rect x="99.5255%" y="309" width="0.4376%" height="15" fill="rgb(209,150,17)" fg:x="59278257870" fg:w="260612873"/><text x="99.7755%" y="319.50"></text></g><g><title>__rdl_dealloc (8,285,360 samples, 0.01%)</title><rect x="99.9492%" y="293" width="0.0139%" height="15" fill="rgb(234,202,34)" fg:x="59530585383" fg:w="8285360"/><text x="100.1992%" y="303.50"></text></g><g><title>_start (59,540,280,695 samples, 99.97%)</title><rect x="0.0000%" y="501" width="99.9655%" height="15" fill="rgb(253,148,53)" fg:x="0" fg:w="59540280695"/><text x="0.2500%" y="511.50">_start</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (8,238,924 samples, 0.01%)</title><rect x="99.9792%" y="501" width="0.0138%" height="15" fill="rgb(218,129,16)" fg:x="59548451356" fg:w="8238924"/><text x="100.2292%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8,238,924 samples, 0.01%)</title><rect x="99.9792%" y="485" width="0.0138%" height="15" fill="rgb(216,85,19)" fg:x="59548451356" fg:w="8238924"/><text x="100.2292%" y="495.50"></text></g><g><title>all (59,560,850,755 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(235,228,7)" fg:x="0" fg:w="59560850755"/><text x="0.2500%" y="543.50"></text></g><g><title>lb_apis-6320936 (59,560,850,755 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(245,175,0)" fg:x="0" fg:w="59560850755"/><text x="0.2500%" y="527.50">lb_apis-6320936</text></g></svg></svg>