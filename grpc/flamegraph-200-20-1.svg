<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="550" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="533.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="533.00"> </text><svg id="frames" x="10" width="1180" total_samples="56137844313"><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,229,353 samples, 0.02%)</title><rect x="0.3292%" y="277" width="0.0218%" height="15" fill="rgb(227,0,7)" fg:x="184797427" fg:w="12229353"/><text x="0.5792%" y="287.50"></text></g><g><title>[unknown] (8,053,696 samples, 0.01%)</title><rect x="0.6701%" y="229" width="0.0143%" height="15" fill="rgb(217,0,24)" fg:x="376174326" fg:w="8053696"/><text x="0.9201%" y="239.50"></text></g><g><title>[unknown] (8,053,696 samples, 0.01%)</title><rect x="0.6701%" y="213" width="0.0143%" height="15" fill="rgb(221,193,54)" fg:x="376174326" fg:w="8053696"/><text x="0.9201%" y="223.50"></text></g><g><title>[unknown] (8,053,696 samples, 0.01%)</title><rect x="0.6701%" y="197" width="0.0143%" height="15" fill="rgb(248,212,6)" fg:x="376174326" fg:w="8053696"/><text x="0.9201%" y="207.50"></text></g><g><title>[unknown] (8,053,696 samples, 0.01%)</title><rect x="0.6701%" y="181" width="0.0143%" height="15" fill="rgb(208,68,35)" fg:x="376174326" fg:w="8053696"/><text x="0.9201%" y="191.50"></text></g><g><title>[unknown] (8,053,696 samples, 0.01%)</title><rect x="0.6701%" y="165" width="0.0143%" height="15" fill="rgb(232,128,0)" fg:x="376174326" fg:w="8053696"/><text x="0.9201%" y="175.50"></text></g><g><title>__GI___libc_malloc (214,164,990 samples, 0.38%)</title><rect x="0.6844%" y="229" width="0.3815%" height="15" fill="rgb(207,160,47)" fg:x="384228022" fg:w="214164990"/><text x="0.9344%" y="239.50"></text></g><g><title>_int_malloc (177,409,296 samples, 0.32%)</title><rect x="0.7499%" y="213" width="0.3160%" height="15" fill="rgb(228,23,34)" fg:x="420983716" fg:w="177409296"/><text x="0.9999%" y="223.50"></text></g><g><title>unlink_chunk (8,126,364 samples, 0.01%)</title><rect x="1.0515%" y="197" width="0.0145%" height="15" fill="rgb(218,30,26)" fg:x="590266648" fg:w="8126364"/><text x="1.3015%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16,220,543 samples, 0.03%)</title><rect x="1.0659%" y="229" width="0.0289%" height="15" fill="rgb(220,122,19)" fg:x="598393012" fg:w="16220543"/><text x="1.3159%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.3538639466319289803 (16,220,543 samples, 0.03%)</title><rect x="1.0659%" y="213" width="0.0289%" height="15" fill="rgb(250,228,42)" fg:x="598393012" fg:w="16220543"/><text x="1.3159%" y="223.50"></text></g><g><title>__GI___libc_realloc (16,220,543 samples, 0.03%)</title><rect x="1.0659%" y="197" width="0.0289%" height="15" fill="rgb(240,193,28)" fg:x="598393012" fg:w="16220543"/><text x="1.3159%" y="207.50"></text></g><g><title>_int_realloc (16,220,543 samples, 0.03%)</title><rect x="1.0659%" y="181" width="0.0289%" height="15" fill="rgb(216,20,37)" fg:x="598393012" fg:w="16220543"/><text x="1.3159%" y="191.50"></text></g><g><title>_int_malloc (16,220,543 samples, 0.03%)</title><rect x="1.0659%" y="165" width="0.0289%" height="15" fill="rgb(206,188,39)" fg:x="598393012" fg:w="16220543"/><text x="1.3159%" y="175.50"></text></g><g><title>malloc_consolidate (16,220,543 samples, 0.03%)</title><rect x="1.0659%" y="149" width="0.0289%" height="15" fill="rgb(217,207,13)" fg:x="598393012" fg:w="16220543"/><text x="1.3159%" y="159.50"></text></g><g><title>unlink_chunk (16,220,543 samples, 0.03%)</title><rect x="1.0659%" y="133" width="0.0289%" height="15" fill="rgb(231,73,38)" fg:x="598393012" fg:w="16220543"/><text x="1.3159%" y="143.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (335,707,868 samples, 0.60%)</title><rect x="0.5256%" y="245" width="0.5980%" height="15" fill="rgb(225,20,46)" fg:x="295086470" fg:w="335707868"/><text x="0.7756%" y="255.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (16,180,783 samples, 0.03%)</title><rect x="1.0948%" y="229" width="0.0288%" height="15" fill="rgb(210,31,41)" fg:x="614613555" fg:w="16180783"/><text x="1.3448%" y="239.50"></text></g><g><title>__GI_memcpy (20,484,031 samples, 0.04%)</title><rect x="1.1455%" y="181" width="0.0365%" height="15" fill="rgb(221,200,47)" fg:x="643080036" fg:w="20484031"/><text x="1.3955%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16,367,722 samples, 0.03%)</title><rect x="1.1529%" y="165" width="0.0292%" height="15" fill="rgb(226,26,5)" fg:x="647196345" fg:w="16367722"/><text x="1.4029%" y="175.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (442,185,110 samples, 0.79%)</title><rect x="0.4308%" y="261" width="0.7877%" height="15" fill="rgb(249,33,26)" fg:x="241824467" fg:w="442185110"/><text x="0.6808%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (53,215,239 samples, 0.09%)</title><rect x="1.1237%" y="245" width="0.0948%" height="15" fill="rgb(235,183,28)" fg:x="630794338" fg:w="53215239"/><text x="1.3737%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (49,129,646 samples, 0.09%)</title><rect x="1.1309%" y="229" width="0.0875%" height="15" fill="rgb(221,5,38)" fg:x="634879931" fg:w="49129646"/><text x="1.3809%" y="239.50"></text></g><g><title>__GI___libc_realloc (49,129,646 samples, 0.09%)</title><rect x="1.1309%" y="213" width="0.0875%" height="15" fill="rgb(247,18,42)" fg:x="634879931" fg:w="49129646"/><text x="1.3809%" y="223.50"></text></g><g><title>_int_realloc (45,030,650 samples, 0.08%)</title><rect x="1.1382%" y="197" width="0.0802%" height="15" fill="rgb(241,131,45)" fg:x="638978927" fg:w="45030650"/><text x="1.3882%" y="207.50"></text></g><g><title>_int_malloc (16,277,556 samples, 0.03%)</title><rect x="1.1895%" y="181" width="0.0290%" height="15" fill="rgb(249,31,29)" fg:x="667732021" fg:w="16277556"/><text x="1.4395%" y="191.50"></text></g><g><title>_int_free (55,836,275 samples, 0.10%)</title><rect x="1.2564%" y="245" width="0.0995%" height="15" fill="rgb(225,111,53)" fg:x="705321430" fg:w="55836275"/><text x="1.5064%" y="255.50"></text></g><g><title>__GI___libc_free (81,157,229 samples, 0.14%)</title><rect x="1.2184%" y="261" width="0.1446%" height="15" fill="rgb(238,160,17)" fg:x="684009577" fg:w="81157229"/><text x="1.4684%" y="271.50"></text></g><g><title>__rdl_dealloc (25,494,372 samples, 0.05%)</title><rect x="1.3630%" y="261" width="0.0454%" height="15" fill="rgb(214,148,48)" fg:x="765166806" fg:w="25494372"/><text x="1.6130%" y="271.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::connect (12,270,717 samples, 0.02%)</title><rect x="1.4157%" y="261" width="0.0219%" height="15" fill="rgb(232,36,49)" fg:x="794718662" fg:w="12270717"/><text x="1.6657%" y="271.50"></text></g><g><title>_int_malloc (8,319,948 samples, 0.01%)</title><rect x="1.7197%" y="213" width="0.0148%" height="15" fill="rgb(209,103,24)" fg:x="965397956" fg:w="8319948"/><text x="1.9697%" y="223.50"></text></g><g><title>__GI___libc_malloc (12,311,074 samples, 0.02%)</title><rect x="1.7197%" y="229" width="0.0219%" height="15" fill="rgb(229,88,8)" fg:x="965397956" fg:w="12311074"/><text x="1.9697%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.6716246681252942186 (179,508,015 samples, 0.32%)</title><rect x="1.5825%" y="245" width="0.3198%" height="15" fill="rgb(213,181,19)" fg:x="888402065" fg:w="179508015"/><text x="1.8325%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (86,134,511 samples, 0.15%)</title><rect x="1.7489%" y="229" width="0.1534%" height="15" fill="rgb(254,191,54)" fg:x="981775569" fg:w="86134511"/><text x="1.9989%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (12,525,447 samples, 0.02%)</title><rect x="1.8800%" y="213" width="0.0223%" height="15" fill="rgb(241,83,37)" fg:x="1055384633" fg:w="12525447"/><text x="2.1300%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (305,599,783 samples, 0.54%)</title><rect x="1.4375%" y="261" width="0.5444%" height="15" fill="rgb(233,36,39)" fg:x="806989379" fg:w="305599783"/><text x="1.6875%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (44,679,082 samples, 0.08%)</title><rect x="1.9023%" y="245" width="0.0796%" height="15" fill="rgb(226,3,54)" fg:x="1067910080" fg:w="44679082"/><text x="2.1523%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (922,326,207 samples, 1.64%)</title><rect x="0.3510%" y="277" width="1.6430%" height="15" fill="rgb(245,192,40)" fg:x="197026780" fg:w="922326207"/><text x="0.6010%" y="287.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (6,763,825 samples, 0.01%)</title><rect x="1.9819%" y="261" width="0.0120%" height="15" fill="rgb(238,167,29)" fg:x="1112589162" fg:w="6763825"/><text x="2.2319%" y="271.50"></text></g><g><title>__GI___libc_malloc (144,732,019 samples, 0.26%)</title><rect x="2.2193%" y="229" width="0.2578%" height="15" fill="rgb(232,182,51)" fg:x="1245878630" fg:w="144732019"/><text x="2.4693%" y="239.50"></text></g><g><title>_int_malloc (83,773,518 samples, 0.15%)</title><rect x="2.3279%" y="213" width="0.1492%" height="15" fill="rgb(231,60,39)" fg:x="1306837131" fg:w="83773518"/><text x="2.5779%" y="223.50"></text></g><g><title>checked_request2size (8,315,603 samples, 0.01%)</title><rect x="2.4623%" y="197" width="0.0148%" height="15" fill="rgb(208,69,12)" fg:x="1382295046" fg:w="8315603"/><text x="2.7123%" y="207.50"></text></g><g><title>__memcpy_avx_unaligned (8,064,813 samples, 0.01%)</title><rect x="2.4771%" y="229" width="0.0144%" height="15" fill="rgb(235,93,37)" fg:x="1390610649" fg:w="8064813"/><text x="2.7271%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,069,886 samples, 0.01%)</title><rect x="2.4915%" y="229" width="0.0144%" height="15" fill="rgb(213,116,39)" fg:x="1398675462" fg:w="8069886"/><text x="2.7415%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (193,587,960 samples, 0.34%)</title><rect x="2.1683%" y="245" width="0.3448%" height="15" fill="rgb(222,207,29)" fg:x="1217233249" fg:w="193587960"/><text x="2.4183%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (279,318,687 samples, 0.50%)</title><rect x="2.0230%" y="261" width="0.4976%" height="15" fill="rgb(206,96,30)" fg:x="1135693550" fg:w="279318687"/><text x="2.2730%" y="271.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h7d8f287740a6f638E.llvm.11803501155158533750 (303,415,619 samples, 0.54%)</title><rect x="1.9939%" y="277" width="0.5405%" height="15" fill="rgb(218,138,4)" fg:x="1119352987" fg:w="303415619"/><text x="2.2439%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7,756,369 samples, 0.01%)</title><rect x="2.5206%" y="261" width="0.0138%" height="15" fill="rgb(250,191,14)" fg:x="1415012237" fg:w="7756369"/><text x="2.7706%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.3538639466319289803 (7,756,369 samples, 0.01%)</title><rect x="2.5206%" y="245" width="0.0138%" height="15" fill="rgb(239,60,40)" fg:x="1415012237" fg:w="7756369"/><text x="2.7706%" y="255.50"></text></g><g><title>__GI___libc_malloc (7,756,369 samples, 0.01%)</title><rect x="2.5206%" y="229" width="0.0138%" height="15" fill="rgb(206,27,48)" fg:x="1415012237" fg:w="7756369"/><text x="2.7706%" y="239.50"></text></g><g><title>_int_free_maybe_consolidate (24,643,722 samples, 0.04%)</title><rect x="2.5566%" y="245" width="0.0439%" height="15" fill="rgb(225,35,8)" fg:x="1435229783" fg:w="24643722"/><text x="2.8066%" y="255.50"></text></g><g><title>malloc_consolidate (24,643,722 samples, 0.04%)</title><rect x="2.5566%" y="229" width="0.0439%" height="15" fill="rgb(250,213,24)" fg:x="1435229783" fg:w="24643722"/><text x="2.8066%" y="239.50"></text></g><g><title>unlink_chunk (8,282,187 samples, 0.01%)</title><rect x="2.5858%" y="213" width="0.0148%" height="15" fill="rgb(247,123,22)" fg:x="1451591318" fg:w="8282187"/><text x="2.8358%" y="223.50"></text></g><g><title>__GI___libc_free (32,944,824 samples, 0.06%)</title><rect x="2.5492%" y="261" width="0.0587%" height="15" fill="rgb(231,138,38)" fg:x="1431080654" fg:w="32944824"/><text x="2.7992%" y="271.50"></text></g><g><title>[unknown] (28,567,429 samples, 0.05%)</title><rect x="2.8770%" y="229" width="0.0509%" height="15" fill="rgb(231,145,46)" fg:x="1615066958" fg:w="28567429"/><text x="3.1270%" y="239.50"></text></g><g><title>[unknown] (28,567,429 samples, 0.05%)</title><rect x="2.8770%" y="213" width="0.0509%" height="15" fill="rgb(251,118,11)" fg:x="1615066958" fg:w="28567429"/><text x="3.1270%" y="223.50"></text></g><g><title>[unknown] (28,567,429 samples, 0.05%)</title><rect x="2.8770%" y="197" width="0.0509%" height="15" fill="rgb(217,147,25)" fg:x="1615066958" fg:w="28567429"/><text x="3.1270%" y="207.50"></text></g><g><title>[unknown] (24,521,383 samples, 0.04%)</title><rect x="2.8842%" y="181" width="0.0437%" height="15" fill="rgb(247,81,37)" fg:x="1619113004" fg:w="24521383"/><text x="3.1342%" y="191.50"></text></g><g><title>[unknown] (24,521,383 samples, 0.04%)</title><rect x="2.8842%" y="165" width="0.0437%" height="15" fill="rgb(209,12,38)" fg:x="1619113004" fg:w="24521383"/><text x="3.1342%" y="175.50"></text></g><g><title>[unknown] (16,322,574 samples, 0.03%)</title><rect x="2.8988%" y="149" width="0.0291%" height="15" fill="rgb(227,1,9)" fg:x="1627311813" fg:w="16322574"/><text x="3.1488%" y="159.50"></text></g><g><title>[unknown] (12,152,505 samples, 0.02%)</title><rect x="2.9062%" y="133" width="0.0216%" height="15" fill="rgb(248,47,43)" fg:x="1631481882" fg:w="12152505"/><text x="3.1562%" y="143.50"></text></g><g><title>[unknown] (12,152,505 samples, 0.02%)</title><rect x="2.9062%" y="117" width="0.0216%" height="15" fill="rgb(221,10,30)" fg:x="1631481882" fg:w="12152505"/><text x="3.1562%" y="127.50"></text></g><g><title>__GI___libc_malloc (93,371,220 samples, 0.17%)</title><rect x="2.9279%" y="229" width="0.1663%" height="15" fill="rgb(210,229,1)" fg:x="1643634387" fg:w="93371220"/><text x="3.1779%" y="239.50"></text></g><g><title>_int_malloc (93,371,220 samples, 0.17%)</title><rect x="2.9279%" y="213" width="0.1663%" height="15" fill="rgb(222,148,37)" fg:x="1643634387" fg:w="93371220"/><text x="3.1779%" y="223.50"></text></g><g><title>malloc_consolidate (89,322,707 samples, 0.16%)</title><rect x="2.9351%" y="197" width="0.1591%" height="15" fill="rgb(234,67,33)" fg:x="1647682900" fg:w="89322707"/><text x="3.1851%" y="207.50"></text></g><g><title>unlink_chunk (52,857,492 samples, 0.09%)</title><rect x="3.0000%" y="181" width="0.0942%" height="15" fill="rgb(247,98,35)" fg:x="1684148115" fg:w="52857492"/><text x="3.2500%" y="191.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.6716246681252942186 (236,876,724 samples, 0.42%)</title><rect x="2.7896%" y="245" width="0.4220%" height="15" fill="rgb(247,138,52)" fg:x="1566005028" fg:w="236876724"/><text x="3.0396%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (65,876,145 samples, 0.12%)</title><rect x="3.0942%" y="229" width="0.1173%" height="15" fill="rgb(213,79,30)" fg:x="1737005607" fg:w="65876145"/><text x="3.3442%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,316,316 samples, 0.01%)</title><rect x="3.1967%" y="213" width="0.0148%" height="15" fill="rgb(246,177,23)" fg:x="1794565436" fg:w="8316316"/><text x="3.4467%" y="223.50"></text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (427,794,922 samples, 0.76%)</title><rect x="2.5419%" y="277" width="0.7620%" height="15" fill="rgb(230,62,27)" fg:x="1426953419" fg:w="427794922"/><text x="2.7919%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (386,668,635 samples, 0.69%)</title><rect x="2.6151%" y="261" width="0.6888%" height="15" fill="rgb(216,154,8)" fg:x="1468079706" fg:w="386668635"/><text x="2.8651%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (51,866,589 samples, 0.09%)</title><rect x="3.2115%" y="245" width="0.0924%" height="15" fill="rgb(244,35,45)" fg:x="1802881752" fg:w="51866589"/><text x="3.4615%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (1,805,784,871 samples, 3.22%)</title><rect x="0.3194%" y="293" width="3.2167%" height="15" fill="rgb(251,115,12)" fg:x="179304295" fg:w="1805784871"/><text x="0.5694%" y="303.50">&lt;gr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (130,340,825 samples, 0.23%)</title><rect x="3.3039%" y="277" width="0.2322%" height="15" fill="rgb(240,54,50)" fg:x="1854748341" fg:w="130340825"/><text x="3.5539%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (130,340,825 samples, 0.23%)</title><rect x="3.3039%" y="261" width="0.2322%" height="15" fill="rgb(233,84,52)" fg:x="1854748341" fg:w="130340825"/><text x="3.5539%" y="271.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (130,340,825 samples, 0.23%)</title><rect x="3.3039%" y="245" width="0.2322%" height="15" fill="rgb(207,117,47)" fg:x="1854748341" fg:w="130340825"/><text x="3.5539%" y="255.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.13368858155757049781 (105,839,921 samples, 0.19%)</title><rect x="3.3476%" y="229" width="0.1885%" height="15" fill="rgb(249,43,39)" fg:x="1879249245" fg:w="105839921"/><text x="3.5976%" y="239.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h8e0f56f6ac8014d1E.llvm.11803501155158533750 (12,199,238 samples, 0.02%)</title><rect x="3.5361%" y="293" width="0.0217%" height="15" fill="rgb(209,38,44)" fg:x="1985089166" fg:w="12199238"/><text x="3.7861%" y="303.50"></text></g><g><title>__GI___libc_malloc (12,199,238 samples, 0.02%)</title><rect x="3.5361%" y="277" width="0.0217%" height="15" fill="rgb(236,212,23)" fg:x="1985089166" fg:w="12199238"/><text x="3.7861%" y="287.50"></text></g><g><title>_int_malloc (12,199,238 samples, 0.02%)</title><rect x="3.5361%" y="261" width="0.0217%" height="15" fill="rgb(242,79,21)" fg:x="1985089166" fg:w="12199238"/><text x="3.7861%" y="271.50"></text></g><g><title>malloc_consolidate (8,079,625 samples, 0.01%)</title><rect x="3.5434%" y="245" width="0.0144%" height="15" fill="rgb(211,96,35)" fg:x="1989208779" fg:w="8079625"/><text x="3.7934%" y="255.50"></text></g><g><title>unlink_chunk (8,079,625 samples, 0.01%)</title><rect x="3.5434%" y="229" width="0.0144%" height="15" fill="rgb(253,215,40)" fg:x="1989208779" fg:w="8079625"/><text x="3.7934%" y="239.50"></text></g><g><title>__GI___libc_malloc (89,713,531 samples, 0.16%)</title><rect x="3.5578%" y="293" width="0.1598%" height="15" fill="rgb(211,81,21)" fg:x="1997288404" fg:w="89713531"/><text x="3.8078%" y="303.50"></text></g><g><title>_int_malloc (73,379,519 samples, 0.13%)</title><rect x="3.5869%" y="277" width="0.1307%" height="15" fill="rgb(208,190,38)" fg:x="2013622416" fg:w="73379519"/><text x="3.8369%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (32,603,597 samples, 0.06%)</title><rect x="3.8652%" y="261" width="0.0581%" height="15" fill="rgb(235,213,38)" fg:x="2169847516" fg:w="32603597"/><text x="4.1152%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (8,108,623 samples, 0.01%)</title><rect x="4.1459%" y="229" width="0.0144%" height="15" fill="rgb(237,122,38)" fg:x="2327395110" fg:w="8108623"/><text x="4.3959%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,167,521 samples, 0.01%)</title><rect x="4.1603%" y="229" width="0.0145%" height="15" fill="rgb(244,218,35)" fg:x="2335503733" fg:w="8167521"/><text x="4.4103%" y="239.50"></text></g><g><title>checked_request2size (8,216,977 samples, 0.01%)</title><rect x="4.5043%" y="165" width="0.0146%" height="15" fill="rgb(240,68,47)" fg:x="2528593826" fg:w="8216977"/><text x="4.7543%" y="175.50"></text></g><g><title>__GI___libc_malloc (153,448,335 samples, 0.27%)</title><rect x="4.2603%" y="197" width="0.2733%" height="15" fill="rgb(210,16,53)" fg:x="2391629869" fg:w="153448335"/><text x="4.5103%" y="207.50"></text></g><g><title>_int_malloc (120,993,036 samples, 0.22%)</title><rect x="4.3181%" y="181" width="0.2155%" height="15" fill="rgb(235,124,12)" fg:x="2424085168" fg:w="120993036"/><text x="4.5681%" y="191.50"></text></g><g><title>unlink_chunk (8,267,401 samples, 0.01%)</title><rect x="4.5189%" y="165" width="0.0147%" height="15" fill="rgb(224,169,11)" fg:x="2536810803" fg:w="8267401"/><text x="4.7689%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (251,797,806 samples, 0.45%)</title><rect x="4.0997%" y="245" width="0.4485%" height="15" fill="rgb(250,166,2)" fg:x="2301476012" fg:w="251797806"/><text x="4.3497%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (209,602,564 samples, 0.37%)</title><rect x="4.1749%" y="229" width="0.3734%" height="15" fill="rgb(242,216,29)" fg:x="2343671254" fg:w="209602564"/><text x="4.4249%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (182,341,429 samples, 0.32%)</title><rect x="4.2234%" y="213" width="0.3248%" height="15" fill="rgb(230,116,27)" fg:x="2370932389" fg:w="182341429"/><text x="4.4734%" y="223.50"></text></g><g><title>__rust_alloc (8,195,614 samples, 0.01%)</title><rect x="4.5336%" y="197" width="0.0146%" height="15" fill="rgb(228,99,48)" fg:x="2545078204" fg:w="8195614"/><text x="4.7836%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (542,381,301 samples, 0.97%)</title><rect x="3.7250%" y="293" width="0.9662%" height="15" fill="rgb(253,11,6)" fg:x="2091137024" fg:w="542381301"/><text x="3.9750%" y="303.50"></text></g><g><title>core::fmt::write (534,190,096 samples, 0.95%)</title><rect x="3.7396%" y="277" width="0.9516%" height="15" fill="rgb(247,143,39)" fg:x="2099328229" fg:w="534190096"/><text x="3.9896%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (431,067,212 samples, 0.77%)</title><rect x="3.9233%" y="261" width="0.7679%" height="15" fill="rgb(236,97,10)" fg:x="2202451113" fg:w="431067212"/><text x="4.1733%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (80,244,507 samples, 0.14%)</title><rect x="4.5482%" y="245" width="0.1429%" height="15" fill="rgb(233,208,19)" fg:x="2553273818" fg:w="80244507"/><text x="4.7982%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (32,662,730 samples, 0.06%)</title><rect x="4.6330%" y="229" width="0.0582%" height="15" fill="rgb(216,164,2)" fg:x="2600855595" fg:w="32662730"/><text x="4.8830%" y="239.50"></text></g><g><title>__GI_memcpy (15,783,115 samples, 0.03%)</title><rect x="4.7424%" y="229" width="0.0281%" height="15" fill="rgb(220,129,5)" fg:x="2662297179" fg:w="15783115"/><text x="4.9924%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15,783,115 samples, 0.03%)</title><rect x="4.7424%" y="213" width="0.0281%" height="15" fill="rgb(242,17,10)" fg:x="2662297179" fg:w="15783115"/><text x="4.9924%" y="223.50"></text></g><g><title>malloc_consolidate (195,235,605 samples, 0.35%)</title><rect x="4.8211%" y="213" width="0.3478%" height="15" fill="rgb(242,107,0)" fg:x="2706473088" fg:w="195235605"/><text x="5.0711%" y="223.50"></text></g><g><title>unlink_chunk (97,794,851 samples, 0.17%)</title><rect x="4.9947%" y="197" width="0.1742%" height="15" fill="rgb(251,28,31)" fg:x="2803913842" fg:w="97794851"/><text x="5.2447%" y="207.50"></text></g><g><title>_int_realloc (251,308,591 samples, 0.45%)</title><rect x="4.7212%" y="245" width="0.4477%" height="15" fill="rgb(233,223,10)" fg:x="2650400279" fg:w="251308591"/><text x="4.9712%" y="255.50"></text></g><g><title>_int_malloc (219,452,234 samples, 0.39%)</title><rect x="4.7780%" y="229" width="0.3909%" height="15" fill="rgb(215,21,27)" fg:x="2682256636" fg:w="219452234"/><text x="5.0280%" y="239.50"></text></g><g><title>__GI___libc_realloc (255,378,922 samples, 0.45%)</title><rect x="4.7212%" y="261" width="0.4549%" height="15" fill="rgb(232,23,21)" fg:x="2650400279" fg:w="255378922"/><text x="4.9712%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (276,253,382 samples, 0.49%)</title><rect x="4.6912%" y="293" width="0.4921%" height="15" fill="rgb(244,5,23)" fg:x="2633518325" fg:w="276253382"/><text x="4.9412%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.3538639466319289803 (263,460,035 samples, 0.47%)</title><rect x="4.7140%" y="277" width="0.4693%" height="15" fill="rgb(226,81,46)" fg:x="2646311672" fg:w="263460035"/><text x="4.9640%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::SubchannelUpdate as core::default::Default&gt;::default (24,560,774 samples, 0.04%)</title><rect x="5.4606%" y="277" width="0.0438%" height="15" fill="rgb(247,70,30)" fg:x="3065443513" fg:w="24560774"/><text x="5.7106%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (62,071,842 samples, 0.11%)</title><rect x="7.3329%" y="245" width="0.1106%" height="15" fill="rgb(212,68,19)" fg:x="4116555719" fg:w="62071842"/><text x="7.5829%" y="255.50"></text></g><g><title>__GI___libc_malloc (20,665,902 samples, 0.04%)</title><rect x="7.4435%" y="245" width="0.0368%" height="15" fill="rgb(240,187,13)" fg:x="4178627561" fg:w="20665902"/><text x="7.6935%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (65,958,894 samples, 0.12%)</title><rect x="7.4878%" y="245" width="0.1175%" height="15" fill="rgb(223,113,26)" fg:x="4203469008" fg:w="65958894"/><text x="7.7378%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (951,069,698 samples, 1.69%)</title><rect x="5.9185%" y="261" width="1.6942%" height="15" fill="rgb(206,192,2)" fg:x="3322540111" fg:w="951069698"/><text x="6.1685%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28,912,995 samples, 0.05%)</title><rect x="7.6127%" y="261" width="0.0515%" height="15" fill="rgb(241,108,4)" fg:x="4273609809" fg:w="28912995"/><text x="7.8627%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,317,571 samples, 0.01%)</title><rect x="7.6494%" y="245" width="0.0148%" height="15" fill="rgb(247,173,49)" fg:x="4294205233" fg:w="8317571"/><text x="7.8994%" y="255.50"></text></g><g><title>__GI___libc_free (16,540,737 samples, 0.03%)</title><rect x="7.7231%" y="245" width="0.0295%" height="15" fill="rgb(224,114,35)" fg:x="4335588409" fg:w="16540737"/><text x="7.9731%" y="255.50"></text></g><g><title>_int_free (8,319,103 samples, 0.01%)</title><rect x="7.7378%" y="229" width="0.0148%" height="15" fill="rgb(245,159,27)" fg:x="4343810043" fg:w="8319103"/><text x="7.9878%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (1,320,158,672 samples, 2.35%)</title><rect x="5.5043%" y="277" width="2.3516%" height="15" fill="rgb(245,172,44)" fg:x="3090004287" fg:w="1320158672"/><text x="5.7543%" y="287.50">&lt;..</text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (107,640,155 samples, 0.19%)</title><rect x="7.6642%" y="261" width="0.1917%" height="15" fill="rgb(236,23,11)" fg:x="4302522804" fg:w="107640155"/><text x="7.9142%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (53,887,792 samples, 0.10%)</title><rect x="7.7600%" y="245" width="0.0960%" height="15" fill="rgb(205,117,38)" fg:x="4356275167" fg:w="53887792"/><text x="8.0100%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (95,019,973 samples, 0.17%)</title><rect x="7.8560%" y="277" width="0.1693%" height="15" fill="rgb(237,72,25)" fg:x="4410162959" fg:w="95019973"/><text x="8.1060%" y="287.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (41,411,358 samples, 0.07%)</title><rect x="8.0252%" y="277" width="0.0738%" height="15" fill="rgb(244,70,9)" fg:x="4505182932" fg:w="41411358"/><text x="8.2752%" y="287.50"></text></g><g><title>__GI___libc_malloc (16,560,673 samples, 0.03%)</title><rect x="22.7825%" y="245" width="0.0295%" height="15" fill="rgb(217,125,39)" fg:x="12789591298" fg:w="16560673"/><text x="23.0325%" y="255.50"></text></g><g><title>tcache_get (12,391,325 samples, 0.02%)</title><rect x="22.7899%" y="229" width="0.0221%" height="15" fill="rgb(235,36,10)" fg:x="12793760646" fg:w="12391325"/><text x="23.0399%" y="239.50"></text></g><g><title>tcache_get_n (12,391,325 samples, 0.02%)</title><rect x="22.7899%" y="213" width="0.0221%" height="15" fill="rgb(251,123,47)" fg:x="12793760646" fg:w="12391325"/><text x="23.0399%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned (11,208,223 samples, 0.02%)</title><rect x="23.5346%" y="165" width="0.0200%" height="15" fill="rgb(221,13,13)" fg:x="13211825341" fg:w="11208223"/><text x="23.7846%" y="175.50"></text></g><g><title>__GI_memcpy (317,307,703 samples, 0.57%)</title><rect x="23.5197%" y="181" width="0.5652%" height="15" fill="rgb(238,131,9)" fg:x="13203479662" fg:w="317307703"/><text x="23.7697%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned_erms (297,753,801 samples, 0.53%)</title><rect x="23.5546%" y="165" width="0.5304%" height="15" fill="rgb(211,50,8)" fg:x="13223033564" fg:w="297753801"/><text x="23.8046%" y="175.50"></text></g><g><title>_int_free (57,787,269 samples, 0.10%)</title><rect x="24.0850%" y="181" width="0.1029%" height="15" fill="rgb(245,182,24)" fg:x="13520787365" fg:w="57787269"/><text x="24.3350%" y="191.50"></text></g><g><title>_int_free_create_chunk (78,681,007 samples, 0.14%)</title><rect x="24.2758%" y="165" width="0.1402%" height="15" fill="rgb(242,14,37)" fg:x="13627912765" fg:w="78681007"/><text x="24.5258%" y="175.50"></text></g><g><title>unlink_chunk (24,861,646 samples, 0.04%)</title><rect x="24.3717%" y="149" width="0.0443%" height="15" fill="rgb(246,228,12)" fg:x="13681732126" fg:w="24861646"/><text x="24.6217%" y="159.50"></text></g><g><title>_int_free_merge_chunk (132,127,245 samples, 0.24%)</title><rect x="24.1879%" y="181" width="0.2354%" height="15" fill="rgb(213,55,15)" fg:x="13578574634" fg:w="132127245"/><text x="24.4379%" y="191.50"></text></g><g><title>_int_malloc (438,368,526 samples, 0.78%)</title><rect x="24.4233%" y="181" width="0.7809%" height="15" fill="rgb(209,9,3)" fg:x="13710701879" fg:w="438368526"/><text x="24.6733%" y="191.50"></text></g><g><title>unlink_chunk (103,647,888 samples, 0.18%)</title><rect x="25.0195%" y="165" width="0.1846%" height="15" fill="rgb(230,59,30)" fg:x="14045422517" fg:w="103647888"/><text x="25.2695%" y="175.50"></text></g><g><title>_int_realloc (1,044,768,352 samples, 1.86%)</title><rect x="23.3578%" y="197" width="1.8611%" height="15" fill="rgb(209,121,21)" fg:x="13112585831" fg:w="1044768352"/><text x="23.6078%" y="207.50">_..</text></g><g><title>unlink_chunk (8,283,778 samples, 0.01%)</title><rect x="25.2042%" y="181" width="0.0148%" height="15" fill="rgb(220,109,13)" fg:x="14149070405" fg:w="8283778"/><text x="25.4542%" y="191.50"></text></g><g><title>checked_request2size (12,447,104 samples, 0.02%)</title><rect x="25.2262%" y="197" width="0.0222%" height="15" fill="rgb(232,18,1)" fg:x="14161439846" fg:w="12447104"/><text x="25.4762%" y="207.50"></text></g><g><title>__GI___libc_realloc (1,181,797,176 samples, 2.11%)</title><rect x="23.1578%" y="213" width="2.1052%" height="15" fill="rgb(215,41,42)" fg:x="13000265380" fg:w="1181797176"/><text x="23.4078%" y="223.50">_..</text></g><g><title>musable (8,175,606 samples, 0.01%)</title><rect x="25.2484%" y="197" width="0.0146%" height="15" fill="rgb(224,123,36)" fg:x="14173886950" fg:w="8175606"/><text x="25.4984%" y="207.50"></text></g><g><title>__rdl_realloc (28,871,152 samples, 0.05%)</title><rect x="25.2629%" y="213" width="0.0514%" height="15" fill="rgb(240,125,3)" fg:x="14182062556" fg:w="28871152"/><text x="25.5129%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6,622,588,875 samples, 11.80%)</title><rect x="13.5395%" y="261" width="11.7970%" height="15" fill="rgb(205,98,50)" fg:x="7600755385" fg:w="6622588875"/><text x="13.7895%" y="271.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,417,192,289 samples, 2.52%)</title><rect x="22.8120%" y="245" width="2.5245%" height="15" fill="rgb(205,185,37)" fg:x="12806151971" fg:w="1417192289"/><text x="23.0620%" y="255.50">al..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.3538639466319289803 (1,309,827,069 samples, 2.33%)</title><rect x="23.0032%" y="229" width="2.3332%" height="15" fill="rgb(238,207,15)" fg:x="12913517191" fg:w="1309827069"/><text x="23.2532%" y="239.50">_..</text></g><g><title>__rust_realloc (12,410,552 samples, 0.02%)</title><rect x="25.3144%" y="213" width="0.0221%" height="15" fill="rgb(213,199,42)" fg:x="14210933708" fg:w="12410552"/><text x="25.5644%" y="223.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (33,201,569 samples, 0.06%)</title><rect x="25.3365%" y="261" width="0.0591%" height="15" fill="rgb(235,201,11)" fg:x="14223344260" fg:w="33201569"/><text x="25.5865%" y="271.50"></text></g><g><title>_int_free (45,502,279 samples, 0.08%)</title><rect x="25.4250%" y="245" width="0.0811%" height="15" fill="rgb(207,46,11)" fg:x="14273031320" fg:w="45502279"/><text x="25.6750%" y="255.50"></text></g><g><title>_int_free_merge_chunk (49,567,220 samples, 0.09%)</title><rect x="25.5060%" y="245" width="0.0883%" height="15" fill="rgb(241,35,35)" fg:x="14318533599" fg:w="49567220"/><text x="25.7560%" y="255.50"></text></g><g><title>_int_free_create_chunk (45,493,560 samples, 0.08%)</title><rect x="25.5133%" y="229" width="0.0810%" height="15" fill="rgb(243,32,47)" fg:x="14322607259" fg:w="45493560"/><text x="25.7633%" y="239.50"></text></g><g><title>unlink_chunk (16,466,419 samples, 0.03%)</title><rect x="25.5650%" y="213" width="0.0293%" height="15" fill="rgb(247,202,23)" fg:x="14351634400" fg:w="16466419"/><text x="25.8150%" y="223.50"></text></g><g><title>__GI___libc_free (115,675,440 samples, 0.21%)</title><rect x="25.3956%" y="261" width="0.2061%" height="15" fill="rgb(219,102,11)" fg:x="14256545829" fg:w="115675440"/><text x="25.6456%" y="271.50"></text></g><g><title>malloc_consolidate (12,382,769 samples, 0.02%)</title><rect x="25.9252%" y="229" width="0.0221%" height="15" fill="rgb(243,110,44)" fg:x="14553833566" fg:w="12382769"/><text x="26.1752%" y="239.50"></text></g><g><title>_int_malloc (206,466,050 samples, 0.37%)</title><rect x="25.6163%" y="245" width="0.3678%" height="15" fill="rgb(222,74,54)" fg:x="14380416320" fg:w="206466050"/><text x="25.8663%" y="255.50"></text></g><g><title>unlink_chunk (20,666,035 samples, 0.04%)</title><rect x="25.9472%" y="229" width="0.0368%" height="15" fill="rgb(216,99,12)" fg:x="14566216335" fg:w="20666035"/><text x="26.1972%" y="239.50"></text></g><g><title>__GI___libc_malloc (218,804,070 samples, 0.39%)</title><rect x="25.6017%" y="261" width="0.3898%" height="15" fill="rgb(226,22,26)" fg:x="14372221269" fg:w="218804070"/><text x="25.8517%" y="271.50"></text></g><g><title>_int_free (8,317,536 samples, 0.01%)</title><rect x="26.0506%" y="229" width="0.0148%" height="15" fill="rgb(217,163,10)" fg:x="14624253729" fg:w="8317536"/><text x="26.3006%" y="239.50"></text></g><g><title>_int_free_create_chunk (12,421,057 samples, 0.02%)</title><rect x="26.0654%" y="213" width="0.0221%" height="15" fill="rgb(213,25,53)" fg:x="14632571265" fg:w="12421057"/><text x="26.3154%" y="223.50"></text></g><g><title>unlink_chunk (8,290,985 samples, 0.01%)</title><rect x="26.0728%" y="197" width="0.0148%" height="15" fill="rgb(252,105,26)" fg:x="14636701337" fg:w="8290985"/><text x="26.3228%" y="207.50"></text></g><g><title>__GI___libc_free (28,961,016 samples, 0.05%)</title><rect x="26.0433%" y="245" width="0.0516%" height="15" fill="rgb(220,39,43)" fg:x="14620125097" fg:w="28961016"/><text x="26.2933%" y="255.50"></text></g><g><title>_int_free_merge_chunk (16,514,848 samples, 0.03%)</title><rect x="26.0654%" y="229" width="0.0294%" height="15" fill="rgb(229,68,48)" fg:x="14632571265" fg:w="16514848"/><text x="26.3154%" y="239.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h8e0f56f6ac8014d1E.llvm.11803501155158533750 (13,879,000,261 samples, 24.72%)</title><rect x="8.0990%" y="277" width="24.7231%" height="15" fill="rgb(252,8,32)" fg:x="4546594290" fg:w="13879000261"/><text x="8.3490%" y="287.50">_ZN7lb_apis15del_pol_batched16Delegatin..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3,826,309,684 samples, 6.82%)</title><rect x="26.0061%" y="261" width="6.8159%" height="15" fill="rgb(223,20,43)" fg:x="14599284867" fg:w="3826309684"/><text x="26.2561%" y="271.50">alloc::sy..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::RRPickerPicker&gt; (3,772,357,252 samples, 6.72%)</title><rect x="26.1022%" y="245" width="6.7198%" height="15" fill="rgb(229,81,49)" fg:x="14653237299" fg:w="3772357252"/><text x="26.3522%" y="255.50">core::ptr..</text></g><g><title>__GI___libc_free (16,577,822 samples, 0.03%)</title><rect x="32.8221%" y="277" width="0.0295%" height="15" fill="rgb(236,28,36)" fg:x="18425594551" fg:w="16577822"/><text x="33.0721%" y="287.50"></text></g><g><title>_int_free (12,417,540 samples, 0.02%)</title><rect x="32.8295%" y="261" width="0.0221%" height="15" fill="rgb(249,185,26)" fg:x="18429754833" fg:w="12417540"/><text x="33.0795%" y="271.50"></text></g><g><title>__GI___libc_malloc (41,384,480 samples, 0.07%)</title><rect x="33.0505%" y="229" width="0.0737%" height="15" fill="rgb(249,174,33)" fg:x="18553863068" fg:w="41384480"/><text x="33.3005%" y="239.50"></text></g><g><title>tcache_get (24,769,749 samples, 0.04%)</title><rect x="33.0801%" y="213" width="0.0441%" height="15" fill="rgb(233,201,37)" fg:x="18570477799" fg:w="24769749"/><text x="33.3301%" y="223.50"></text></g><g><title>tcache_get_n (24,769,749 samples, 0.04%)</title><rect x="33.0801%" y="197" width="0.0441%" height="15" fill="rgb(221,78,26)" fg:x="18570477799" fg:w="24769749"/><text x="33.3301%" y="207.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h495a2cfee390e142E.llvm.2064171167310178009 (61,889,261 samples, 0.11%)</title><rect x="33.0285%" y="245" width="0.1102%" height="15" fill="rgb(250,127,30)" fg:x="18541509057" fg:w="61889261"/><text x="33.2785%" y="255.50"></text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::set (181,730,838 samples, 0.32%)</title><rect x="32.8591%" y="277" width="0.3237%" height="15" fill="rgb(230,49,44)" fg:x="18446362880" fg:w="181730838"/><text x="33.1091%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (169,239,546 samples, 0.30%)</title><rect x="32.8813%" y="261" width="0.3015%" height="15" fill="rgb(229,67,23)" fg:x="18458854172" fg:w="169239546"/><text x="33.1313%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24,695,400 samples, 0.04%)</title><rect x="33.1388%" y="245" width="0.0440%" height="15" fill="rgb(249,83,47)" fg:x="18603398318" fg:w="24695400"/><text x="33.3888%" y="255.50"></text></g><g><title>rand::rng::Rng::gen_range (65,738,722 samples, 0.12%)</title><rect x="33.1828%" y="277" width="0.1171%" height="15" fill="rgb(215,43,3)" fg:x="18628093718" fg:w="65738722"/><text x="33.4328%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (20,562,062 samples, 0.04%)</title><rect x="33.2632%" y="261" width="0.0366%" height="15" fill="rgb(238,154,13)" fg:x="18673270378" fg:w="20562062"/><text x="33.5132%" y="271.50"></text></g><g><title>bencher::Bencher::iter (15,800,606,855 samples, 28.15%)</title><rect x="5.1833%" y="293" width="28.1461%" height="15" fill="rgb(219,56,2)" fg:x="2909771707" fg:w="15800606855"/><text x="5.4333%" y="303.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (16,546,122 samples, 0.03%)</title><rect x="33.2999%" y="277" width="0.0295%" height="15" fill="rgb(233,0,4)" fg:x="18693832440" fg:w="16546122"/><text x="33.5499%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,244,987 samples, 0.04%)</title><rect x="33.3293%" y="277" width="0.0432%" height="15" fill="rgb(235,30,7)" fg:x="18710378562" fg:w="24244987"/><text x="33.5793%" y="287.50"></text></g><g><title>_int_free (16,276,824 samples, 0.03%)</title><rect x="33.4747%" y="229" width="0.0290%" height="15" fill="rgb(250,79,13)" fg:x="18791974098" fg:w="16276824"/><text x="33.7247%" y="239.50"></text></g><g><title>__GI___libc_free (20,783,463 samples, 0.04%)</title><rect x="33.4741%" y="245" width="0.0370%" height="15" fill="rgb(211,146,34)" fg:x="18791640999" fg:w="20783463"/><text x="33.7241%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (98,039,190 samples, 0.17%)</title><rect x="33.4017%" y="261" width="0.1746%" height="15" fill="rgb(228,22,38)" fg:x="18750993879" fg:w="98039190"/><text x="33.6517%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (32,513,769 samples, 0.06%)</title><rect x="33.5184%" y="245" width="0.0579%" height="15" fill="rgb(235,168,5)" fg:x="18816519300" fg:w="32513769"/><text x="33.7684%" y="255.50"></text></g><g><title>_int_free (49,008,859 samples, 0.09%)</title><rect x="33.6082%" y="245" width="0.0873%" height="15" fill="rgb(221,155,16)" fg:x="18866945838" fg:w="49008859"/><text x="33.8582%" y="255.50"></text></g><g><title>_int_free_maybe_consolidate (107,564,894 samples, 0.19%)</title><rect x="33.6955%" y="245" width="0.1916%" height="15" fill="rgb(215,215,53)" fg:x="18915954697" fg:w="107564894"/><text x="33.9455%" y="255.50"></text></g><g><title>malloc_consolidate (107,564,894 samples, 0.19%)</title><rect x="33.6955%" y="229" width="0.1916%" height="15" fill="rgb(223,4,10)" fg:x="18915954697" fg:w="107564894"/><text x="33.9455%" y="239.50"></text></g><g><title>unlink_chunk (37,946,192 samples, 0.07%)</title><rect x="33.8196%" y="213" width="0.0676%" height="15" fill="rgb(234,103,6)" fg:x="18985573399" fg:w="37946192"/><text x="34.0696%" y="223.50"></text></g><g><title>__GI___libc_free (186,723,267 samples, 0.33%)</title><rect x="33.5763%" y="261" width="0.3326%" height="15" fill="rgb(227,97,0)" fg:x="18849033069" fg:w="186723267"/><text x="33.8263%" y="271.50"></text></g><g><title>_int_free_merge_chunk (12,236,745 samples, 0.02%)</title><rect x="33.8872%" y="245" width="0.0218%" height="15" fill="rgb(234,150,53)" fg:x="19023519591" fg:w="12236745"/><text x="34.1372%" y="255.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.3890161395835269148 (313,522,425 samples, 0.56%)</title><rect x="33.3725%" y="277" width="0.5585%" height="15" fill="rgb(228,201,54)" fg:x="18734623549" fg:w="313522425"/><text x="33.6225%" y="287.50"></text></g><g><title>__rdl_dealloc (12,389,638 samples, 0.02%)</title><rect x="33.9090%" y="261" width="0.0221%" height="15" fill="rgb(222,22,37)" fg:x="19035756336" fg:w="12389638"/><text x="34.1590%" y="271.50"></text></g><g><title>lb_apis::batched (19,076,685,504 samples, 33.98%)</title><rect x="0.0074%" y="309" width="33.9819%" height="15" fill="rgb(237,53,32)" fg:x="4128844" fg:w="19076685504"/><text x="0.2574%" y="319.50">lb_apis::batched</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::DelegatingPolicy&gt; (370,435,786 samples, 0.66%)</title><rect x="33.3293%" y="293" width="0.6599%" height="15" fill="rgb(233,25,53)" fg:x="18710378562" fg:w="370435786"/><text x="33.5793%" y="303.50"></text></g><g><title>__GI___libc_free (32,668,374 samples, 0.06%)</title><rect x="33.9310%" y="277" width="0.0582%" height="15" fill="rgb(210,40,34)" fg:x="19048145974" fg:w="32668374"/><text x="34.1810%" y="287.50"></text></g><g><title>_int_free_maybe_consolidate (24,525,145 samples, 0.04%)</title><rect x="33.9455%" y="261" width="0.0437%" height="15" fill="rgb(241,220,44)" fg:x="19056289203" fg:w="24525145"/><text x="34.1955%" y="271.50"></text></g><g><title>malloc_consolidate (24,525,145 samples, 0.04%)</title><rect x="33.9455%" y="245" width="0.0437%" height="15" fill="rgb(235,28,35)" fg:x="19056289203" fg:w="24525145"/><text x="34.1955%" y="255.50"></text></g><g><title>unlink_chunk (8,323,182 samples, 0.01%)</title><rect x="33.9744%" y="229" width="0.0148%" height="15" fill="rgb(210,56,17)" fg:x="19072491166" fg:w="8323182"/><text x="34.2244%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8,115,012 samples, 0.01%)</title><rect x="34.0762%" y="261" width="0.0145%" height="15" fill="rgb(224,130,29)" fg:x="19129662834" fg:w="8115012"/><text x="34.3262%" y="271.50"></text></g><g><title>__GI___libc_malloc (32,580,155 samples, 0.06%)</title><rect x="34.2139%" y="229" width="0.0580%" height="15" fill="rgb(235,212,8)" fg:x="19206963848" fg:w="32580155"/><text x="34.4639%" y="239.50"></text></g><g><title>_int_malloc (20,282,081 samples, 0.04%)</title><rect x="34.2358%" y="213" width="0.0361%" height="15" fill="rgb(223,33,50)" fg:x="19219261922" fg:w="20282081"/><text x="34.4858%" y="223.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel (61,296,567 samples, 0.11%)</title><rect x="34.1628%" y="245" width="0.1092%" height="15" fill="rgb(219,149,13)" fg:x="19178278087" fg:w="61296567"/><text x="34.4128%" y="255.50"></text></g><g><title>_int_malloc (20,564,151 samples, 0.04%)</title><rect x="34.3291%" y="213" width="0.0366%" height="15" fill="rgb(250,156,29)" fg:x="19271590088" fg:w="20564151"/><text x="34.5791%" y="223.50"></text></g><g><title>[unknown] (12,454,642 samples, 0.02%)</title><rect x="34.3435%" y="197" width="0.0222%" height="15" fill="rgb(216,193,19)" fg:x="19279699597" fg:w="12454642"/><text x="34.5935%" y="207.50"></text></g><g><title>[unknown] (12,454,642 samples, 0.02%)</title><rect x="34.3435%" y="181" width="0.0222%" height="15" fill="rgb(216,135,14)" fg:x="19279699597" fg:w="12454642"/><text x="34.5935%" y="191.50"></text></g><g><title>[unknown] (12,454,642 samples, 0.02%)</title><rect x="34.3435%" y="165" width="0.0222%" height="15" fill="rgb(241,47,5)" fg:x="19279699597" fg:w="12454642"/><text x="34.5935%" y="175.50"></text></g><g><title>[unknown] (12,454,642 samples, 0.02%)</title><rect x="34.3435%" y="149" width="0.0222%" height="15" fill="rgb(233,42,35)" fg:x="19279699597" fg:w="12454642"/><text x="34.5935%" y="159.50"></text></g><g><title>[unknown] (12,454,642 samples, 0.02%)</title><rect x="34.3435%" y="133" width="0.0222%" height="15" fill="rgb(231,13,6)" fg:x="19279699597" fg:w="12454642"/><text x="34.5935%" y="143.50"></text></g><g><title>[unknown] (12,454,642 samples, 0.02%)</title><rect x="34.3435%" y="117" width="0.0222%" height="15" fill="rgb(207,181,40)" fg:x="19279699597" fg:w="12454642"/><text x="34.5935%" y="127.50"></text></g><g><title>[unknown] (8,301,309 samples, 0.01%)</title><rect x="34.3509%" y="101" width="0.0148%" height="15" fill="rgb(254,173,49)" fg:x="19283852930" fg:w="8301309"/><text x="34.6009%" y="111.50"></text></g><g><title>[unknown] (8,301,309 samples, 0.01%)</title><rect x="34.3509%" y="85" width="0.0148%" height="15" fill="rgb(221,1,38)" fg:x="19283852930" fg:w="8301309"/><text x="34.6009%" y="95.50"></text></g><g><title>[unknown] (8,301,309 samples, 0.01%)</title><rect x="34.3509%" y="69" width="0.0148%" height="15" fill="rgb(206,124,46)" fg:x="19283852930" fg:w="8301309"/><text x="34.6009%" y="79.50"></text></g><g><title>__GI___libc_malloc (36,219,979 samples, 0.06%)</title><rect x="34.3079%" y="229" width="0.0645%" height="15" fill="rgb(249,21,11)" fg:x="19259699166" fg:w="36219979"/><text x="34.5579%" y="239.50"></text></g><g><title>_ZN115_$LT$lb_apis..del_pol_cb..WrappedController$u20$as$u20$grpc..client..load_balancing..ChannelControllerCallbacks$GT$14new_subchannel17h0141975eaf9a6d3bE.llvm.12847404842258134487 (60,427,550 samples, 0.11%)</title><rect x="34.2720%" y="245" width="0.1076%" height="15" fill="rgb(222,201,40)" fg:x="19239574654" fg:w="60427550"/><text x="34.5220%" y="255.50"></text></g><g><title>[unknown] (28,792,374 samples, 0.05%)</title><rect x="34.4967%" y="197" width="0.0513%" height="15" fill="rgb(235,61,29)" fg:x="19365719210" fg:w="28792374"/><text x="34.7467%" y="207.50"></text></g><g><title>[unknown] (28,792,374 samples, 0.05%)</title><rect x="34.4967%" y="181" width="0.0513%" height="15" fill="rgb(219,207,3)" fg:x="19365719210" fg:w="28792374"/><text x="34.7467%" y="191.50"></text></g><g><title>[unknown] (28,792,374 samples, 0.05%)</title><rect x="34.4967%" y="165" width="0.0513%" height="15" fill="rgb(222,56,46)" fg:x="19365719210" fg:w="28792374"/><text x="34.7467%" y="175.50"></text></g><g><title>[unknown] (28,792,374 samples, 0.05%)</title><rect x="34.4967%" y="149" width="0.0513%" height="15" fill="rgb(239,76,54)" fg:x="19365719210" fg:w="28792374"/><text x="34.7467%" y="159.50"></text></g><g><title>[unknown] (28,792,374 samples, 0.05%)</title><rect x="34.4967%" y="133" width="0.0513%" height="15" fill="rgb(231,124,27)" fg:x="19365719210" fg:w="28792374"/><text x="34.7467%" y="143.50"></text></g><g><title>[unknown] (20,617,545 samples, 0.04%)</title><rect x="34.5113%" y="117" width="0.0367%" height="15" fill="rgb(249,195,6)" fg:x="19373894039" fg:w="20617545"/><text x="34.7613%" y="127.50"></text></g><g><title>[unknown] (20,617,545 samples, 0.04%)</title><rect x="34.5113%" y="101" width="0.0367%" height="15" fill="rgb(237,174,47)" fg:x="19373894039" fg:w="20617545"/><text x="34.7613%" y="111.50"></text></g><g><title>[unknown] (20,617,545 samples, 0.04%)</title><rect x="34.5113%" y="85" width="0.0367%" height="15" fill="rgb(206,201,31)" fg:x="19373894039" fg:w="20617545"/><text x="34.7613%" y="95.50"></text></g><g><title>[unknown] (16,441,824 samples, 0.03%)</title><rect x="34.5187%" y="69" width="0.0293%" height="15" fill="rgb(231,57,52)" fg:x="19378069760" fg:w="16441824"/><text x="34.7687%" y="79.50"></text></g><g><title>[unknown] (12,257,711 samples, 0.02%)</title><rect x="34.5262%" y="53" width="0.0218%" height="15" fill="rgb(248,177,22)" fg:x="19382253873" fg:w="12257711"/><text x="34.7762%" y="63.50"></text></g><g><title>[unknown] (8,141,898 samples, 0.01%)</title><rect x="34.5335%" y="37" width="0.0145%" height="15" fill="rgb(215,211,37)" fg:x="19386369686" fg:w="8141898"/><text x="34.7835%" y="47.50"></text></g><g><title>__GI___libc_malloc (78,046,949 samples, 0.14%)</title><rect x="34.4090%" y="229" width="0.1390%" height="15" fill="rgb(241,128,51)" fg:x="19316464636" fg:w="78046949"/><text x="34.6590%" y="239.50"></text></g><g><title>_int_malloc (53,379,258 samples, 0.10%)</title><rect x="34.4529%" y="213" width="0.0951%" height="15" fill="rgb(227,165,31)" fg:x="19341132327" fg:w="53379258"/><text x="34.7029%" y="223.50"></text></g><g><title>_ZN116_$LT$lb_apis..StubChannelControllerCallbacks$u20$as$u20$grpc..client..load_balancing..ChannelControllerCallbacks$GT$14new_subchannel17hcdcb3d6e4c734d49E.llvm.5170583879694136346 (106,900,394 samples, 0.19%)</title><rect x="34.3797%" y="245" width="0.1904%" height="15" fill="rgb(228,167,24)" fg:x="19300002204" fg:w="106900394"/><text x="34.6297%" y="255.50"></text></g><g><title>__GI___libc_free (19,866,437 samples, 0.04%)</title><rect x="34.5701%" y="245" width="0.0354%" height="15" fill="rgb(228,143,12)" fg:x="19406902598" fg:w="19866437"/><text x="34.8201%" y="255.50"></text></g><g><title>_int_free (7,907,899 samples, 0.01%)</title><rect x="34.5914%" y="229" width="0.0141%" height="15" fill="rgb(249,149,8)" fg:x="19418861136" fg:w="7907899"/><text x="34.8414%" y="239.50"></text></g><g><title>_int_malloc (21,481,031 samples, 0.04%)</title><rect x="34.6055%" y="229" width="0.0383%" height="15" fill="rgb(243,35,44)" fg:x="19426769035" fg:w="21481031"/><text x="34.8555%" y="239.50"></text></g><g><title>__GI___libc_malloc (21,484,482 samples, 0.04%)</title><rect x="34.6055%" y="245" width="0.0383%" height="15" fill="rgb(246,89,9)" fg:x="19426769035" fg:w="21484482"/><text x="34.8555%" y="255.50"></text></g><g><title>[unknown] (16,045,467 samples, 0.03%)</title><rect x="34.7905%" y="181" width="0.0286%" height="15" fill="rgb(233,213,13)" fg:x="19530661778" fg:w="16045467"/><text x="35.0405%" y="191.50"></text></g><g><title>[unknown] (16,045,467 samples, 0.03%)</title><rect x="34.7905%" y="165" width="0.0286%" height="15" fill="rgb(233,141,41)" fg:x="19530661778" fg:w="16045467"/><text x="35.0405%" y="175.50"></text></g><g><title>[unknown] (16,045,467 samples, 0.03%)</title><rect x="34.7905%" y="149" width="0.0286%" height="15" fill="rgb(239,167,4)" fg:x="19530661778" fg:w="16045467"/><text x="35.0405%" y="159.50"></text></g><g><title>[unknown] (12,036,993 samples, 0.02%)</title><rect x="34.7977%" y="133" width="0.0214%" height="15" fill="rgb(209,217,16)" fg:x="19534670252" fg:w="12036993"/><text x="35.0477%" y="143.50"></text></g><g><title>[unknown] (7,986,742 samples, 0.01%)</title><rect x="34.8049%" y="117" width="0.0142%" height="15" fill="rgb(219,88,35)" fg:x="19538720503" fg:w="7986742"/><text x="35.0549%" y="127.50"></text></g><g><title>[unknown] (7,986,742 samples, 0.01%)</title><rect x="34.8049%" y="101" width="0.0142%" height="15" fill="rgb(220,193,23)" fg:x="19538720503" fg:w="7986742"/><text x="35.0549%" y="111.50"></text></g><g><title>[unknown] (7,986,742 samples, 0.01%)</title><rect x="34.8049%" y="85" width="0.0142%" height="15" fill="rgb(230,90,52)" fg:x="19538720503" fg:w="7986742"/><text x="35.0549%" y="95.50"></text></g><g><title>[unknown] (7,986,742 samples, 0.01%)</title><rect x="34.8049%" y="69" width="0.0142%" height="15" fill="rgb(252,106,19)" fg:x="19538720503" fg:w="7986742"/><text x="35.0549%" y="79.50"></text></g><g><title>__GI___libc_malloc (20,188,272 samples, 0.04%)</title><rect x="34.7905%" y="213" width="0.0360%" height="15" fill="rgb(206,74,20)" fg:x="19530661778" fg:w="20188272"/><text x="35.0405%" y="223.50"></text></g><g><title>_int_malloc (20,188,272 samples, 0.04%)</title><rect x="34.7905%" y="197" width="0.0360%" height="15" fill="rgb(230,138,44)" fg:x="19530661778" fg:w="20188272"/><text x="35.0405%" y="207.50"></text></g><g><title>__memset_avx2_unaligned (8,124,376 samples, 0.01%)</title><rect x="34.8265%" y="213" width="0.0145%" height="15" fill="rgb(235,182,43)" fg:x="19550850050" fg:w="8124376"/><text x="35.0765%" y="223.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.6716246681252942186 (82,009,344 samples, 0.15%)</title><rect x="34.7320%" y="229" width="0.1461%" height="15" fill="rgb(242,16,51)" fg:x="19497791927" fg:w="82009344"/><text x="34.9820%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,826,845 samples, 0.04%)</title><rect x="34.8410%" y="213" width="0.0371%" height="15" fill="rgb(248,9,4)" fg:x="19558974426" fg:w="20826845"/><text x="35.0910%" y="223.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (458,118,133 samples, 0.82%)</title><rect x="34.0907%" y="261" width="0.8161%" height="15" fill="rgb(210,31,22)" fg:x="19137777846" fg:w="458118133"/><text x="34.3407%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (139,469,731 samples, 0.25%)</title><rect x="34.6583%" y="245" width="0.2484%" height="15" fill="rgb(239,54,39)" fg:x="19456426248" fg:w="139469731"/><text x="34.9083%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,094,708 samples, 0.03%)</title><rect x="34.8781%" y="229" width="0.0287%" height="15" fill="rgb(230,99,41)" fg:x="19579801271" fg:w="16094708"/><text x="35.1281%" y="239.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicyBuilder as grpc::client::load_balancing::LbPolicyBuilderCallbacks&gt;::build (8,163,765 samples, 0.01%)</title><rect x="34.9067%" y="261" width="0.0145%" height="15" fill="rgb(253,106,12)" fg:x="19595895979" fg:w="8163765"/><text x="35.1567%" y="271.50"></text></g><g><title>__GI___libc_malloc (41,066,697 samples, 0.07%)</title><rect x="35.0520%" y="213" width="0.0732%" height="15" fill="rgb(213,46,41)" fg:x="19677448367" fg:w="41066697"/><text x="35.3020%" y="223.50"></text></g><g><title>_int_malloc (28,583,797 samples, 0.05%)</title><rect x="35.0743%" y="197" width="0.0509%" height="15" fill="rgb(215,133,35)" fg:x="19689931267" fg:w="28583797"/><text x="35.3243%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (130,884,518 samples, 0.23%)</title><rect x="34.9213%" y="245" width="0.2331%" height="15" fill="rgb(213,28,5)" fg:x="19604059744" fg:w="130884518"/><text x="35.1713%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (94,205,439 samples, 0.17%)</title><rect x="34.9866%" y="229" width="0.1678%" height="15" fill="rgb(215,77,49)" fg:x="19640738823" fg:w="94205439"/><text x="35.2366%" y="239.50"></text></g><g><title>__rust_alloc (8,322,213 samples, 0.01%)</title><rect x="35.1396%" y="213" width="0.0148%" height="15" fill="rgb(248,100,22)" fg:x="19726622049" fg:w="8322213"/><text x="35.3896%" y="223.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17he913d698642fd5ddE.llvm.12847404842258134487 (134,825,623 samples, 0.24%)</title><rect x="34.9213%" y="261" width="0.2402%" height="15" fill="rgb(208,67,9)" fg:x="19604059744" fg:w="134825623"/><text x="35.1713%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (662,456,167 samples, 1.18%)</title><rect x="34.0762%" y="277" width="1.1801%" height="15" fill="rgb(219,133,21)" fg:x="19129662834" fg:w="662456167"/><text x="34.3262%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (49,052,898 samples, 0.09%)</title><rect x="35.1689%" y="261" width="0.0874%" height="15" fill="rgb(246,46,29)" fg:x="19743066103" fg:w="49052898"/><text x="35.4189%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (49,052,898 samples, 0.09%)</title><rect x="35.1689%" y="245" width="0.0874%" height="15" fill="rgb(246,185,52)" fg:x="19743066103" fg:w="49052898"/><text x="35.4189%" y="255.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (49,052,898 samples, 0.09%)</title><rect x="35.1689%" y="229" width="0.0874%" height="15" fill="rgb(252,136,11)" fg:x="19743066103" fg:w="49052898"/><text x="35.4189%" y="239.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.13368858155757049781 (40,905,029 samples, 0.07%)</title><rect x="35.1834%" y="213" width="0.0729%" height="15" fill="rgb(219,138,53)" fg:x="19751213972" fg:w="40905029"/><text x="35.4334%" y="223.50"></text></g><g><title>&lt;lb_apis::del_pol_cb::DelegatingPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (666,392,435 samples, 1.19%)</title><rect x="34.0762%" y="293" width="1.1871%" height="15" fill="rgb(211,51,23)" fg:x="19129662834" fg:w="666392435"/><text x="34.3262%" y="303.50"></text></g><g><title>__GI___libc_free (12,205,886 samples, 0.02%)</title><rect x="35.2633%" y="293" width="0.0217%" height="15" fill="rgb(247,221,28)" fg:x="19796055269" fg:w="12205886"/><text x="35.5133%" y="303.50"></text></g><g><title>_int_free (8,009,556 samples, 0.01%)</title><rect x="35.2708%" y="277" width="0.0143%" height="15" fill="rgb(251,222,45)" fg:x="19800251599" fg:w="8009556"/><text x="35.5208%" y="287.50"></text></g><g><title>__GI___libc_malloc (40,594,824 samples, 0.07%)</title><rect x="35.2850%" y="293" width="0.0723%" height="15" fill="rgb(217,162,53)" fg:x="19808261155" fg:w="40594824"/><text x="35.5350%" y="303.50"></text></g><g><title>_int_malloc (36,568,329 samples, 0.07%)</title><rect x="35.2922%" y="277" width="0.0651%" height="15" fill="rgb(229,93,14)" fg:x="19812287650" fg:w="36568329"/><text x="35.5422%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (19,603,310 samples, 0.03%)</title><rect x="35.4274%" y="261" width="0.0349%" height="15" fill="rgb(209,67,49)" fg:x="19888204210" fg:w="19603310"/><text x="35.6774%" y="271.50"></text></g><g><title>__GI___libc_malloc (61,136,265 samples, 0.11%)</title><rect x="35.5798%" y="197" width="0.1089%" height="15" fill="rgb(213,87,29)" fg:x="19973730316" fg:w="61136265"/><text x="35.8298%" y="207.50"></text></g><g><title>_int_malloc (45,027,766 samples, 0.08%)</title><rect x="35.6085%" y="181" width="0.0802%" height="15" fill="rgb(205,151,52)" fg:x="19989838815" fg:w="45027766"/><text x="35.8585%" y="191.50"></text></g><g><title>unlink_chunk (8,093,205 samples, 0.01%)</title><rect x="35.6743%" y="165" width="0.0144%" height="15" fill="rgb(253,215,39)" fg:x="20026773376" fg:w="8093205"/><text x="35.9243%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (119,002,222 samples, 0.21%)</title><rect x="35.4841%" y="245" width="0.2120%" height="15" fill="rgb(221,220,41)" fg:x="19920014207" fg:w="119002222"/><text x="35.7341%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (102,296,387 samples, 0.18%)</title><rect x="35.5139%" y="229" width="0.1822%" height="15" fill="rgb(218,133,21)" fg:x="19936720042" fg:w="102296387"/><text x="35.7639%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (81,856,557 samples, 0.15%)</title><rect x="35.5503%" y="213" width="0.1458%" height="15" fill="rgb(221,193,43)" fg:x="19957159872" fg:w="81856557"/><text x="35.8003%" y="223.50"></text></g><g><title>alloc::fmt::format::format_inner (239,080,444 samples, 0.43%)</title><rect x="35.3643%" y="293" width="0.4259%" height="15" fill="rgb(240,128,52)" fg:x="19852780316" fg:w="239080444"/><text x="35.6143%" y="303.50"></text></g><g><title>core::fmt::write (220,100,869 samples, 0.39%)</title><rect x="35.3982%" y="277" width="0.3921%" height="15" fill="rgb(253,114,12)" fg:x="19871759891" fg:w="220100869"/><text x="35.6482%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (184,053,240 samples, 0.33%)</title><rect x="35.4624%" y="261" width="0.3279%" height="15" fill="rgb(215,223,47)" fg:x="19907807520" fg:w="184053240"/><text x="35.7124%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (52,844,331 samples, 0.09%)</title><rect x="35.6961%" y="245" width="0.0941%" height="15" fill="rgb(248,225,23)" fg:x="20039016429" fg:w="52844331"/><text x="35.9461%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (20,285,430 samples, 0.04%)</title><rect x="35.7541%" y="229" width="0.0361%" height="15" fill="rgb(250,108,0)" fg:x="20071575330" fg:w="20285430"/><text x="36.0041%" y="239.50"></text></g><g><title>_int_malloc (234,414,348 samples, 0.42%)</title><rect x="35.8267%" y="229" width="0.4176%" height="15" fill="rgb(228,208,7)" fg:x="20112324265" fg:w="234414348"/><text x="36.0767%" y="239.50"></text></g><g><title>malloc_consolidate (213,868,666 samples, 0.38%)</title><rect x="35.8633%" y="213" width="0.3810%" height="15" fill="rgb(244,45,10)" fg:x="20132869947" fg:w="213868666"/><text x="36.1133%" y="223.50"></text></g><g><title>unlink_chunk (59,266,258 samples, 0.11%)</title><rect x="36.1387%" y="197" width="0.1056%" height="15" fill="rgb(207,125,25)" fg:x="20287472355" fg:w="59266258"/><text x="36.3887%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (258,802,177 samples, 0.46%)</title><rect x="35.7902%" y="293" width="0.4610%" height="15" fill="rgb(210,195,18)" fg:x="20091860760" fg:w="258802177"/><text x="36.0402%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.3538639466319289803 (250,592,017 samples, 0.45%)</title><rect x="35.8048%" y="277" width="0.4464%" height="15" fill="rgb(249,80,12)" fg:x="20100070920" fg:w="250592017"/><text x="36.0548%" y="287.50"></text></g><g><title>__GI___libc_realloc (242,481,040 samples, 0.43%)</title><rect x="35.8193%" y="261" width="0.4319%" height="15" fill="rgb(221,65,9)" fg:x="20108181897" fg:w="242481040"/><text x="36.0693%" y="271.50"></text></g><g><title>_int_realloc (242,481,040 samples, 0.43%)</title><rect x="35.8193%" y="245" width="0.4319%" height="15" fill="rgb(235,49,36)" fg:x="20108181897" fg:w="242481040"/><text x="36.0693%" y="255.50"></text></g><g><title>__GI___libc_free (30,757,813 samples, 0.05%)</title><rect x="36.2805%" y="261" width="0.0548%" height="15" fill="rgb(225,32,20)" fg:x="20367113931" fg:w="30757813"/><text x="36.5305%" y="271.50"></text></g><g><title>_int_free (20,684,989 samples, 0.04%)</title><rect x="36.2985%" y="245" width="0.0368%" height="15" fill="rgb(215,141,46)" fg:x="20377186755" fg:w="20684989"/><text x="36.5485%" y="255.50"></text></g><g><title>__GI___libc_free (7,865,981 samples, 0.01%)</title><rect x="36.3856%" y="229" width="0.0140%" height="15" fill="rgb(250,160,47)" fg:x="20426089655" fg:w="7865981"/><text x="36.6356%" y="239.50"></text></g><g><title>_int_free (7,865,981 samples, 0.01%)</title><rect x="36.3856%" y="213" width="0.0140%" height="15" fill="rgb(216,222,40)" fg:x="20426089655" fg:w="7865981"/><text x="36.6356%" y="223.50"></text></g><g><title>_ZN4core3ptr121drop_in_place$LT$grpc..client..load_balancing..child_manager_cb..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h3deee280ed9120c0E.llvm.3890161395835269148 (79,179,645 samples, 0.14%)</title><rect x="36.2805%" y="277" width="0.1410%" height="15" fill="rgb(234,217,39)" fg:x="20367113931" fg:w="79179645"/><text x="36.5305%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (48,421,832 samples, 0.09%)</title><rect x="36.3353%" y="261" width="0.0863%" height="15" fill="rgb(207,178,40)" fg:x="20397871744" fg:w="48421832"/><text x="36.5853%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48,421,832 samples, 0.09%)</title><rect x="36.3353%" y="245" width="0.0863%" height="15" fill="rgb(221,136,13)" fg:x="20397871744" fg:w="48421832"/><text x="36.5853%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (12,337,940 samples, 0.02%)</title><rect x="36.3996%" y="229" width="0.0220%" height="15" fill="rgb(249,199,10)" fg:x="20433955636" fg:w="12337940"/><text x="36.6496%" y="239.50"></text></g><g><title>__GI___libc_free (41,177,322 samples, 0.07%)</title><rect x="36.4216%" y="277" width="0.0734%" height="15" fill="rgb(249,222,13)" fg:x="20446293576" fg:w="41177322"/><text x="36.6716%" y="287.50"></text></g><g><title>_int_free (37,026,380 samples, 0.07%)</title><rect x="36.4290%" y="261" width="0.0660%" height="15" fill="rgb(244,185,38)" fg:x="20450444518" fg:w="37026380"/><text x="36.6790%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (201,634,460 samples, 0.36%)</title><rect x="36.2512%" y="293" width="0.3592%" height="15" fill="rgb(236,202,9)" fg:x="20350662937" fg:w="201634460"/><text x="36.5012%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::del_pol_cb::WrappedController as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (52,581,753 samples, 0.09%)</title><rect x="36.5167%" y="277" width="0.0937%" height="15" fill="rgb(250,229,37)" fg:x="20499715644" fg:w="52581753"/><text x="36.7667%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (24,252,884 samples, 0.04%)</title><rect x="36.5672%" y="261" width="0.0432%" height="15" fill="rgb(206,174,23)" fg:x="20528044513" fg:w="24252884"/><text x="36.8172%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::{{closure}}&gt; (16,283,398 samples, 0.03%)</title><rect x="36.5814%" y="245" width="0.0290%" height="15" fill="rgb(211,33,43)" fg:x="20536013999" fg:w="16283398"/><text x="36.8314%" y="255.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (8,146,586 samples, 0.01%)</title><rect x="36.6469%" y="277" width="0.0145%" height="15" fill="rgb(245,58,50)" fg:x="20572784621" fg:w="8146586"/><text x="36.8969%" y="287.50"></text></g><g><title>__GI___libc_free (8,328,124 samples, 0.01%)</title><rect x="37.0964%" y="197" width="0.0148%" height="15" fill="rgb(244,68,36)" fg:x="20825120098" fg:w="8328124"/><text x="37.3464%" y="207.50"></text></g><g><title>_int_free (8,328,124 samples, 0.01%)</title><rect x="37.0964%" y="181" width="0.0148%" height="15" fill="rgb(232,229,15)" fg:x="20825120098" fg:w="8328124"/><text x="37.3464%" y="191.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (39,029,437 samples, 0.07%)</title><rect x="37.0566%" y="213" width="0.0695%" height="15" fill="rgb(254,30,23)" fg:x="20802750239" fg:w="39029437"/><text x="37.3066%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8,331,454 samples, 0.01%)</title><rect x="37.1112%" y="197" width="0.0148%" height="15" fill="rgb(235,160,14)" fg:x="20833448222" fg:w="8331454"/><text x="37.3612%" y="207.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (223,822,470 samples, 0.40%)</title><rect x="36.7495%" y="245" width="0.3987%" height="15" fill="rgb(212,155,44)" fg:x="20630383460" fg:w="223822470"/><text x="36.9995%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::_{{closure}} (207,170,948 samples, 0.37%)</title><rect x="36.7792%" y="229" width="0.3690%" height="15" fill="rgb(226,2,50)" fg:x="20647034982" fg:w="207170948"/><text x="37.0292%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,426,254 samples, 0.02%)</title><rect x="37.1261%" y="213" width="0.0221%" height="15" fill="rgb(234,177,6)" fg:x="20841779676" fg:w="12426254"/><text x="37.3761%" y="223.50"></text></g><g><title>__GI___libc_free (8,159,516 samples, 0.01%)</title><rect x="38.1377%" y="229" width="0.0145%" height="15" fill="rgb(217,24,9)" fg:x="21409683797" fg:w="8159516"/><text x="38.3877%" y="239.50"></text></g><g><title>_int_free (8,159,516 samples, 0.01%)</title><rect x="38.1377%" y="213" width="0.0145%" height="15" fill="rgb(220,13,46)" fg:x="21409683797" fg:w="8159516"/><text x="38.3877%" y="223.50"></text></g><g><title>__GI___libc_malloc (12,486,199 samples, 0.02%)</title><rect x="38.1522%" y="229" width="0.0222%" height="15" fill="rgb(239,221,27)" fg:x="21417843313" fg:w="12486199"/><text x="38.4022%" y="239.50"></text></g><g><title>tcache_get (8,304,188 samples, 0.01%)</title><rect x="38.1597%" y="213" width="0.0148%" height="15" fill="rgb(222,198,25)" fg:x="21422025324" fg:w="8304188"/><text x="38.4097%" y="223.50"></text></g><g><title>tcache_get_n (8,304,188 samples, 0.01%)</title><rect x="38.1597%" y="197" width="0.0148%" height="15" fill="rgb(211,99,13)" fg:x="21422025324" fg:w="8304188"/><text x="38.4097%" y="207.50"></text></g><g><title>__rdl_dealloc (8,098,166 samples, 0.01%)</title><rect x="38.1745%" y="229" width="0.0144%" height="15" fill="rgb(232,111,31)" fg:x="21430329512" fg:w="8098166"/><text x="38.4245%" y="239.50"></text></g><g><title>__rust_alloc (8,166,373 samples, 0.01%)</title><rect x="38.1889%" y="229" width="0.0145%" height="15" fill="rgb(245,82,37)" fg:x="21438427678" fg:w="8166373"/><text x="38.4389%" y="239.50"></text></g><g><title>__GI___libc_free (16,445,687 samples, 0.03%)</title><rect x="38.2107%" y="213" width="0.0293%" height="15" fill="rgb(227,149,46)" fg:x="21450678554" fg:w="16445687"/><text x="38.4607%" y="223.50"></text></g><g><title>_int_free_merge_chunk (12,297,692 samples, 0.02%)</title><rect x="38.2181%" y="197" width="0.0219%" height="15" fill="rgb(218,36,50)" fg:x="21454826549" fg:w="12297692"/><text x="38.4681%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (882,408,685 samples, 1.57%)</title><rect x="38.2107%" y="229" width="1.5719%" height="15" fill="rgb(226,80,48)" fg:x="21450678554" fg:w="882408685"/><text x="38.4607%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_cb::RRPickerPicker&gt; (865,962,998 samples, 1.54%)</title><rect x="38.2400%" y="213" width="1.5426%" height="15" fill="rgb(238,224,15)" fg:x="21467124241" fg:w="865962998"/><text x="38.4900%" y="223.50"></text></g><g><title>_ZN4core3ptr202drop_in_place$LT$core..iter..adapters..flatten..Flatten$LT$alloc..vec..into_iter..IntoIter$LT$core..option..Option$LT$alloc..sync..Arc$LT$dyn$u20$grpc..client..load_balancing..Picker$GT$$GT$$GT$$GT$$GT$17hd9a587cc961adddbE.llvm.16557780020282342690 (14,167,385 samples, 0.03%)</title><rect x="40.1716%" y="213" width="0.0252%" height="15" fill="rgb(241,136,10)" fg:x="22551472988" fg:w="14167385"/><text x="40.4216%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,239,947 samples, 0.01%)</title><rect x="40.1822%" y="197" width="0.0147%" height="15" fill="rgb(208,32,45)" fg:x="22557400426" fg:w="8239947"/><text x="40.4322%" y="207.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (236,620,230 samples, 0.42%)</title><rect x="39.7826%" y="229" width="0.4215%" height="15" fill="rgb(207,135,9)" fg:x="22333087239" fg:w="236620230"/><text x="40.0326%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,332,680,779 samples, 5.94%)</title><rect x="40.2481%" y="197" width="5.9366%" height="15" fill="rgb(206,86,44)" fg:x="22594406079" fg:w="3332680779"/><text x="40.4981%" y="207.50">&lt;core::i..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,360,817,155 samples, 5.99%)</title><rect x="40.2481%" y="213" width="5.9867%" height="15" fill="rgb(245,177,15)" fg:x="22594406079" fg:w="3360817155"/><text x="40.4981%" y="223.50">&lt;alloc::..</text></g><g><title>__GI___libc_malloc (28,136,376 samples, 0.05%)</title><rect x="46.1847%" y="197" width="0.0501%" height="15" fill="rgb(206,64,50)" fg:x="25927086858" fg:w="28136376"/><text x="46.4347%" y="207.50"></text></g><g><title>_int_malloc (24,235,704 samples, 0.04%)</title><rect x="46.1916%" y="181" width="0.0432%" height="15" fill="rgb(234,36,40)" fg:x="25930987530" fg:w="24235704"/><text x="46.4416%" y="191.50"></text></g><g><title>unlink_chunk (12,021,060 samples, 0.02%)</title><rect x="46.2134%" y="165" width="0.0214%" height="15" fill="rgb(213,64,8)" fg:x="25943202174" fg:w="12021060"/><text x="46.4634%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2,346,296,796 samples, 4.18%)</title><rect x="46.2348%" y="213" width="4.1795%" height="15" fill="rgb(210,75,36)" fg:x="25955223234" fg:w="2346296796"/><text x="46.4848%" y="223.50">&lt;core..</text></g><g><title>lb_apis::StubChannelControllerCallbacks::send_update (7,728,693,033 samples, 13.77%)</title><rect x="36.6614%" y="277" width="13.7673%" height="15" fill="rgb(229,88,21)" fg:x="20580931207" fg:w="7728693033"/><text x="36.9114%" y="287.50">lb_apis::StubChannelC..</text></g><g><title>&lt;lb_apis::del_pol_cb::WrappedController as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (7,716,413,163 samples, 13.75%)</title><rect x="36.6833%" y="261" width="13.7455%" height="15" fill="rgb(252,204,47)" fg:x="20593211077" fg:w="7716413163"/><text x="36.9333%" y="271.50">&lt;lb_apis::del_pol_cb:..</text></g><g><title>_ZN7lb_apis10del_pol_cb13update_picker17h37b9e3191a1a2a2eE.llvm.12847404842258134487 (7,455,418,310 samples, 13.28%)</title><rect x="37.1482%" y="245" width="13.2806%" height="15" fill="rgb(208,77,27)" fg:x="20854205930" fg:w="7455418310"/><text x="37.3982%" y="255.50">_ZN7lb_apis10del_pol..</text></g><g><title>grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt;::map_child_states (5,739,916,771 samples, 10.22%)</title><rect x="40.2041%" y="229" width="10.2247%" height="15" fill="rgb(221,76,26)" fg:x="22569707469" fg:w="5739916771"/><text x="40.4541%" y="239.50">grpc::client::l..</text></g><g><title>lb_apis::callbacks (9,249,023,428 samples, 16.48%)</title><rect x="33.9892%" y="309" width="16.4756%" height="15" fill="rgb(225,139,18)" fg:x="19080814348" fg:w="9249023428"/><text x="34.2392%" y="319.50">lb_apis::callbacks</text></g><g><title>bencher::Bencher::iter (7,777,540,379 samples, 13.85%)</title><rect x="36.6104%" y="293" width="13.8544%" height="15" fill="rgb(230,137,11)" fg:x="20552297397" fg:w="7777540379"/><text x="36.8604%" y="303.50">bencher::Bencher::iter</text></g><g><title>rand::rng::Rng::gen_range (20,213,536 samples, 0.04%)</title><rect x="50.4288%" y="277" width="0.0360%" height="15" fill="rgb(212,28,1)" fg:x="28309624240" fg:w="20213536"/><text x="50.6788%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (8,267,823 samples, 0.01%)</title><rect x="50.4500%" y="261" width="0.0147%" height="15" fill="rgb(248,164,17)" fg:x="28321569953" fg:w="8267823"/><text x="50.7000%" y="271.50"></text></g><g><title>__GI___libc_malloc (98,915,579 samples, 0.18%)</title><rect x="50.8181%" y="229" width="0.1762%" height="15" fill="rgb(222,171,42)" fg:x="28528182558" fg:w="98915579"/><text x="51.0681%" y="239.50"></text></g><g><title>_int_malloc (90,574,264 samples, 0.16%)</title><rect x="50.8330%" y="213" width="0.1613%" height="15" fill="rgb(243,84,45)" fg:x="28536523873" fg:w="90574264"/><text x="51.0830%" y="223.50"></text></g><g><title>unlink_chunk (12,308,367 samples, 0.02%)</title><rect x="50.9724%" y="197" width="0.0219%" height="15" fill="rgb(252,49,23)" fg:x="28614789770" fg:w="12308367"/><text x="51.2224%" y="207.50"></text></g><g><title>malloc_consolidate (8,267,068 samples, 0.01%)</title><rect x="51.0016%" y="149" width="0.0147%" height="15" fill="rgb(215,19,7)" fg:x="28631183625" fg:w="8267068"/><text x="51.2516%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16,521,697 samples, 0.03%)</title><rect x="50.9943%" y="229" width="0.0294%" height="15" fill="rgb(238,81,41)" fg:x="28627098137" fg:w="16521697"/><text x="51.2443%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.3538639466319289803 (16,521,697 samples, 0.03%)</title><rect x="50.9943%" y="213" width="0.0294%" height="15" fill="rgb(210,199,37)" fg:x="28627098137" fg:w="16521697"/><text x="51.2443%" y="223.50"></text></g><g><title>__GI___libc_realloc (16,521,697 samples, 0.03%)</title><rect x="50.9943%" y="197" width="0.0294%" height="15" fill="rgb(244,192,49)" fg:x="28627098137" fg:w="16521697"/><text x="51.2443%" y="207.50"></text></g><g><title>_int_realloc (16,521,697 samples, 0.03%)</title><rect x="50.9943%" y="181" width="0.0294%" height="15" fill="rgb(226,211,11)" fg:x="28627098137" fg:w="16521697"/><text x="51.2443%" y="191.50"></text></g><g><title>_int_malloc (16,521,697 samples, 0.03%)</title><rect x="50.9943%" y="165" width="0.0294%" height="15" fill="rgb(236,162,54)" fg:x="28627098137" fg:w="16521697"/><text x="51.2443%" y="175.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (164,514,507 samples, 0.29%)</title><rect x="50.7748%" y="245" width="0.2931%" height="15" fill="rgb(220,229,9)" fg:x="28503852414" fg:w="164514507"/><text x="51.0248%" y="255.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (24,747,087 samples, 0.04%)</title><rect x="51.0237%" y="229" width="0.0441%" height="15" fill="rgb(250,87,22)" fg:x="28643619834" fg:w="24747087"/><text x="51.2737%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (243,223,163 samples, 0.43%)</title><rect x="50.6861%" y="261" width="0.4333%" height="15" fill="rgb(239,43,17)" fg:x="28454091579" fg:w="243223163"/><text x="50.9361%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (28,947,821 samples, 0.05%)</title><rect x="51.0678%" y="245" width="0.0516%" height="15" fill="rgb(231,177,25)" fg:x="28668366921" fg:w="28947821"/><text x="51.3178%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (28,947,821 samples, 0.05%)</title><rect x="51.0678%" y="229" width="0.0516%" height="15" fill="rgb(219,179,1)" fg:x="28668366921" fg:w="28947821"/><text x="51.3178%" y="239.50"></text></g><g><title>__GI___libc_realloc (28,947,821 samples, 0.05%)</title><rect x="51.0678%" y="213" width="0.0516%" height="15" fill="rgb(238,219,53)" fg:x="28668366921" fg:w="28947821"/><text x="51.3178%" y="223.50"></text></g><g><title>_int_realloc (28,947,821 samples, 0.05%)</title><rect x="51.0678%" y="197" width="0.0516%" height="15" fill="rgb(232,167,36)" fg:x="28668366921" fg:w="28947821"/><text x="51.3178%" y="207.50"></text></g><g><title>_int_malloc (20,723,720 samples, 0.04%)</title><rect x="51.0825%" y="181" width="0.0369%" height="15" fill="rgb(244,19,51)" fg:x="28676591022" fg:w="20723720"/><text x="51.3325%" y="191.50"></text></g><g><title>__GI___libc_free (49,607,816 samples, 0.09%)</title><rect x="51.1194%" y="261" width="0.0884%" height="15" fill="rgb(224,6,22)" fg:x="28697314742" fg:w="49607816"/><text x="51.3694%" y="271.50"></text></g><g><title>_int_free (41,284,519 samples, 0.07%)</title><rect x="51.1342%" y="245" width="0.0735%" height="15" fill="rgb(224,145,5)" fg:x="28705638039" fg:w="41284519"/><text x="51.3842%" y="255.50"></text></g><g><title>__GI___libc_free (8,321,205 samples, 0.01%)</title><rect x="51.3550%" y="229" width="0.0148%" height="15" fill="rgb(234,130,49)" fg:x="28829598017" fg:w="8321205"/><text x="51.6050%" y="239.50"></text></g><g><title>__GI___libc_malloc (12,373,264 samples, 0.02%)</title><rect x="51.3698%" y="229" width="0.0220%" height="15" fill="rgb(254,6,2)" fg:x="28837919222" fg:w="12373264"/><text x="51.6198%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.6716246681252942186 (86,903,704 samples, 0.15%)</title><rect x="51.2816%" y="245" width="0.1548%" height="15" fill="rgb(208,96,46)" fg:x="28788387133" fg:w="86903704"/><text x="51.5316%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,827,920 samples, 0.04%)</title><rect x="51.3993%" y="229" width="0.0371%" height="15" fill="rgb(239,3,39)" fg:x="28854462917" fg:w="20827920"/><text x="51.6493%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (136,558,937 samples, 0.24%)</title><rect x="51.2298%" y="261" width="0.2433%" height="15" fill="rgb(233,210,1)" fg:x="28759294131" fg:w="136558937"/><text x="51.4798%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,562,231 samples, 0.04%)</title><rect x="51.4364%" y="245" width="0.0366%" height="15" fill="rgb(244,137,37)" fg:x="28875290837" fg:w="20562231"/><text x="51.6864%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (458,144,115 samples, 0.82%)</title><rect x="50.6643%" y="277" width="0.8161%" height="15" fill="rgb(240,136,2)" fg:x="28441865696" fg:w="458144115"/><text x="50.9143%" y="287.50"></text></g><g><title>_int_malloc (70,358,638 samples, 0.13%)</title><rect x="51.6573%" y="213" width="0.1253%" height="15" fill="rgb(239,18,37)" fg:x="28999299186" fg:w="70358638"/><text x="51.9073%" y="223.50"></text></g><g><title>__GI___libc_malloc (90,986,367 samples, 0.16%)</title><rect x="51.6352%" y="229" width="0.1621%" height="15" fill="rgb(218,185,22)" fg:x="28986914767" fg:w="90986367"/><text x="51.8852%" y="239.50"></text></g><g><title>checked_request2size (8,243,310 samples, 0.01%)</title><rect x="51.7826%" y="213" width="0.0147%" height="15" fill="rgb(225,218,4)" fg:x="29069657824" fg:w="8243310"/><text x="52.0326%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,368,239 samples, 0.02%)</title><rect x="51.8047%" y="229" width="0.0220%" height="15" fill="rgb(230,182,32)" fg:x="29082062082" fg:w="12368239"/><text x="52.0547%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (144,834,105 samples, 0.26%)</title><rect x="51.5836%" y="245" width="0.2580%" height="15" fill="rgb(242,56,43)" fg:x="28957947483" fg:w="144834105"/><text x="51.8336%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (198,690,305 samples, 0.35%)</title><rect x="51.4950%" y="261" width="0.3539%" height="15" fill="rgb(233,99,24)" fg:x="28908191734" fg:w="198690305"/><text x="51.7450%" y="271.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h407cd80dd67508b8E.llvm.3459782327140544094 (215,100,425 samples, 0.38%)</title><rect x="51.4804%" y="277" width="0.3832%" height="15" fill="rgb(234,209,42)" fg:x="28900009811" fg:w="215100425"/><text x="51.7304%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,228,197 samples, 0.01%)</title><rect x="51.8489%" y="261" width="0.0147%" height="15" fill="rgb(227,7,12)" fg:x="29106882039" fg:w="8228197"/><text x="52.0989%" y="271.50"></text></g><g><title>__GI___libc_free (12,473,955 samples, 0.02%)</title><rect x="51.8636%" y="261" width="0.0222%" height="15" fill="rgb(245,203,43)" fg:x="29115110236" fg:w="12473955"/><text x="52.1136%" y="271.50"></text></g><g><title>_int_free_maybe_consolidate (12,473,955 samples, 0.02%)</title><rect x="51.8636%" y="245" width="0.0222%" height="15" fill="rgb(238,205,33)" fg:x="29115110236" fg:w="12473955"/><text x="52.1136%" y="255.50"></text></g><g><title>malloc_consolidate (12,473,955 samples, 0.02%)</title><rect x="51.8636%" y="229" width="0.0222%" height="15" fill="rgb(231,56,7)" fg:x="29115110236" fg:w="12473955"/><text x="52.1136%" y="239.50"></text></g><g><title>unlink_chunk (12,473,955 samples, 0.02%)</title><rect x="51.8636%" y="213" width="0.0222%" height="15" fill="rgb(244,186,29)" fg:x="29115110236" fg:w="12473955"/><text x="52.1136%" y="223.50"></text></g><g><title>[unknown] (41,318,234 samples, 0.07%)</title><rect x="52.0840%" y="229" width="0.0736%" height="15" fill="rgb(234,111,31)" fg:x="29238851642" fg:w="41318234"/><text x="52.3340%" y="239.50"></text></g><g><title>[unknown] (33,008,895 samples, 0.06%)</title><rect x="52.0988%" y="213" width="0.0588%" height="15" fill="rgb(241,149,10)" fg:x="29247160981" fg:w="33008895"/><text x="52.3488%" y="223.50"></text></g><g><title>[unknown] (33,008,895 samples, 0.06%)</title><rect x="52.0988%" y="197" width="0.0588%" height="15" fill="rgb(249,206,44)" fg:x="29247160981" fg:w="33008895"/><text x="52.3488%" y="207.50"></text></g><g><title>[unknown] (28,845,993 samples, 0.05%)</title><rect x="52.1062%" y="181" width="0.0514%" height="15" fill="rgb(251,153,30)" fg:x="29251323883" fg:w="28845993"/><text x="52.3562%" y="191.50"></text></g><g><title>[unknown] (24,725,846 samples, 0.04%)</title><rect x="52.1136%" y="165" width="0.0440%" height="15" fill="rgb(239,152,38)" fg:x="29255444030" fg:w="24725846"/><text x="52.3636%" y="175.50"></text></g><g><title>[unknown] (24,725,846 samples, 0.04%)</title><rect x="52.1136%" y="149" width="0.0440%" height="15" fill="rgb(249,139,47)" fg:x="29255444030" fg:w="24725846"/><text x="52.3636%" y="159.50"></text></g><g><title>[unknown] (24,725,846 samples, 0.04%)</title><rect x="52.1136%" y="133" width="0.0440%" height="15" fill="rgb(244,64,35)" fg:x="29255444030" fg:w="24725846"/><text x="52.3636%" y="143.50"></text></g><g><title>[unknown] (20,633,901 samples, 0.04%)</title><rect x="52.1209%" y="117" width="0.0368%" height="15" fill="rgb(216,46,15)" fg:x="29259535975" fg:w="20633901"/><text x="52.3709%" y="127.50"></text></g><g><title>[unknown] (20,633,901 samples, 0.04%)</title><rect x="52.1209%" y="101" width="0.0368%" height="15" fill="rgb(250,74,19)" fg:x="29259535975" fg:w="20633901"/><text x="52.3709%" y="111.50"></text></g><g><title>[unknown] (12,358,189 samples, 0.02%)</title><rect x="52.1356%" y="85" width="0.0220%" height="15" fill="rgb(249,42,33)" fg:x="29267811687" fg:w="12358189"/><text x="52.3856%" y="95.50"></text></g><g><title>[unknown] (8,201,722 samples, 0.01%)</title><rect x="52.1430%" y="69" width="0.0146%" height="15" fill="rgb(242,149,17)" fg:x="29271968154" fg:w="8201722"/><text x="52.3930%" y="79.50"></text></g><g><title>malloc_consolidate (53,709,614 samples, 0.10%)</title><rect x="52.1651%" y="197" width="0.0957%" height="15" fill="rgb(244,29,21)" fg:x="29284336686" fg:w="53709614"/><text x="52.4151%" y="207.50"></text></g><g><title>unlink_chunk (24,790,083 samples, 0.04%)</title><rect x="52.2166%" y="181" width="0.0442%" height="15" fill="rgb(220,130,37)" fg:x="29313256217" fg:w="24790083"/><text x="52.4666%" y="191.50"></text></g><g><title>__GI___libc_malloc (57,816,273 samples, 0.10%)</title><rect x="52.1651%" y="229" width="0.1030%" height="15" fill="rgb(211,67,2)" fg:x="29284336686" fg:w="57816273"/><text x="52.4151%" y="239.50"></text></g><g><title>_int_malloc (57,816,273 samples, 0.10%)</title><rect x="52.1651%" y="213" width="0.1030%" height="15" fill="rgb(235,68,52)" fg:x="29284336686" fg:w="57816273"/><text x="52.4151%" y="223.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.6716246681252942186 (206,396,485 samples, 0.37%)</title><rect x="51.9958%" y="245" width="0.3677%" height="15" fill="rgb(246,142,3)" fg:x="29189323774" fg:w="206396485"/><text x="52.2458%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (53,567,300 samples, 0.10%)</title><rect x="52.2680%" y="229" width="0.0954%" height="15" fill="rgb(241,25,7)" fg:x="29342152959" fg:w="53567300"/><text x="52.5180%" y="239.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17h76fd9fded13229cdE.llvm.12466677184317719468 (301,302,684 samples, 0.54%)</title><rect x="51.8636%" y="277" width="0.5367%" height="15" fill="rgb(242,119,39)" fg:x="29115110236" fg:w="301302684"/><text x="52.1136%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (288,828,729 samples, 0.51%)</title><rect x="51.8858%" y="261" width="0.5145%" height="15" fill="rgb(241,98,45)" fg:x="29127584191" fg:w="288828729"/><text x="52.1358%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,692,661 samples, 0.04%)</title><rect x="52.3635%" y="245" width="0.0369%" height="15" fill="rgb(254,28,30)" fg:x="29395720259" fg:w="20692661"/><text x="52.6135%" y="255.50"></text></g><g><title>__GI___libc_malloc (8,261,824 samples, 0.01%)</title><rect x="52.4003%" y="277" width="0.0147%" height="15" fill="rgb(241,142,54)" fg:x="29416412920" fg:w="8261824"/><text x="52.6503%" y="287.50"></text></g><g><title>_int_malloc (8,261,824 samples, 0.01%)</title><rect x="52.4003%" y="261" width="0.0147%" height="15" fill="rgb(222,85,15)" fg:x="29416412920" fg:w="8261824"/><text x="52.6503%" y="271.50"></text></g><g><title>grpc::client::load_balancing::LbState::initial (8,236,189 samples, 0.01%)</title><rect x="52.4150%" y="277" width="0.0147%" height="15" fill="rgb(210,85,47)" fg:x="29424674744" fg:w="8236189"/><text x="52.6650%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (1,048,992,743 samples, 1.87%)</title><rect x="50.6496%" y="293" width="1.8686%" height="15" fill="rgb(224,206,25)" fg:x="28433573629" fg:w="1048992743"/><text x="50.8996%" y="303.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (49,655,439 samples, 0.09%)</title><rect x="52.4297%" y="277" width="0.0885%" height="15" fill="rgb(243,201,19)" fg:x="29432910933" fg:w="49655439"/><text x="52.6797%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (49,655,439 samples, 0.09%)</title><rect x="52.4297%" y="261" width="0.0885%" height="15" fill="rgb(236,59,4)" fg:x="29432910933" fg:w="49655439"/><text x="52.6797%" y="271.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (49,655,439 samples, 0.09%)</title><rect x="52.4297%" y="245" width="0.0885%" height="15" fill="rgb(254,179,45)" fg:x="29432910933" fg:w="49655439"/><text x="52.6797%" y="255.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.13368858155757049781 (41,365,107 samples, 0.07%)</title><rect x="52.4445%" y="229" width="0.0737%" height="15" fill="rgb(226,14,10)" fg:x="29441201265" fg:w="41365107"/><text x="52.6945%" y="239.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h910e9d5dc148ea65E.llvm.3459782327140544094 (16,571,092 samples, 0.03%)</title><rect x="52.5182%" y="293" width="0.0295%" height="15" fill="rgb(244,27,41)" fg:x="29482566372" fg:w="16571092"/><text x="52.7682%" y="303.50"></text></g><g><title>__GI___libc_malloc (16,571,092 samples, 0.03%)</title><rect x="52.5182%" y="277" width="0.0295%" height="15" fill="rgb(235,35,32)" fg:x="29482566372" fg:w="16571092"/><text x="52.7682%" y="287.50"></text></g><g><title>_int_malloc (16,571,092 samples, 0.03%)</title><rect x="52.5182%" y="261" width="0.0295%" height="15" fill="rgb(218,68,31)" fg:x="29482566372" fg:w="16571092"/><text x="52.7682%" y="271.50"></text></g><g><title>malloc_consolidate (16,571,092 samples, 0.03%)</title><rect x="52.5182%" y="245" width="0.0295%" height="15" fill="rgb(207,120,37)" fg:x="29482566372" fg:w="16571092"/><text x="52.7682%" y="255.50"></text></g><g><title>unlink_chunk (8,270,146 samples, 0.01%)</title><rect x="52.5330%" y="229" width="0.0147%" height="15" fill="rgb(227,98,0)" fg:x="29490867318" fg:w="8270146"/><text x="52.7830%" y="239.50"></text></g><g><title>__GI___libc_malloc (84,331,399 samples, 0.15%)</title><rect x="52.5477%" y="293" width="0.1502%" height="15" fill="rgb(207,7,3)" fg:x="29499137464" fg:w="84331399"/><text x="52.7977%" y="303.50"></text></g><g><title>_int_malloc (61,895,939 samples, 0.11%)</title><rect x="52.5876%" y="277" width="0.1103%" height="15" fill="rgb(206,98,19)" fg:x="29521572924" fg:w="61895939"/><text x="52.8376%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20,781,568 samples, 0.04%)</title><rect x="52.8011%" y="261" width="0.0370%" height="15" fill="rgb(217,5,26)" fg:x="29641398529" fg:w="20781568"/><text x="53.0511%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (115,832,252 samples, 0.21%)</title><rect x="52.9698%" y="245" width="0.2063%" height="15" fill="rgb(235,190,38)" fg:x="29736097580" fg:w="115832252"/><text x="53.2198%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (86,889,656 samples, 0.15%)</title><rect x="53.0213%" y="229" width="0.1548%" height="15" fill="rgb(247,86,24)" fg:x="29765040176" fg:w="86889656"/><text x="53.2713%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (86,889,656 samples, 0.15%)</title><rect x="53.0213%" y="213" width="0.1548%" height="15" fill="rgb(205,101,16)" fg:x="29765040176" fg:w="86889656"/><text x="53.2713%" y="223.50"></text></g><g><title>__GI___libc_malloc (78,554,536 samples, 0.14%)</title><rect x="53.0362%" y="197" width="0.1399%" height="15" fill="rgb(246,168,33)" fg:x="29773375296" fg:w="78554536"/><text x="53.2862%" y="207.50"></text></g><g><title>_int_malloc (57,851,129 samples, 0.10%)</title><rect x="53.0731%" y="181" width="0.1031%" height="15" fill="rgb(231,114,1)" fg:x="29794078703" fg:w="57851129"/><text x="53.3231%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (314,101,840 samples, 0.56%)</title><rect x="52.7053%" y="293" width="0.5595%" height="15" fill="rgb(207,184,53)" fg:x="29587634696" fg:w="314101840"/><text x="52.9553%" y="303.50"></text></g><g><title>core::fmt::write (297,552,969 samples, 0.53%)</title><rect x="52.7348%" y="277" width="0.5300%" height="15" fill="rgb(224,95,51)" fg:x="29604183567" fg:w="297552969"/><text x="52.9848%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (239,556,439 samples, 0.43%)</title><rect x="52.8381%" y="261" width="0.4267%" height="15" fill="rgb(212,188,45)" fg:x="29662180097" fg:w="239556439"/><text x="53.0881%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (49,806,704 samples, 0.09%)</title><rect x="53.1761%" y="245" width="0.0887%" height="15" fill="rgb(223,154,38)" fg:x="29851929832" fg:w="49806704"/><text x="53.4261%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (16,524,730 samples, 0.03%)</title><rect x="53.2354%" y="229" width="0.0294%" height="15" fill="rgb(251,22,52)" fg:x="29885211806" fg:w="16524730"/><text x="53.4854%" y="239.50"></text></g><g><title>__GI_memcpy (12,431,526 samples, 0.02%)</title><rect x="53.3013%" y="229" width="0.0221%" height="15" fill="rgb(229,209,22)" fg:x="29922210884" fg:w="12431526"/><text x="53.5513%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,431,526 samples, 0.02%)</title><rect x="53.3013%" y="213" width="0.0221%" height="15" fill="rgb(234,138,34)" fg:x="29922210884" fg:w="12431526"/><text x="53.5513%" y="223.50"></text></g><g><title>_int_free (8,113,410 samples, 0.01%)</title><rect x="53.3235%" y="229" width="0.0145%" height="15" fill="rgb(212,95,11)" fg:x="29934642410" fg:w="8113410"/><text x="53.5735%" y="239.50"></text></g><g><title>_int_malloc (140,885,702 samples, 0.25%)</title><rect x="53.3451%" y="229" width="0.2510%" height="15" fill="rgb(240,179,47)" fg:x="29946781332" fg:w="140885702"/><text x="53.5951%" y="239.50"></text></g><g><title>malloc_consolidate (128,407,224 samples, 0.23%)</title><rect x="53.3673%" y="213" width="0.2287%" height="15" fill="rgb(240,163,11)" fg:x="29959259810" fg:w="128407224"/><text x="53.6173%" y="223.50"></text></g><g><title>unlink_chunk (41,384,313 samples, 0.07%)</title><rect x="53.5223%" y="197" width="0.0737%" height="15" fill="rgb(236,37,12)" fg:x="30046282721" fg:w="41384313"/><text x="53.7723%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (190,132,950 samples, 0.34%)</title><rect x="53.2648%" y="293" width="0.3387%" height="15" fill="rgb(232,164,16)" fg:x="29901736536" fg:w="190132950"/><text x="53.5148%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.3538639466319289803 (173,694,100 samples, 0.31%)</title><rect x="53.2941%" y="277" width="0.3094%" height="15" fill="rgb(244,205,15)" fg:x="29918175386" fg:w="173694100"/><text x="53.5441%" y="287.50"></text></g><g><title>__GI___libc_realloc (173,694,100 samples, 0.31%)</title><rect x="53.2941%" y="261" width="0.3094%" height="15" fill="rgb(223,117,47)" fg:x="29918175386" fg:w="173694100"/><text x="53.5441%" y="271.50"></text></g><g><title>_int_realloc (173,694,100 samples, 0.31%)</title><rect x="53.2941%" y="245" width="0.3094%" height="15" fill="rgb(244,107,35)" fg:x="29918175386" fg:w="173694100"/><text x="53.5441%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (66,689,335 samples, 0.12%)</title><rect x="57.1499%" y="245" width="0.1188%" height="15" fill="rgb(205,140,8)" fg:x="32082720054" fg:w="66689335"/><text x="57.3999%" y="255.50"></text></g><g><title>__GI___libc_malloc (16,639,697 samples, 0.03%)</title><rect x="57.2687%" y="245" width="0.0296%" height="15" fill="rgb(228,84,46)" fg:x="32149409389" fg:w="16639697"/><text x="57.5187%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (1,627,747,833 samples, 2.90%)</title><rect x="54.5833%" y="261" width="2.8996%" height="15" fill="rgb(254,188,9)" fg:x="30641880868" fg:w="1627747833"/><text x="54.8333%" y="271.50">&lt;l..</text></g><g><title>core::hash::BuildHasher::hash_one (95,239,371 samples, 0.17%)</title><rect x="57.3132%" y="245" width="0.1697%" height="15" fill="rgb(206,112,54)" fg:x="32174389330" fg:w="95239371"/><text x="57.5632%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37,303,205 samples, 0.07%)</title><rect x="57.5419%" y="245" width="0.0664%" height="15" fill="rgb(216,84,49)" fg:x="32302772691" fg:w="37303205"/><text x="57.7919%" y="255.50"></text></g><g><title>__GI___libc_free (20,721,248 samples, 0.04%)</title><rect x="57.6083%" y="245" width="0.0369%" height="15" fill="rgb(214,194,35)" fg:x="32340075896" fg:w="20721248"/><text x="57.8583%" y="255.50"></text></g><g><title>_int_free (20,721,248 samples, 0.04%)</title><rect x="57.6083%" y="229" width="0.0369%" height="15" fill="rgb(249,28,3)" fg:x="32340075896" fg:w="20721248"/><text x="57.8583%" y="239.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17h76fd9fded13229cdE.llvm.12466677184317719468 (120,186,183 samples, 0.21%)</title><rect x="57.4828%" y="261" width="0.2141%" height="15" fill="rgb(222,56,52)" fg:x="32269628701" fg:w="120186183"/><text x="57.7328%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (29,017,740 samples, 0.05%)</title><rect x="57.6452%" y="245" width="0.0517%" height="15" fill="rgb(245,217,50)" fg:x="32360797144" fg:w="29017740"/><text x="57.8952%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (2,038,240,583 samples, 3.63%)</title><rect x="54.1634%" y="277" width="3.6308%" height="15" fill="rgb(213,201,24)" fg:x="30406171273" fg:w="2038240583"/><text x="54.4134%" y="287.50">&lt;grp..</text></g><g><title>core::hash::BuildHasher::hash_one (54,596,972 samples, 0.10%)</title><rect x="57.6969%" y="261" width="0.0973%" height="15" fill="rgb(248,116,28)" fg:x="32389814884" fg:w="54596972"/><text x="57.9469%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,292,604 samples, 0.01%)</title><rect x="57.7794%" y="245" width="0.0148%" height="15" fill="rgb(219,72,43)" fg:x="32436119252" fg:w="8292604"/><text x="58.0294%" y="255.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (62,044,896 samples, 0.11%)</title><rect x="57.7942%" y="277" width="0.1105%" height="15" fill="rgb(209,138,14)" fg:x="32444411856" fg:w="62044896"/><text x="58.0442%" y="287.50"></text></g><g><title>__GI___libc_malloc (29,162,963 samples, 0.05%)</title><rect x="81.2803%" y="245" width="0.0519%" height="15" fill="rgb(222,18,33)" fg:x="45629019233" fg:w="29162963"/><text x="81.5303%" y="255.50"></text></g><g><title>tcache_get (16,683,468 samples, 0.03%)</title><rect x="81.3025%" y="229" width="0.0297%" height="15" fill="rgb(213,199,7)" fg:x="45641498728" fg:w="16683468"/><text x="81.5525%" y="239.50"></text></g><g><title>tcache_get_n (16,683,468 samples, 0.03%)</title><rect x="81.3025%" y="213" width="0.0297%" height="15" fill="rgb(250,110,10)" fg:x="45641498728" fg:w="16683468"/><text x="81.5525%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned (20,855,875 samples, 0.04%)</title><rect x="82.2867%" y="165" width="0.0372%" height="15" fill="rgb(248,123,6)" fg:x="46193967466" fg:w="20855875"/><text x="82.5367%" y="175.50"></text></g><g><title>__GI_memcpy (622,471,311 samples, 1.11%)</title><rect x="82.2792%" y="181" width="1.1088%" height="15" fill="rgb(206,91,31)" fg:x="46189786471" fg:w="622471311"/><text x="82.5292%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned_erms (597,434,441 samples, 1.06%)</title><rect x="82.3238%" y="165" width="1.0642%" height="15" fill="rgb(211,154,13)" fg:x="46214823341" fg:w="597434441"/><text x="82.5738%" y="175.50"></text></g><g><title>_int_free (116,612,340 samples, 0.21%)</title><rect x="83.3881%" y="181" width="0.2077%" height="15" fill="rgb(225,148,7)" fg:x="46812257782" fg:w="116612340"/><text x="83.6381%" y="191.50"></text></g><g><title>_int_free_create_chunk (167,134,108 samples, 0.30%)</title><rect x="83.7219%" y="165" width="0.2977%" height="15" fill="rgb(220,160,43)" fg:x="46999688331" fg:w="167134108"/><text x="83.9719%" y="175.50"></text></g><g><title>unlink_chunk (49,834,616 samples, 0.09%)</title><rect x="83.9309%" y="149" width="0.0888%" height="15" fill="rgb(213,52,39)" fg:x="47116987823" fg:w="49834616"/><text x="84.1809%" y="159.50"></text></g><g><title>_int_free_merge_chunk (242,107,190 samples, 0.43%)</title><rect x="83.5958%" y="181" width="0.4313%" height="15" fill="rgb(243,137,7)" fg:x="46928870122" fg:w="242107190"/><text x="83.8458%" y="191.50"></text></g><g><title>malloc_consolidate (58,206,765 samples, 0.10%)</title><rect x="85.3371%" y="165" width="0.1037%" height="15" fill="rgb(230,79,13)" fg:x="47906426905" fg:w="58206765"/><text x="85.5871%" y="175.50"></text></g><g><title>_int_realloc (2,045,523,518 samples, 3.64%)</title><rect x="82.1090%" y="197" width="3.6438%" height="15" fill="rgb(247,105,23)" fg:x="46094236316" fg:w="2045523518"/><text x="82.3590%" y="207.50">_int..</text></g><g><title>_int_malloc (968,782,522 samples, 1.73%)</title><rect x="84.0271%" y="181" width="1.7257%" height="15" fill="rgb(223,179,41)" fg:x="47170977312" fg:w="968782522"/><text x="84.2771%" y="191.50"></text></g><g><title>unlink_chunk (175,126,164 samples, 0.31%)</title><rect x="85.4408%" y="165" width="0.3120%" height="15" fill="rgb(218,9,34)" fg:x="47964633670" fg:w="175126164"/><text x="85.6908%" y="175.50"></text></g><g><title>checked_request2size (8,353,154 samples, 0.01%)</title><rect x="85.7528%" y="197" width="0.0149%" height="15" fill="rgb(222,106,8)" fg:x="48139759834" fg:w="8353154"/><text x="86.0028%" y="207.50"></text></g><g><title>__GI___libc_realloc (2,211,525,380 samples, 3.94%)</title><rect x="81.8578%" y="213" width="3.9395%" height="15" fill="rgb(211,220,0)" fg:x="45953219449" fg:w="2211525380"/><text x="82.1078%" y="223.50">__GI..</text></g><g><title>musable (16,631,841 samples, 0.03%)</title><rect x="85.7677%" y="197" width="0.0296%" height="15" fill="rgb(229,52,16)" fg:x="48148112988" fg:w="16631841"/><text x="86.0177%" y="207.50"></text></g><g><title>__rdl_realloc (20,801,351 samples, 0.04%)</title><rect x="85.7973%" y="213" width="0.0371%" height="15" fill="rgb(212,155,18)" fg:x="48164744829" fg:w="20801351"/><text x="86.0473%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (11,621,040,508 samples, 20.70%)</title><rect x="65.2225%" y="261" width="20.7009%" height="15" fill="rgb(242,21,14)" fg:x="36614526992" fg:w="11621040508"/><text x="65.4725%" y="271.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,577,385,304 samples, 4.59%)</title><rect x="81.3323%" y="245" width="4.5912%" height="15" fill="rgb(222,19,48)" fg:x="45658182196" fg:w="2577385304"/><text x="81.5823%" y="255.50">alloc..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.3538639466319289803 (2,419,442,004 samples, 4.31%)</title><rect x="81.6136%" y="229" width="4.3098%" height="15" fill="rgb(232,45,27)" fg:x="45816125496" fg:w="2419442004"/><text x="81.8636%" y="239.50">_ZN5a..</text></g><g><title>__rust_realloc (50,021,320 samples, 0.09%)</title><rect x="85.8343%" y="213" width="0.0891%" height="15" fill="rgb(249,103,42)" fg:x="48185546180" fg:w="50021320"/><text x="86.0843%" y="223.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (54,047,693 samples, 0.10%)</title><rect x="85.9234%" y="261" width="0.0963%" height="15" fill="rgb(246,81,33)" fg:x="48235567500" fg:w="54047693"/><text x="86.1734%" y="271.50"></text></g><g><title>[unknown] (8,233,180 samples, 0.01%)</title><rect x="86.0197%" y="261" width="0.0147%" height="15" fill="rgb(252,33,42)" fg:x="48289615193" fg:w="8233180"/><text x="86.2697%" y="271.50"></text></g><g><title>[unknown] (8,233,180 samples, 0.01%)</title><rect x="86.0197%" y="245" width="0.0147%" height="15" fill="rgb(209,212,41)" fg:x="48289615193" fg:w="8233180"/><text x="86.2697%" y="255.50"></text></g><g><title>[unknown] (8,233,180 samples, 0.01%)</title><rect x="86.0197%" y="229" width="0.0147%" height="15" fill="rgb(207,154,6)" fg:x="48289615193" fg:w="8233180"/><text x="86.2697%" y="239.50"></text></g><g><title>[unknown] (8,233,180 samples, 0.01%)</title><rect x="86.0197%" y="213" width="0.0147%" height="15" fill="rgb(223,64,47)" fg:x="48289615193" fg:w="8233180"/><text x="86.2697%" y="223.50"></text></g><g><title>_int_free (41,497,966 samples, 0.07%)</title><rect x="86.0713%" y="245" width="0.0739%" height="15" fill="rgb(211,161,38)" fg:x="48318593384" fg:w="41497966"/><text x="86.3213%" y="255.50"></text></g><g><title>__GI___libc_free (116,305,909 samples, 0.21%)</title><rect x="86.0344%" y="261" width="0.2072%" height="15" fill="rgb(219,138,40)" fg:x="48297848373" fg:w="116305909"/><text x="86.2844%" y="271.50"></text></g><g><title>_int_free_merge_chunk (54,062,932 samples, 0.10%)</title><rect x="86.1453%" y="245" width="0.0963%" height="15" fill="rgb(241,228,46)" fg:x="48360091350" fg:w="54062932"/><text x="86.3953%" y="255.50"></text></g><g><title>_int_free_create_chunk (37,362,357 samples, 0.07%)</title><rect x="86.1750%" y="229" width="0.0666%" height="15" fill="rgb(223,209,38)" fg:x="48376791925" fg:w="37362357"/><text x="86.4250%" y="239.50"></text></g><g><title>unlink_chunk (16,619,421 samples, 0.03%)</title><rect x="86.2120%" y="213" width="0.0296%" height="15" fill="rgb(236,164,45)" fg:x="48397534861" fg:w="16619421"/><text x="86.4620%" y="223.50"></text></g><g><title>malloc_consolidate (24,897,493 samples, 0.04%)</title><rect x="86.7661%" y="229" width="0.0444%" height="15" fill="rgb(231,15,5)" fg:x="48708634901" fg:w="24897493"/><text x="87.0161%" y="239.50"></text></g><g><title>_int_malloc (356,758,303 samples, 0.64%)</title><rect x="86.2784%" y="245" width="0.6355%" height="15" fill="rgb(252,35,15)" fg:x="48434860940" fg:w="356758303"/><text x="86.5284%" y="255.50"></text></g><g><title>unlink_chunk (58,086,849 samples, 0.10%)</title><rect x="86.8105%" y="229" width="0.1035%" height="15" fill="rgb(248,181,18)" fg:x="48733532394" fg:w="58086849"/><text x="87.0605%" y="239.50"></text></g><g><title>__GI___libc_malloc (389,932,130 samples, 0.69%)</title><rect x="86.2416%" y="261" width="0.6946%" height="15" fill="rgb(233,39,42)" fg:x="48414154282" fg:w="389932130"/><text x="86.4916%" y="271.50"></text></g><g><title>tcache_get (8,300,866 samples, 0.01%)</title><rect x="86.9214%" y="245" width="0.0148%" height="15" fill="rgb(238,110,33)" fg:x="48795785546" fg:w="8300866"/><text x="87.1714%" y="255.50"></text></g><g><title>tcache_get_n (8,300,866 samples, 0.01%)</title><rect x="86.9214%" y="229" width="0.0148%" height="15" fill="rgb(233,195,10)" fg:x="48795785546" fg:w="8300866"/><text x="87.1714%" y="239.50"></text></g><g><title>__rust_dealloc (8,312,168 samples, 0.01%)</title><rect x="86.9435%" y="261" width="0.0148%" height="15" fill="rgb(254,105,3)" fg:x="48808220378" fg:w="8312168"/><text x="87.1935%" y="271.50"></text></g><g><title>_int_free (16,705,275 samples, 0.03%)</title><rect x="87.0102%" y="229" width="0.0298%" height="15" fill="rgb(221,225,9)" fg:x="48845632047" fg:w="16705275"/><text x="87.2602%" y="239.50"></text></g><g><title>_int_free_create_chunk (28,907,941 samples, 0.05%)</title><rect x="87.0622%" y="213" width="0.0515%" height="15" fill="rgb(224,227,45)" fg:x="48874835404" fg:w="28907941"/><text x="87.3122%" y="223.50"></text></g><g><title>__GI___libc_free (74,780,991 samples, 0.13%)</title><rect x="86.9953%" y="245" width="0.1332%" height="15" fill="rgb(229,198,43)" fg:x="48837287208" fg:w="74780991"/><text x="87.2453%" y="255.50"></text></g><g><title>_int_free_merge_chunk (49,730,877 samples, 0.09%)</title><rect x="87.0399%" y="229" width="0.0886%" height="15" fill="rgb(206,209,35)" fg:x="48862337322" fg:w="49730877"/><text x="87.2899%" y="239.50"></text></g><g><title>_int_free_maybe_consolidate (8,324,854 samples, 0.01%)</title><rect x="87.1137%" y="213" width="0.0148%" height="15" fill="rgb(245,195,53)" fg:x="48903743345" fg:w="8324854"/><text x="87.3637%" y="223.50"></text></g><g><title>__rdl_dealloc (8,368,953 samples, 0.01%)</title><rect x="87.1285%" y="245" width="0.0149%" height="15" fill="rgb(240,92,26)" fg:x="48912068199" fg:w="8368953"/><text x="87.3785%" y="255.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h910e9d5dc148ea65E.llvm.3459782327140544094 (23,348,827,610 samples, 41.59%)</title><rect x="57.9047%" y="277" width="41.5920%" height="15" fill="rgb(207,40,23)" fg:x="32506456752" fg:w="23348827610"/><text x="58.1547%" y="287.50">_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h910e9..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7,038,751,816 samples, 12.54%)</title><rect x="86.9583%" y="261" width="12.5383%" height="15" fill="rgb(223,111,35)" fg:x="48816532546" fg:w="7038751816"/><text x="87.2083%" y="271.50">alloc::sync::Arc&lt;T,..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::RRPickerPicker&gt; (6,934,847,210 samples, 12.35%)</title><rect x="87.1434%" y="245" width="12.3532%" height="15" fill="rgb(229,147,28)" fg:x="48920437152" fg:w="6934847210"/><text x="87.3934%" y="255.50">core::ptr::drop_in..</text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (8,342,049 samples, 0.01%)</title><rect x="99.5341%" y="261" width="0.0149%" height="15" fill="rgb(211,29,28)" fg:x="55876303996" fg:w="8342049"/><text x="99.7841%" y="271.50"></text></g><g><title>rand::rng::Rng::gen_range (46,055,063 samples, 0.08%)</title><rect x="99.4967%" y="277" width="0.0820%" height="15" fill="rgb(228,72,33)" fg:x="55855284362" fg:w="46055063"/><text x="99.7467%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (16,693,380 samples, 0.03%)</title><rect x="99.5490%" y="261" width="0.0297%" height="15" fill="rgb(205,214,31)" fg:x="55884646045" fg:w="16693380"/><text x="99.7990%" y="271.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (24,989,650 samples, 0.04%)</title><rect x="99.5860%" y="277" width="0.0445%" height="15" fill="rgb(224,111,15)" fg:x="55905421771" fg:w="24989650"/><text x="99.8360%" y="287.50"></text></g><g><title>bencher::Bencher::iter (25,842,702,214 samples, 46.03%)</title><rect x="53.6035%" y="293" width="46.0344%" height="15" fill="rgb(253,21,26)" fg:x="30091869486" fg:w="25842702214"/><text x="53.8535%" y="303.50">bencher::Bencher::iter</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (32,958,652 samples, 0.06%)</title><rect x="99.6379%" y="277" width="0.0587%" height="15" fill="rgb(245,139,43)" fg:x="55934571700" fg:w="32958652"/><text x="99.8879%" y="287.50"></text></g><g><title>__GI___libc_free (16,510,418 samples, 0.03%)</title><rect x="99.7263%" y="245" width="0.0294%" height="15" fill="rgb(252,170,7)" fg:x="55984220555" fg:w="16510418"/><text x="99.9763%" y="255.50"></text></g><g><title>_int_free (12,326,934 samples, 0.02%)</title><rect x="99.7338%" y="229" width="0.0220%" height="15" fill="rgb(231,118,14)" fg:x="55988404039" fg:w="12326934"/><text x="99.9838%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (45,295,293 samples, 0.08%)</title><rect x="99.7041%" y="261" width="0.0807%" height="15" fill="rgb(238,83,0)" fg:x="55971711859" fg:w="45295293"/><text x="99.9541%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16,276,179 samples, 0.03%)</title><rect x="99.7558%" y="245" width="0.0290%" height="15" fill="rgb(221,39,39)" fg:x="56000730973" fg:w="16276179"/><text x="100.0058%" y="255.50"></text></g><g><title>_int_free (16,381,405 samples, 0.03%)</title><rect x="99.8067%" y="245" width="0.0292%" height="15" fill="rgb(222,119,46)" fg:x="56029329727" fg:w="16381405"/><text x="100.0567%" y="255.50"></text></g><g><title>_int_free_maybe_consolidate (54,016,890 samples, 0.10%)</title><rect x="99.8359%" y="245" width="0.0962%" height="15" fill="rgb(222,165,49)" fg:x="56045711132" fg:w="54016890"/><text x="100.0859%" y="255.50"></text></g><g><title>malloc_consolidate (54,016,890 samples, 0.10%)</title><rect x="99.8359%" y="229" width="0.0962%" height="15" fill="rgb(219,113,52)" fg:x="56045711132" fg:w="54016890"/><text x="100.0859%" y="239.50"></text></g><g><title>unlink_chunk (20,721,443 samples, 0.04%)</title><rect x="99.8952%" y="213" width="0.0369%" height="15" fill="rgb(214,7,15)" fg:x="56079006579" fg:w="20721443"/><text x="100.1452%" y="223.50"></text></g><g><title>__GI___libc_free (91,003,320 samples, 0.16%)</title><rect x="99.7847%" y="261" width="0.1621%" height="15" fill="rgb(235,32,4)" fg:x="56017007152" fg:w="91003320"/><text x="100.0347%" y="271.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.3890161395835269148 (144,635,216 samples, 0.26%)</title><rect x="99.6966%" y="277" width="0.2576%" height="15" fill="rgb(238,90,54)" fg:x="55967530352" fg:w="144635216"/><text x="99.9466%" y="287.50"></text></g><g><title>__libc_start_main_impl (56,120,570,921 samples, 99.97%)</title><rect x="0.0074%" y="453" width="99.9692%" height="15" fill="rgb(213,208,19)" fg:x="4128844" fg:w="56120570921"/><text x="0.2574%" y="463.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (56,120,570,921 samples, 99.97%)</title><rect x="0.0074%" y="437" width="99.9692%" height="15" fill="rgb(233,156,4)" fg:x="4128844" fg:w="56120570921"/><text x="0.2574%" y="447.50">__libc_start_call_main</text></g><g><title>main (56,120,570,921 samples, 99.97%)</title><rect x="0.0074%" y="421" width="99.9692%" height="15" fill="rgb(207,194,5)" fg:x="4128844" fg:w="56120570921"/><text x="0.2574%" y="431.50">main</text></g><g><title>std::rt::lang_start_internal (56,120,570,921 samples, 99.97%)</title><rect x="0.0074%" y="405" width="99.9692%" height="15" fill="rgb(206,111,30)" fg:x="4128844" fg:w="56120570921"/><text x="0.2574%" y="415.50">std::rt::lang_start_internal</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.16754680775221440004 (56,120,570,921 samples, 99.97%)</title><rect x="0.0074%" y="389" width="99.9692%" height="15" fill="rgb(243,70,54)" fg:x="4128844" fg:w="56120570921"/><text x="0.2574%" y="399.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.16754680775221440004</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (56,120,570,921 samples, 99.97%)</title><rect x="0.0074%" y="373" width="99.9692%" height="15" fill="rgb(242,28,8)" fg:x="4128844" fg:w="56120570921"/><text x="0.2574%" y="383.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lb_apis::main (56,120,570,921 samples, 99.97%)</title><rect x="0.0074%" y="357" width="99.9692%" height="15" fill="rgb(219,106,18)" fg:x="4128844" fg:w="56120570921"/><text x="0.2574%" y="367.50">lb_apis::main</text></g><g><title>bencher::run_tests_console (56,120,570,921 samples, 99.97%)</title><rect x="0.0074%" y="341" width="99.9692%" height="15" fill="rgb(244,222,10)" fg:x="4128844" fg:w="56120570921"/><text x="0.2574%" y="351.50">bencher::run_tests_console</text></g><g><title>bencher::Bencher::auto_bench (56,120,570,921 samples, 99.97%)</title><rect x="0.0074%" y="325" width="99.9692%" height="15" fill="rgb(236,179,52)" fg:x="4128844" fg:w="56120570921"/><text x="0.2574%" y="335.50">bencher::Bencher::auto_bench</text></g><g><title>lb_apis::single (27,794,861,989 samples, 49.51%)</title><rect x="50.4648%" y="309" width="49.5118%" height="15" fill="rgb(213,23,39)" fg:x="28329837776" fg:w="27794861989"/><text x="50.7148%" y="319.50">lb_apis::single</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::DelegatingPolicy&gt; (190,128,065 samples, 0.34%)</title><rect x="99.6379%" y="293" width="0.3387%" height="15" fill="rgb(238,48,10)" fg:x="55934571700" fg:w="190128065"/><text x="99.8879%" y="303.50"></text></g><g><title>__GI___libc_free (12,534,197 samples, 0.02%)</title><rect x="99.9543%" y="277" width="0.0223%" height="15" fill="rgb(251,196,23)" fg:x="56112165568" fg:w="12534197"/><text x="100.2043%" y="287.50"></text></g><g><title>_int_free_maybe_consolidate (12,534,197 samples, 0.02%)</title><rect x="99.9543%" y="261" width="0.0223%" height="15" fill="rgb(250,152,24)" fg:x="56112165568" fg:w="12534197"/><text x="100.2043%" y="271.50"></text></g><g><title>malloc_consolidate (12,534,197 samples, 0.02%)</title><rect x="99.9543%" y="245" width="0.0223%" height="15" fill="rgb(209,150,17)" fg:x="56112165568" fg:w="12534197"/><text x="100.2043%" y="255.50"></text></g><g><title>_start (56,121,541,090 samples, 99.97%)</title><rect x="0.0074%" y="469" width="99.9710%" height="15" fill="rgb(234,202,34)" fg:x="4128843" fg:w="56121541090"/><text x="0.2574%" y="479.50">_start</text></g><g><title>all (56,137,844,313 samples, 100%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(253,148,53)" fg:x="0" fg:w="56137844313"/><text x="0.2500%" y="511.50"></text></g><g><title>lb_apis-6320936 (56,137,844,313 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(218,129,16)" fg:x="0" fg:w="56137844313"/><text x="0.2500%" y="495.50">lb_apis-6320936</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (12,174,380 samples, 0.02%)</title><rect x="99.9783%" y="469" width="0.0217%" height="15" fill="rgb(216,85,19)" fg:x="56125669933" fg:w="12174380"/><text x="100.2283%" y="479.50"></text></g><g><title>core::fmt::Formatter::pad_integral (8,182,721 samples, 0.01%)</title><rect x="99.9854%" y="453" width="0.0146%" height="15" fill="rgb(235,228,7)" fg:x="56129661592" fg:w="8182721"/><text x="100.2354%" y="463.50"></text></g></svg></svg>