<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="582" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="565.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="565.00"> </text><svg id="frames" x="10" width="1180" total_samples="64432149190"><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8,360,453 samples, 0.01%)</title><rect x="0.0000%" y="501" width="0.0130%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="8360453"/><text x="0.2500%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (8,360,453 samples, 0.01%)</title><rect x="0.0000%" y="485" width="0.0130%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="8360453"/><text x="0.2500%" y="495.50"></text></g><g><title>__GI___libc_malloc (11,092,689 samples, 0.02%)</title><rect x="0.0177%" y="485" width="0.0172%" height="15" fill="rgb(221,193,54)" fg:x="11422195" fg:w="11092689"/><text x="0.2677%" y="495.50"></text></g><g><title>_int_malloc (6,967,436 samples, 0.01%)</title><rect x="0.0241%" y="469" width="0.0108%" height="15" fill="rgb(248,212,6)" fg:x="15547448" fg:w="6967436"/><text x="0.2741%" y="479.50"></text></g><g><title>[unknown] (6,967,436 samples, 0.01%)</title><rect x="0.0241%" y="453" width="0.0108%" height="15" fill="rgb(208,68,35)" fg:x="15547448" fg:w="6967436"/><text x="0.2741%" y="463.50"></text></g><g><title>[unknown] (18,271,269 samples, 0.03%)</title><rect x="0.0177%" y="501" width="0.0284%" height="15" fill="rgb(232,128,0)" fg:x="11422195" fg:w="18271269"/><text x="0.2677%" y="511.50"></text></g><g><title>_int_malloc (7,178,580 samples, 0.01%)</title><rect x="0.0349%" y="485" width="0.0111%" height="15" fill="rgb(207,160,47)" fg:x="22514884" fg:w="7178580"/><text x="0.2849%" y="495.50"></text></g><g><title>[unknown] (7,178,580 samples, 0.01%)</title><rect x="0.0349%" y="469" width="0.0111%" height="15" fill="rgb(228,23,34)" fg:x="22514884" fg:w="7178580"/><text x="0.2849%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12,342,658 samples, 0.02%)</title><rect x="0.3160%" y="309" width="0.0192%" height="15" fill="rgb(218,30,26)" fg:x="203580628" fg:w="12342658"/><text x="0.5660%" y="319.50"></text></g><g><title>__GI___libc_malloc (166,141,473 samples, 0.26%)</title><rect x="0.5761%" y="261" width="0.2579%" height="15" fill="rgb(220,122,19)" fg:x="371186371" fg:w="166141473"/><text x="0.8261%" y="271.50"></text></g><g><title>_int_malloc (145,468,972 samples, 0.23%)</title><rect x="0.6082%" y="245" width="0.2258%" height="15" fill="rgb(250,228,42)" fg:x="391858872" fg:w="145468972"/><text x="0.8582%" y="255.50"></text></g><g><title>__GI_memcpy (12,135,894 samples, 0.02%)</title><rect x="0.8405%" y="197" width="0.0188%" height="15" fill="rgb(240,193,28)" fg:x="541551375" fg:w="12135894"/><text x="1.0905%" y="207.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,135,894 samples, 0.02%)</title><rect x="0.8405%" y="181" width="0.0188%" height="15" fill="rgb(216,20,37)" fg:x="541551375" fg:w="12135894"/><text x="1.0905%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (26,252,737 samples, 0.04%)</title><rect x="0.8339%" y="261" width="0.0407%" height="15" fill="rgb(206,188,39)" fg:x="537327844" fg:w="26252737"/><text x="1.0839%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (26,252,737 samples, 0.04%)</title><rect x="0.8339%" y="245" width="0.0407%" height="15" fill="rgb(217,207,13)" fg:x="537327844" fg:w="26252737"/><text x="1.0839%" y="255.50"></text></g><g><title>__GI___libc_realloc (22,029,206 samples, 0.03%)</title><rect x="0.8405%" y="229" width="0.0342%" height="15" fill="rgb(231,73,38)" fg:x="541551375" fg:w="22029206"/><text x="1.0905%" y="239.50"></text></g><g><title>_int_realloc (22,029,206 samples, 0.03%)</title><rect x="0.8405%" y="213" width="0.0342%" height="15" fill="rgb(225,20,46)" fg:x="541551375" fg:w="22029206"/><text x="1.0905%" y="223.50"></text></g><g><title>_int_malloc (9,893,312 samples, 0.02%)</title><rect x="0.8593%" y="197" width="0.0154%" height="15" fill="rgb(210,31,41)" fg:x="553687269" fg:w="9893312"/><text x="1.1093%" y="207.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (282,417,761 samples, 0.44%)</title><rect x="0.4618%" y="277" width="0.4383%" height="15" fill="rgb(221,200,47)" fg:x="297558119" fg:w="282417761"/><text x="0.7118%" y="287.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (16,395,299 samples, 0.03%)</title><rect x="0.8747%" y="261" width="0.0254%" height="15" fill="rgb(226,26,5)" fg:x="563580581" fg:w="16395299"/><text x="1.1247%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (377,070,073 samples, 0.59%)</title><rect x="0.3793%" y="293" width="0.5852%" height="15" fill="rgb(249,33,26)" fg:x="244391737" fg:w="377070073"/><text x="0.6293%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (41,485,930 samples, 0.06%)</title><rect x="0.9001%" y="277" width="0.0644%" height="15" fill="rgb(235,183,28)" fg:x="579975880" fg:w="41485930"/><text x="1.1501%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (41,485,930 samples, 0.06%)</title><rect x="0.9001%" y="261" width="0.0644%" height="15" fill="rgb(221,5,38)" fg:x="579975880" fg:w="41485930"/><text x="1.1501%" y="271.50"></text></g><g><title>__GI___libc_realloc (37,272,130 samples, 0.06%)</title><rect x="0.9067%" y="245" width="0.0578%" height="15" fill="rgb(247,18,42)" fg:x="584189680" fg:w="37272130"/><text x="1.1567%" y="255.50"></text></g><g><title>_int_realloc (37,272,130 samples, 0.06%)</title><rect x="0.9067%" y="229" width="0.0578%" height="15" fill="rgb(241,131,45)" fg:x="584189680" fg:w="37272130"/><text x="1.1567%" y="239.50"></text></g><g><title>_int_malloc (28,832,055 samples, 0.04%)</title><rect x="0.9198%" y="213" width="0.0447%" height="15" fill="rgb(249,31,29)" fg:x="592629755" fg:w="28832055"/><text x="1.1698%" y="223.50"></text></g><g><title>_int_free (57,729,367 samples, 0.09%)</title><rect x="1.0091%" y="277" width="0.0896%" height="15" fill="rgb(225,111,53)" fg:x="650184274" fg:w="57729367"/><text x="1.2591%" y="287.50"></text></g><g><title>_int_free_merge_chunk (12,522,857 samples, 0.02%)</title><rect x="1.0987%" y="277" width="0.0194%" height="15" fill="rgb(238,160,17)" fg:x="707913641" fg:w="12522857"/><text x="1.3487%" y="287.50"></text></g><g><title>__GI___libc_free (102,941,857 samples, 0.16%)</title><rect x="0.9645%" y="293" width="0.1598%" height="15" fill="rgb(214,148,48)" fg:x="621461810" fg:w="102941857"/><text x="1.2145%" y="303.50"></text></g><g><title>__rdl_dealloc (16,564,884 samples, 0.03%)</title><rect x="1.1243%" y="293" width="0.0257%" height="15" fill="rgb(232,36,49)" fg:x="724403667" fg:w="16564884"/><text x="1.3743%" y="303.50"></text></g><g><title>__GI___libc_malloc (16,402,923 samples, 0.03%)</title><rect x="1.4115%" y="261" width="0.0255%" height="15" fill="rgb(209,103,24)" fg:x="909473253" fg:w="16402923"/><text x="1.6615%" y="271.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h368aaacc3eb2e184E.llvm.9464877178135716140 (199,543,099 samples, 0.31%)</title><rect x="1.2647%" y="277" width="0.3097%" height="15" fill="rgb(229,88,8)" fg:x="814857553" fg:w="199543099"/><text x="1.5147%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (76,186,533 samples, 0.12%)</title><rect x="1.4561%" y="261" width="0.1182%" height="15" fill="rgb(213,181,19)" fg:x="938214119" fg:w="76186533"/><text x="1.7061%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (318,916,923 samples, 0.49%)</title><rect x="1.1500%" y="293" width="0.4950%" height="15" fill="rgb(254,191,54)" fg:x="740968551" fg:w="318916923"/><text x="1.4000%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45,484,822 samples, 0.07%)</title><rect x="1.5744%" y="277" width="0.0706%" height="15" fill="rgb(241,83,37)" fg:x="1014400652" fg:w="45484822"/><text x="1.8244%" y="287.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (860,630,481 samples, 1.34%)</title><rect x="0.3351%" y="309" width="1.3357%" height="15" fill="rgb(233,36,39)" fg:x="215923286" fg:w="860630481"/><text x="0.5851%" y="319.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (16,668,293 samples, 0.03%)</title><rect x="1.6450%" y="293" width="0.0259%" height="15" fill="rgb(226,3,54)" fg:x="1059885474" fg:w="16668293"/><text x="1.8950%" y="303.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicyBuilder as grpc::client::load_balancing::LbPolicyBuilderBatched&gt;::build (16,288,615 samples, 0.03%)</title><rect x="1.6708%" y="309" width="0.0253%" height="15" fill="rgb(245,192,40)" fg:x="1076553767" fg:w="16288615"/><text x="1.9208%" y="319.50"></text></g><g><title>__GI___libc_malloc (100,373,724 samples, 0.16%)</title><rect x="1.9386%" y="261" width="0.1558%" height="15" fill="rgb(238,167,29)" fg:x="1249096255" fg:w="100373724"/><text x="2.1886%" y="271.50"></text></g><g><title>_int_malloc (48,631,454 samples, 0.08%)</title><rect x="2.0189%" y="245" width="0.0755%" height="15" fill="rgb(232,182,51)" fg:x="1300838525" fg:w="48631454"/><text x="2.2689%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned (8,177,294 samples, 0.01%)</title><rect x="2.0944%" y="261" width="0.0127%" height="15" fill="rgb(231,60,39)" fg:x="1349469979" fg:w="8177294"/><text x="2.3444%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,230,634 samples, 0.02%)</title><rect x="2.1071%" y="261" width="0.0190%" height="15" fill="rgb(208,69,12)" fg:x="1357647273" fg:w="12230634"/><text x="2.3571%" y="271.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h5e4397d94e40bc48E.llvm.6231558932131486975 (281,220,088 samples, 0.44%)</title><rect x="1.6961%" y="309" width="0.4365%" height="15" fill="rgb(235,93,37)" fg:x="1092842382" fg:w="281220088"/><text x="1.9461%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (272,948,442 samples, 0.42%)</title><rect x="1.7090%" y="293" width="0.4236%" height="15" fill="rgb(213,116,39)" fg:x="1101114028" fg:w="272948442"/><text x="1.9590%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (174,108,743 samples, 0.27%)</title><rect x="1.8624%" y="277" width="0.2702%" height="15" fill="rgb(222,207,29)" fg:x="1199953727" fg:w="174108743"/><text x="2.1124%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,283,677 samples, 0.01%)</title><rect x="2.1436%" y="293" width="0.0129%" height="15" fill="rgb(206,96,30)" fg:x="1381168078" fg:w="8283677"/><text x="2.3936%" y="303.50"></text></g><g><title>[unknown] (53,121,047 samples, 0.08%)</title><rect x="2.4871%" y="261" width="0.0824%" height="15" fill="rgb(218,138,4)" fg:x="1602523564" fg:w="53121047"/><text x="2.7371%" y="271.50"></text></g><g><title>[unknown] (41,201,580 samples, 0.06%)</title><rect x="2.5056%" y="245" width="0.0639%" height="15" fill="rgb(250,191,14)" fg:x="1614443031" fg:w="41201580"/><text x="2.7556%" y="255.50"></text></g><g><title>[unknown] (37,166,687 samples, 0.06%)</title><rect x="2.5119%" y="229" width="0.0577%" height="15" fill="rgb(239,60,40)" fg:x="1618477924" fg:w="37166687"/><text x="2.7619%" y="239.50"></text></g><g><title>[unknown] (37,166,687 samples, 0.06%)</title><rect x="2.5119%" y="213" width="0.0577%" height="15" fill="rgb(206,27,48)" fg:x="1618477924" fg:w="37166687"/><text x="2.7619%" y="223.50"></text></g><g><title>[unknown] (37,166,687 samples, 0.06%)</title><rect x="2.5119%" y="197" width="0.0577%" height="15" fill="rgb(225,35,8)" fg:x="1618477924" fg:w="37166687"/><text x="2.7619%" y="207.50"></text></g><g><title>[unknown] (33,128,625 samples, 0.05%)</title><rect x="2.5182%" y="181" width="0.0514%" height="15" fill="rgb(250,213,24)" fg:x="1622515986" fg:w="33128625"/><text x="2.7682%" y="191.50"></text></g><g><title>[unknown] (28,916,610 samples, 0.04%)</title><rect x="2.5247%" y="165" width="0.0449%" height="15" fill="rgb(247,123,22)" fg:x="1626728001" fg:w="28916610"/><text x="2.7747%" y="175.50"></text></g><g><title>[unknown] (20,608,217 samples, 0.03%)</title><rect x="2.5376%" y="149" width="0.0320%" height="15" fill="rgb(231,138,38)" fg:x="1635036394" fg:w="20608217"/><text x="2.7876%" y="159.50"></text></g><g><title>[unknown] (16,475,599 samples, 0.03%)</title><rect x="2.5440%" y="133" width="0.0256%" height="15" fill="rgb(231,145,46)" fg:x="1639169012" fg:w="16475599"/><text x="2.7940%" y="143.50"></text></g><g><title>[unknown] (8,233,155 samples, 0.01%)</title><rect x="2.5568%" y="117" width="0.0128%" height="15" fill="rgb(251,118,11)" fg:x="1647411456" fg:w="8233155"/><text x="2.8068%" y="127.50"></text></g><g><title>[unknown] (8,233,155 samples, 0.01%)</title><rect x="2.5568%" y="101" width="0.0128%" height="15" fill="rgb(217,147,25)" fg:x="1647411456" fg:w="8233155"/><text x="2.8068%" y="111.50"></text></g><g><title>malloc_consolidate (69,366,181 samples, 0.11%)</title><rect x="2.5757%" y="229" width="0.1077%" height="15" fill="rgb(247,81,37)" fg:x="1659587770" fg:w="69366181"/><text x="2.8257%" y="239.50"></text></g><g><title>unlink_chunk (45,209,258 samples, 0.07%)</title><rect x="2.6132%" y="213" width="0.0702%" height="15" fill="rgb(209,12,38)" fg:x="1683744693" fg:w="45209258"/><text x="2.8632%" y="223.50"></text></g><g><title>__GI___libc_malloc (77,492,328 samples, 0.12%)</title><rect x="2.5696%" y="261" width="0.1203%" height="15" fill="rgb(227,1,9)" fg:x="1655644611" fg:w="77492328"/><text x="2.8196%" y="271.50"></text></g><g><title>_int_malloc (77,492,328 samples, 0.12%)</title><rect x="2.5696%" y="245" width="0.1203%" height="15" fill="rgb(248,47,43)" fg:x="1655644611" fg:w="77492328"/><text x="2.8196%" y="255.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h03e3fa1e86f88544E.llvm.9464877178135716140 (314,743,302 samples, 0.49%)</title><rect x="2.3412%" y="277" width="0.4885%" height="15" fill="rgb(221,10,30)" fg:x="1508468634" fg:w="314743302"/><text x="2.5912%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (90,074,997 samples, 0.14%)</title><rect x="2.6899%" y="261" width="0.1398%" height="15" fill="rgb(210,229,1)" fg:x="1733136939" fg:w="90074997"/><text x="2.9399%" y="271.50"></text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (491,023,695 samples, 0.76%)</title><rect x="2.1436%" y="309" width="0.7621%" height="15" fill="rgb(222,148,37)" fg:x="1381168078" fg:w="491023695"/><text x="2.3936%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (478,578,826 samples, 0.74%)</title><rect x="2.1629%" y="293" width="0.7428%" height="15" fill="rgb(234,67,33)" fg:x="1393612947" fg:w="478578826"/><text x="2.4129%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (48,979,837 samples, 0.08%)</title><rect x="2.8297%" y="277" width="0.0760%" height="15" fill="rgb(247,98,35)" fg:x="1823211936" fg:w="48979837"/><text x="3.0797%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (12,175,910 samples, 0.02%)</title><rect x="2.8868%" y="261" width="0.0189%" height="15" fill="rgb(247,138,52)" fg:x="1860015863" fg:w="12175910"/><text x="3.1368%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (1,803,229,064 samples, 2.80%)</title><rect x="0.3035%" y="325" width="2.7986%" height="15" fill="rgb(213,79,30)" fg:x="195568315" fg:w="1803229064"/><text x="0.5535%" y="335.50">&lt;g..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (126,605,606 samples, 0.20%)</title><rect x="2.9057%" y="309" width="0.1965%" height="15" fill="rgb(246,177,23)" fg:x="1872191773" fg:w="126605606"/><text x="3.1557%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (126,605,606 samples, 0.20%)</title><rect x="2.9057%" y="293" width="0.1965%" height="15" fill="rgb(230,62,27)" fg:x="1872191773" fg:w="126605606"/><text x="3.1557%" y="303.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (126,605,606 samples, 0.20%)</title><rect x="2.9057%" y="277" width="0.1965%" height="15" fill="rgb(216,154,8)" fg:x="1872191773" fg:w="126605606"/><text x="3.1557%" y="287.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h4884cc1a4d2303d3E.llvm.3660540333688232871 (102,410,226 samples, 0.16%)</title><rect x="2.9432%" y="261" width="0.1589%" height="15" fill="rgb(244,35,45)" fg:x="1896387153" fg:w="102410226"/><text x="3.1932%" y="271.50"></text></g><g><title>checked_request2size (8,100,943 samples, 0.01%)</title><rect x="3.3628%" y="293" width="0.0126%" height="15" fill="rgb(251,115,12)" fg:x="2166747626" fg:w="8100943"/><text x="3.6128%" y="303.50"></text></g><g><title>__GI___libc_malloc (182,001,983 samples, 0.28%)</title><rect x="3.1083%" y="325" width="0.2825%" height="15" fill="rgb(240,54,50)" fg:x="2002769602" fg:w="182001983"/><text x="3.3583%" y="335.50"></text></g><g><title>_int_malloc (153,297,269 samples, 0.24%)</title><rect x="3.1529%" y="309" width="0.2379%" height="15" fill="rgb(233,84,52)" fg:x="2031474316" fg:w="153297269"/><text x="3.4029%" y="319.50"></text></g><g><title>__rdl_alloc (7,803,198 samples, 0.01%)</title><rect x="3.3908%" y="325" width="0.0121%" height="15" fill="rgb(207,117,47)" fg:x="2184771585" fg:w="7803198"/><text x="3.6408%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (36,983,313 samples, 0.06%)</title><rect x="3.5115%" y="293" width="0.0574%" height="15" fill="rgb(249,43,39)" fg:x="2262542844" fg:w="36983313"/><text x="3.7615%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned (8,093,495 samples, 0.01%)</title><rect x="3.7030%" y="261" width="0.0126%" height="15" fill="rgb(209,38,44)" fg:x="2385919670" fg:w="8093495"/><text x="3.9530%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,521,313 samples, 0.02%)</title><rect x="3.7156%" y="261" width="0.0194%" height="15" fill="rgb(236,212,23)" fg:x="2394013165" fg:w="12521313"/><text x="3.9656%" y="271.50"></text></g><g><title>_int_malloc (124,155,554 samples, 0.19%)</title><rect x="3.8037%" y="213" width="0.1927%" height="15" fill="rgb(242,79,21)" fg:x="2450837588" fg:w="124155554"/><text x="4.0537%" y="223.50"></text></g><g><title>unlink_chunk (8,384,764 samples, 0.01%)</title><rect x="3.9834%" y="197" width="0.0130%" height="15" fill="rgb(211,96,35)" fg:x="2566608378" fg:w="8384764"/><text x="4.2334%" y="207.50"></text></g><g><title>__GI___libc_malloc (148,423,377 samples, 0.23%)</title><rect x="3.7724%" y="229" width="0.2304%" height="15" fill="rgb(253,215,40)" fg:x="2430626426" fg:w="148423377"/><text x="4.0224%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (225,835,797 samples, 0.35%)</title><rect x="3.6650%" y="277" width="0.3505%" height="15" fill="rgb(211,81,21)" fg:x="2361430565" fg:w="225835797"/><text x="3.9150%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (180,731,884 samples, 0.28%)</title><rect x="3.7350%" y="261" width="0.2805%" height="15" fill="rgb(208,190,38)" fg:x="2406534478" fg:w="180731884"/><text x="3.9850%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (168,652,088 samples, 0.26%)</title><rect x="3.7537%" y="245" width="0.2618%" height="15" fill="rgb(235,213,38)" fg:x="2418614274" fg:w="168652088"/><text x="4.0037%" y="255.50"></text></g><g><title>__rust_alloc (8,216,559 samples, 0.01%)</title><rect x="4.0027%" y="229" width="0.0128%" height="15" fill="rgb(237,122,38)" fg:x="2579049803" fg:w="8216559"/><text x="4.2527%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (476,324,910 samples, 0.74%)</title><rect x="3.4029%" y="325" width="0.7393%" height="15" fill="rgb(244,218,35)" fg:x="2192574783" fg:w="476324910"/><text x="3.6529%" y="335.50"></text></g><g><title>core::fmt::write (443,537,187 samples, 0.69%)</title><rect x="3.4538%" y="309" width="0.6884%" height="15" fill="rgb(240,68,47)" fg:x="2225362506" fg:w="443537187"/><text x="3.7038%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (369,373,536 samples, 0.57%)</title><rect x="3.5689%" y="293" width="0.5733%" height="15" fill="rgb(210,16,53)" fg:x="2299526157" fg:w="369373536"/><text x="3.8189%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral (81,633,331 samples, 0.13%)</title><rect x="4.0155%" y="277" width="0.1267%" height="15" fill="rgb(235,124,12)" fg:x="2587266362" fg:w="81633331"/><text x="4.2655%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (32,394,117 samples, 0.05%)</title><rect x="4.0919%" y="261" width="0.0503%" height="15" fill="rgb(224,169,11)" fg:x="2636505576" fg:w="32394117"/><text x="4.3419%" y="271.50"></text></g><g><title>__GI_memcpy (8,240,021 samples, 0.01%)</title><rect x="4.2117%" y="261" width="0.0128%" height="15" fill="rgb(250,166,2)" fg:x="2713707522" fg:w="8240021"/><text x="4.4617%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (8,240,021 samples, 0.01%)</title><rect x="4.2117%" y="245" width="0.0128%" height="15" fill="rgb(242,216,29)" fg:x="2713707522" fg:w="8240021"/><text x="4.4617%" y="255.50"></text></g><g><title>malloc_consolidate (154,275,509 samples, 0.24%)</title><rect x="4.2759%" y="245" width="0.2394%" height="15" fill="rgb(230,116,27)" fg:x="2755069501" fg:w="154275509"/><text x="4.5259%" y="255.50"></text></g><g><title>unlink_chunk (68,534,046 samples, 0.11%)</title><rect x="4.4090%" y="229" width="0.1064%" height="15" fill="rgb(228,99,48)" fg:x="2840810964" fg:w="68534046"/><text x="4.6590%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (244,496,290 samples, 0.38%)</title><rect x="4.1422%" y="325" width="0.3795%" height="15" fill="rgb(253,11,6)" fg:x="2668899693" fg:w="244496290"/><text x="4.3922%" y="335.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (228,604,753 samples, 0.35%)</title><rect x="4.1669%" y="309" width="0.3548%" height="15" fill="rgb(247,143,39)" fg:x="2684791230" fg:w="228604753"/><text x="4.4169%" y="319.50"></text></g><g><title>__GI___libc_realloc (220,301,155 samples, 0.34%)</title><rect x="4.1797%" y="293" width="0.3419%" height="15" fill="rgb(236,97,10)" fg:x="2693094828" fg:w="220301155"/><text x="4.4297%" y="303.50"></text></g><g><title>_int_realloc (212,141,678 samples, 0.33%)</title><rect x="4.1924%" y="277" width="0.3292%" height="15" fill="rgb(233,208,19)" fg:x="2701254305" fg:w="212141678"/><text x="4.4424%" y="287.50"></text></g><g><title>_int_malloc (187,349,604 samples, 0.29%)</title><rect x="4.2309%" y="261" width="0.2908%" height="15" fill="rgb(216,164,2)" fg:x="2726046379" fg:w="187349604"/><text x="4.4809%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (37,356,039 samples, 0.06%)</title><rect x="6.0742%" y="277" width="0.0580%" height="15" fill="rgb(220,129,5)" fg:x="3913720042" fg:w="37356039"/><text x="6.3242%" y="287.50"></text></g><g><title>__GI___libc_malloc (8,418,409 samples, 0.01%)</title><rect x="6.1322%" y="277" width="0.0131%" height="15" fill="rgb(242,17,10)" fg:x="3951076081" fg:w="8418409"/><text x="6.3822%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (51,124,469 samples, 0.08%)</title><rect x="6.1516%" y="277" width="0.0793%" height="15" fill="rgb(242,107,0)" fg:x="3963596690" fg:w="51124469"/><text x="6.4016%" y="287.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (812,630,026 samples, 1.26%)</title><rect x="4.9760%" y="293" width="1.2612%" height="15" fill="rgb(251,28,31)" fg:x="3206153998" fg:w="812630026"/><text x="5.2260%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (41,786,932 samples, 0.06%)</title><rect x="6.2372%" y="293" width="0.0649%" height="15" fill="rgb(233,223,10)" fg:x="4018784024" fg:w="41786932"/><text x="6.4872%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,641,647 samples, 0.02%)</title><rect x="6.3766%" y="277" width="0.0196%" height="15" fill="rgb(215,21,27)" fg:x="4108605915" fg:w="12641647"/><text x="6.6266%" y="287.50"></text></g><g><title>__GI___libc_free (12,508,964 samples, 0.02%)</title><rect x="6.3963%" y="277" width="0.0194%" height="15" fill="rgb(232,23,21)" fg:x="4121247562" fg:w="12508964"/><text x="6.6463%" y="287.50"></text></g><g><title>_int_free (8,301,551 samples, 0.01%)</title><rect x="6.4028%" y="261" width="0.0129%" height="15" fill="rgb(244,5,23)" fg:x="4125454975" fg:w="8301551"/><text x="6.6528%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (1,073,882,910 samples, 1.67%)</title><rect x="4.7816%" y="309" width="1.6667%" height="15" fill="rgb(226,81,46)" fg:x="3080892444" fg:w="1073882910"/><text x="5.0316%" y="319.50"></text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (94,204,398 samples, 0.15%)</title><rect x="6.3021%" y="293" width="0.1462%" height="15" fill="rgb(247,70,30)" fg:x="4060570956" fg:w="94204398"/><text x="6.5521%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (21,018,828 samples, 0.03%)</title><rect x="6.4157%" y="277" width="0.0326%" height="15" fill="rgb(212,68,19)" fg:x="4133756526" fg:w="21018828"/><text x="6.6657%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69,906,587 samples, 0.11%)</title><rect x="6.4483%" y="309" width="0.1085%" height="15" fill="rgb(240,187,13)" fg:x="4154775354" fg:w="69906587"/><text x="6.6983%" y="319.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (49,910,144 samples, 0.08%)</title><rect x="6.5568%" y="309" width="0.0775%" height="15" fill="rgb(223,113,26)" fg:x="4224681941" fg:w="49910144"/><text x="6.8068%" y="319.50"></text></g><g><title>__GI___libc_malloc (8,371,649 samples, 0.01%)</title><rect x="17.4069%" y="277" width="0.0130%" height="15" fill="rgb(206,192,2)" fg:x="11215642864" fg:w="8371649"/><text x="17.6569%" y="287.50"></text></g><g><title>tcache_get (8,371,649 samples, 0.01%)</title><rect x="17.4069%" y="261" width="0.0130%" height="15" fill="rgb(241,108,4)" fg:x="11215642864" fg:w="8371649"/><text x="17.6569%" y="271.50"></text></g><g><title>tcache_get_n (8,371,649 samples, 0.01%)</title><rect x="17.4069%" y="245" width="0.0130%" height="15" fill="rgb(247,173,49)" fg:x="11215642864" fg:w="8371649"/><text x="17.6569%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned (8,377,725 samples, 0.01%)</title><rect x="17.8928%" y="197" width="0.0130%" height="15" fill="rgb(224,114,35)" fg:x="11528695613" fg:w="8377725"/><text x="18.1428%" y="207.50"></text></g><g><title>__GI_memcpy (258,614,367 samples, 0.40%)</title><rect x="17.8863%" y="213" width="0.4014%" height="15" fill="rgb(245,159,27)" fg:x="11524510373" fg:w="258614367"/><text x="18.1363%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned_erms (246,051,402 samples, 0.38%)</title><rect x="17.9058%" y="197" width="0.3819%" height="15" fill="rgb(245,172,44)" fg:x="11537073338" fg:w="246051402"/><text x="18.1558%" y="207.50"></text></g><g><title>_int_free (66,852,599 samples, 0.10%)</title><rect x="18.2876%" y="213" width="0.1038%" height="15" fill="rgb(236,23,11)" fg:x="11783124740" fg:w="66852599"/><text x="18.5376%" y="223.50"></text></g><g><title>tcache_put (8,215,404 samples, 0.01%)</title><rect x="18.3787%" y="197" width="0.0128%" height="15" fill="rgb(205,117,38)" fg:x="11841761935" fg:w="8215404"/><text x="18.6287%" y="207.50"></text></g><g><title>_int_free_merge_chunk (75,323,707 samples, 0.12%)</title><rect x="18.3914%" y="213" width="0.1169%" height="15" fill="rgb(237,72,25)" fg:x="11849977339" fg:w="75323707"/><text x="18.6414%" y="223.50"></text></g><g><title>_int_free_create_chunk (58,682,079 samples, 0.09%)</title><rect x="18.4172%" y="197" width="0.0911%" height="15" fill="rgb(244,70,9)" fg:x="11866618967" fg:w="58682079"/><text x="18.6672%" y="207.50"></text></g><g><title>unlink_chunk (12,659,219 samples, 0.02%)</title><rect x="18.4887%" y="181" width="0.0196%" height="15" fill="rgb(217,125,39)" fg:x="11912641827" fg:w="12659219"/><text x="18.7387%" y="191.50"></text></g><g><title>malloc_consolidate (12,373,525 samples, 0.02%)</title><rect x="19.0223%" y="197" width="0.0192%" height="15" fill="rgb(235,36,10)" fg:x="12256446529" fg:w="12373525"/><text x="19.2723%" y="207.50"></text></g><g><title>_int_malloc (439,508,973 samples, 0.68%)</title><rect x="18.5083%" y="213" width="0.6821%" height="15" fill="rgb(251,123,47)" fg:x="11925301046" fg:w="439508973"/><text x="18.7583%" y="223.50"></text></g><g><title>unlink_chunk (95,989,965 samples, 0.15%)</title><rect x="19.0415%" y="197" width="0.1490%" height="15" fill="rgb(221,13,13)" fg:x="12268820054" fg:w="95989965"/><text x="19.2915%" y="207.50"></text></g><g><title>__GI___libc_realloc (986,130,474 samples, 1.53%)</title><rect x="17.6664%" y="245" width="1.5305%" height="15" fill="rgb(238,131,9)" fg:x="11382846993" fg:w="986130474"/><text x="17.9164%" y="255.50"></text></g><g><title>_int_realloc (911,020,309 samples, 1.41%)</title><rect x="17.7830%" y="229" width="1.4139%" height="15" fill="rgb(211,50,8)" fg:x="11457957158" fg:w="911020309"/><text x="18.0330%" y="239.50"></text></g><g><title>__rdl_realloc (8,373,819 samples, 0.01%)</title><rect x="19.1969%" y="245" width="0.0130%" height="15" fill="rgb(245,182,24)" fg:x="12368977467" fg:w="8373819"/><text x="19.4469%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5,380,043,850 samples, 8.35%)</title><rect x="10.8730%" y="293" width="8.3499%" height="15" fill="rgb(242,14,37)" fg:x="7005712324" fg:w="5380043850"/><text x="11.1230%" y="303.50">&lt;alloc::vec:..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,157,559,764 samples, 1.80%)</title><rect x="17.4264%" y="277" width="1.7966%" height="15" fill="rgb(246,228,12)" fg:x="11228196410" fg:w="1157559764"/><text x="17.6764%" y="287.50">a..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (1,069,675,326 samples, 1.66%)</title><rect x="17.5628%" y="261" width="1.6602%" height="15" fill="rgb(213,55,15)" fg:x="11316080848" fg:w="1069675326"/><text x="17.8128%" y="271.50"></text></g><g><title>__rust_realloc (8,404,888 samples, 0.01%)</title><rect x="19.2099%" y="245" width="0.0130%" height="15" fill="rgb(209,9,3)" fg:x="12377351286" fg:w="8404888"/><text x="19.4599%" y="255.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (12,469,145 samples, 0.02%)</title><rect x="19.2229%" y="293" width="0.0194%" height="15" fill="rgb(230,59,30)" fg:x="12385756174" fg:w="12469145"/><text x="19.4729%" y="303.50"></text></g><g><title>_int_free (25,119,953 samples, 0.04%)</title><rect x="19.2745%" y="277" width="0.0390%" height="15" fill="rgb(209,121,21)" fg:x="12418997284" fg:w="25119953"/><text x="19.5245%" y="287.50"></text></g><g><title>__GI___libc_free (79,173,912 samples, 0.12%)</title><rect x="19.2423%" y="293" width="0.1229%" height="15" fill="rgb(220,109,13)" fg:x="12398225319" fg:w="79173912"/><text x="19.4923%" y="303.50"></text></g><g><title>_int_free_merge_chunk (33,281,994 samples, 0.05%)</title><rect x="19.3135%" y="277" width="0.0517%" height="15" fill="rgb(232,18,1)" fg:x="12444117237" fg:w="33281994"/><text x="19.5635%" y="287.50"></text></g><g><title>_int_free_create_chunk (24,860,459 samples, 0.04%)</title><rect x="19.3266%" y="261" width="0.0386%" height="15" fill="rgb(215,41,42)" fg:x="12452538772" fg:w="24860459"/><text x="19.5766%" y="271.50"></text></g><g><title>unlink_chunk (12,305,863 samples, 0.02%)</title><rect x="19.3461%" y="245" width="0.0191%" height="15" fill="rgb(224,123,36)" fg:x="12465093368" fg:w="12305863"/><text x="19.5961%" y="255.50"></text></g><g><title>malloc_consolidate (12,204,224 samples, 0.02%)</title><rect x="19.6047%" y="261" width="0.0189%" height="15" fill="rgb(240,125,3)" fg:x="12631747852" fg:w="12204224"/><text x="19.8547%" y="271.50"></text></g><g><title>_int_malloc (149,570,872 samples, 0.23%)</title><rect x="19.4043%" y="277" width="0.2321%" height="15" fill="rgb(205,98,50)" fg:x="12502593915" fg:w="149570872"/><text x="19.6543%" y="287.50"></text></g><g><title>unlink_chunk (8,212,711 samples, 0.01%)</title><rect x="19.6237%" y="261" width="0.0127%" height="15" fill="rgb(205,185,37)" fg:x="12643952076" fg:w="8212711"/><text x="19.8737%" y="271.50"></text></g><g><title>__GI___libc_malloc (183,119,356 samples, 0.28%)</title><rect x="19.3652%" y="293" width="0.2842%" height="15" fill="rgb(238,207,15)" fg:x="12477399231" fg:w="183119356"/><text x="19.6152%" y="303.50"></text></g><g><title>__rust_alloc (12,679,762 samples, 0.02%)</title><rect x="19.6554%" y="293" width="0.0197%" height="15" fill="rgb(213,199,42)" fg:x="12664425812" fg:w="12679762"/><text x="19.9054%" y="303.50"></text></g><g><title>__GI___libc_free (25,165,247 samples, 0.04%)</title><rect x="19.7076%" y="277" width="0.0391%" height="15" fill="rgb(235,201,11)" fg:x="12698002726" fg:w="25165247"/><text x="19.9576%" y="287.50"></text></g><g><title>_int_free_merge_chunk (12,605,636 samples, 0.02%)</title><rect x="19.7271%" y="261" width="0.0196%" height="15" fill="rgb(207,46,11)" fg:x="12710562337" fg:w="12605636"/><text x="19.9771%" y="271.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h4a9920109eef0ea0E.llvm.6231558932131486975 (11,845,146,044 samples, 18.38%)</title><rect x="6.6343%" y="309" width="18.3839%" height="15" fill="rgb(241,35,35)" fg:x="4274592085" fg:w="11845146044"/><text x="6.8843%" y="319.50">_ZN7lb_apis15del_pol_batched1..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3,438,463,267 samples, 5.34%)</title><rect x="19.6816%" y="293" width="5.3366%" height="15" fill="rgb(243,32,47)" fg:x="12681274862" fg:w="3438463267"/><text x="19.9316%" y="303.50">alloc::..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::RRPickerPicker&gt; (3,396,570,156 samples, 5.27%)</title><rect x="19.7466%" y="277" width="5.2715%" height="15" fill="rgb(247,202,23)" fg:x="12723167973" fg:w="3396570156"/><text x="19.9966%" y="287.50">core::..</text></g><g><title>__GI___libc_free (29,141,797 samples, 0.05%)</title><rect x="25.0182%" y="309" width="0.0452%" height="15" fill="rgb(219,102,11)" fg:x="16119738129" fg:w="29141797"/><text x="25.2682%" y="319.50"></text></g><g><title>_int_free (29,141,797 samples, 0.05%)</title><rect x="25.0182%" y="293" width="0.0452%" height="15" fill="rgb(243,110,44)" fg:x="16119738129" fg:w="29141797"/><text x="25.2682%" y="303.50"></text></g><g><title>__GI___libc_malloc (25,149,407 samples, 0.04%)</title><rect x="25.2639%" y="261" width="0.0390%" height="15" fill="rgb(222,74,54)" fg:x="16278054631" fg:w="25149407"/><text x="25.5139%" y="271.50"></text></g><g><title>tcache_get (12,642,917 samples, 0.02%)</title><rect x="25.2833%" y="245" width="0.0196%" height="15" fill="rgb(216,99,12)" fg:x="16290561121" fg:w="12642917"/><text x="25.5333%" y="255.50"></text></g><g><title>tcache_get_n (12,642,917 samples, 0.02%)</title><rect x="25.2833%" y="229" width="0.0196%" height="15" fill="rgb(226,22,26)" fg:x="16290561121" fg:w="12642917"/><text x="25.5333%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc6f2942aea7926dbE.llvm.10499638702280511522 (54,409,060 samples, 0.08%)</title><rect x="25.2445%" y="277" width="0.0844%" height="15" fill="rgb(217,163,10)" fg:x="16265551665" fg:w="54409060"/><text x="25.4945%" y="287.50"></text></g><g><title>__rust_alloc (12,617,810 samples, 0.02%)</title><rect x="25.3093%" y="261" width="0.0196%" height="15" fill="rgb(213,25,53)" fg:x="16307342915" fg:w="12617810"/><text x="25.5593%" y="271.50"></text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::set (187,737,897 samples, 0.29%)</title><rect x="25.0634%" y="309" width="0.2914%" height="15" fill="rgb(252,105,26)" fg:x="16148879926" fg:w="187737897"/><text x="25.3134%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (162,662,898 samples, 0.25%)</title><rect x="25.1023%" y="293" width="0.2525%" height="15" fill="rgb(220,39,43)" fg:x="16173954925" fg:w="162662898"/><text x="25.3523%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,657,098 samples, 0.03%)</title><rect x="25.3289%" y="277" width="0.0259%" height="15" fill="rgb(229,68,48)" fg:x="16319960725" fg:w="16657098"/><text x="25.5789%" y="287.50"></text></g><g><title>rand::rng::Rng::gen_range (20,877,413 samples, 0.03%)</title><rect x="25.3548%" y="309" width="0.0324%" height="15" fill="rgb(252,8,32)" fg:x="16336617823" fg:w="20877413"/><text x="25.6048%" y="319.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (8,430,586 samples, 0.01%)</title><rect x="25.3741%" y="293" width="0.0131%" height="15" fill="rgb(223,20,43)" fg:x="16349064650" fg:w="8430586"/><text x="25.6241%" y="303.50"></text></g><g><title>bencher::Bencher::iter (13,452,531,050 samples, 20.88%)</title><rect x="4.5216%" y="325" width="20.8786%" height="15" fill="rgb(229,81,49)" fg:x="2913395983" fg:w="13452531050"/><text x="4.7716%" y="335.50">bencher::Bencher::iter</text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33,160,421 samples, 0.05%)</title><rect x="25.4003%" y="309" width="0.0515%" height="15" fill="rgb(236,28,36)" fg:x="16365927033" fg:w="33160421"/><text x="25.6503%" y="319.50"></text></g><g><title>__GI___libc_free (37,325,268 samples, 0.06%)</title><rect x="25.5397%" y="277" width="0.0579%" height="15" fill="rgb(249,185,26)" fg:x="16455786067" fg:w="37325268"/><text x="25.7897%" y="287.50"></text></g><g><title>_int_free (24,742,081 samples, 0.04%)</title><rect x="25.5592%" y="261" width="0.0384%" height="15" fill="rgb(249,174,33)" fg:x="16468369254" fg:w="24742081"/><text x="25.8092%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (106,492,530 samples, 0.17%)</title><rect x="25.4959%" y="293" width="0.1653%" height="15" fill="rgb(233,201,37)" fg:x="16427527228" fg:w="106492530"/><text x="25.7459%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (40,908,423 samples, 0.06%)</title><rect x="25.5976%" y="277" width="0.0635%" height="15" fill="rgb(221,78,26)" fg:x="16493111335" fg:w="40908423"/><text x="25.8476%" y="287.50"></text></g><g><title>_int_free (36,730,991 samples, 0.06%)</title><rect x="25.6864%" y="277" width="0.0570%" height="15" fill="rgb(250,127,30)" fg:x="16550320646" fg:w="36730991"/><text x="25.9364%" y="287.50"></text></g><g><title>_int_free_maybe_consolidate (130,509,688 samples, 0.20%)</title><rect x="25.7434%" y="277" width="0.2026%" height="15" fill="rgb(230,49,44)" fg:x="16587051637" fg:w="130509688"/><text x="25.9934%" y="287.50"></text></g><g><title>malloc_consolidate (130,509,688 samples, 0.20%)</title><rect x="25.7434%" y="261" width="0.2026%" height="15" fill="rgb(229,67,23)" fg:x="16587051637" fg:w="130509688"/><text x="25.9934%" y="271.50"></text></g><g><title>unlink_chunk (45,780,509 samples, 0.07%)</title><rect x="25.8749%" y="245" width="0.0711%" height="15" fill="rgb(249,83,47)" fg:x="16671780816" fg:w="45780509"/><text x="26.1249%" y="255.50"></text></g><g><title>__GI___libc_free (187,501,588 samples, 0.29%)</title><rect x="25.6611%" y="293" width="0.2910%" height="15" fill="rgb(215,43,3)" fg:x="16534019758" fg:w="187501588"/><text x="25.9111%" y="303.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h6fd88c756eedc8fdE.llvm.13391218907786022700 (342,933,723 samples, 0.53%)</title><rect x="25.4517%" y="309" width="0.5322%" height="15" fill="rgb(238,154,13)" fg:x="16399087454" fg:w="342933723"/><text x="25.7017%" y="319.50"></text></g><g><title>__rdl_dealloc (20,499,831 samples, 0.03%)</title><rect x="25.9521%" y="293" width="0.0318%" height="15" fill="rgb(219,56,2)" fg:x="16721521346" fg:w="20499831"/><text x="26.2021%" y="303.50"></text></g><g><title>_int_free_maybe_consolidate (49,406,453 samples, 0.08%)</title><rect x="25.9840%" y="293" width="0.0767%" height="15" fill="rgb(233,0,4)" fg:x="16742021177" fg:w="49406453"/><text x="26.2340%" y="303.50"></text></g><g><title>malloc_consolidate (49,406,453 samples, 0.08%)</title><rect x="25.9840%" y="277" width="0.0767%" height="15" fill="rgb(235,30,7)" fg:x="16742021177" fg:w="49406453"/><text x="26.2340%" y="287.50"></text></g><g><title>unlink_chunk (16,481,193 samples, 0.03%)</title><rect x="26.0351%" y="261" width="0.0256%" height="15" fill="rgb(250,79,13)" fg:x="16774946437" fg:w="16481193"/><text x="26.2851%" y="271.50"></text></g><g><title>__GI___libc_free (53,622,515 samples, 0.08%)</title><rect x="25.9840%" y="309" width="0.0832%" height="15" fill="rgb(211,146,34)" fg:x="16742021177" fg:w="53622515"/><text x="26.2340%" y="319.50"></text></g><g><title>lb_apis::batched (16,759,682,292 samples, 26.01%)</title><rect x="0.0620%" y="341" width="26.0114%" height="15" fill="rgb(228,22,38)" fg:x="39953759" fg:w="16759682292"/><text x="0.3120%" y="351.50">lb_apis::batched</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::DelegatingPolicy&gt; (433,709,018 samples, 0.67%)</title><rect x="25.4003%" y="325" width="0.6731%" height="15" fill="rgb(235,168,5)" fg:x="16365927033" fg:w="433709018"/><text x="25.6503%" y="335.50"></text></g><g><title>[unknown] (108,491,813 samples, 0.17%)</title><rect x="26.7820%" y="245" width="0.1684%" height="15" fill="rgb(221,155,16)" fg:x="17256225732" fg:w="108491813"/><text x="27.0320%" y="255.50"></text></g><g><title>[unknown] (100,588,707 samples, 0.16%)</title><rect x="26.7943%" y="229" width="0.1561%" height="15" fill="rgb(215,215,53)" fg:x="17264128838" fg:w="100588707"/><text x="27.0443%" y="239.50"></text></g><g><title>[unknown] (100,588,707 samples, 0.16%)</title><rect x="26.7943%" y="213" width="0.1561%" height="15" fill="rgb(223,4,10)" fg:x="17264128838" fg:w="100588707"/><text x="27.0443%" y="223.50"></text></g><g><title>[unknown] (100,588,707 samples, 0.16%)</title><rect x="26.7943%" y="197" width="0.1561%" height="15" fill="rgb(234,103,6)" fg:x="17264128838" fg:w="100588707"/><text x="27.0443%" y="207.50"></text></g><g><title>[unknown] (100,588,707 samples, 0.16%)</title><rect x="26.7943%" y="181" width="0.1561%" height="15" fill="rgb(227,97,0)" fg:x="17264128838" fg:w="100588707"/><text x="27.0443%" y="191.50"></text></g><g><title>[unknown] (77,637,383 samples, 0.12%)</title><rect x="26.8299%" y="165" width="0.1205%" height="15" fill="rgb(234,150,53)" fg:x="17287080162" fg:w="77637383"/><text x="27.0799%" y="175.50"></text></g><g><title>[unknown] (73,611,470 samples, 0.11%)</title><rect x="26.8361%" y="149" width="0.1142%" height="15" fill="rgb(228,201,54)" fg:x="17291106075" fg:w="73611470"/><text x="27.0861%" y="159.50"></text></g><g><title>[unknown] (65,947,776 samples, 0.10%)</title><rect x="26.8480%" y="133" width="0.1024%" height="15" fill="rgb(222,22,37)" fg:x="17298769769" fg:w="65947776"/><text x="27.0980%" y="143.50"></text></g><g><title>[unknown] (62,033,808 samples, 0.10%)</title><rect x="26.8541%" y="117" width="0.0963%" height="15" fill="rgb(237,53,32)" fg:x="17302683737" fg:w="62033808"/><text x="27.1041%" y="127.50"></text></g><g><title>[unknown] (54,676,266 samples, 0.08%)</title><rect x="26.8655%" y="101" width="0.0849%" height="15" fill="rgb(233,25,53)" fg:x="17310041279" fg:w="54676266"/><text x="27.1155%" y="111.50"></text></g><g><title>[unknown] (42,773,632 samples, 0.07%)</title><rect x="26.8840%" y="85" width="0.0664%" height="15" fill="rgb(210,40,34)" fg:x="17321943913" fg:w="42773632"/><text x="27.1340%" y="95.50"></text></g><g><title>malloc_consolidate (30,078,767 samples, 0.05%)</title><rect x="26.9504%" y="245" width="0.0467%" height="15" fill="rgb(241,220,44)" fg:x="17364717545" fg:w="30078767"/><text x="27.2004%" y="255.50"></text></g><g><title>unlink_chunk (11,809,610 samples, 0.02%)</title><rect x="26.9787%" y="229" width="0.0183%" height="15" fill="rgb(235,28,35)" fg:x="17382986702" fg:w="11809610"/><text x="27.2287%" y="239.50"></text></g><g><title>_int_malloc (248,752,655 samples, 0.39%)</title><rect x="26.6165%" y="261" width="0.3861%" height="15" fill="rgb(210,56,17)" fg:x="17149609402" fg:w="248752655"/><text x="26.8665%" y="271.50"></text></g><g><title>__GI___libc_malloc (272,350,709 samples, 0.42%)</title><rect x="26.5865%" y="277" width="0.4227%" height="15" fill="rgb(224,130,29)" fg:x="17130264334" fg:w="272350709"/><text x="26.8365%" y="287.50"></text></g><g><title>__rdl_alloc (11,630,379 samples, 0.02%)</title><rect x="27.0092%" y="277" width="0.0181%" height="15" fill="rgb(235,212,8)" fg:x="17402615043" fg:w="11630379"/><text x="27.2592%" y="287.50"></text></g><g><title>__rust_alloc (7,770,943 samples, 0.01%)</title><rect x="27.0273%" y="277" width="0.0121%" height="15" fill="rgb(223,33,50)" fg:x="17414245422" fg:w="7770943"/><text x="27.2773%" y="287.50"></text></g><g><title>&lt;lb_apis::StubChannelControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel (400,565,057 samples, 0.62%)</title><rect x="26.4531%" y="293" width="0.6217%" height="15" fill="rgb(219,149,13)" fg:x="17044277450" fg:w="400565057"/><text x="26.7031%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (22,826,142 samples, 0.04%)</title><rect x="27.0393%" y="277" width="0.0354%" height="15" fill="rgb(250,156,29)" fg:x="17422016365" fg:w="22826142"/><text x="27.2893%" y="287.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (22,826,142 samples, 0.04%)</title><rect x="27.0393%" y="261" width="0.0354%" height="15" fill="rgb(216,193,19)" fg:x="17422016365" fg:w="22826142"/><text x="27.2893%" y="271.50"></text></g><g><title>__GI___libc_realloc (22,826,142 samples, 0.04%)</title><rect x="27.0393%" y="245" width="0.0354%" height="15" fill="rgb(216,135,14)" fg:x="17422016365" fg:w="22826142"/><text x="27.2893%" y="255.50"></text></g><g><title>_int_realloc (22,826,142 samples, 0.04%)</title><rect x="27.0393%" y="229" width="0.0354%" height="15" fill="rgb(241,47,5)" fg:x="17422016365" fg:w="22826142"/><text x="27.2893%" y="239.50"></text></g><g><title>_int_malloc (18,861,130 samples, 0.03%)</title><rect x="27.0455%" y="213" width="0.0293%" height="15" fill="rgb(233,42,35)" fg:x="17425981377" fg:w="18861130"/><text x="27.2955%" y="223.50"></text></g><g><title>malloc_consolidate (14,598,001 samples, 0.02%)</title><rect x="27.0521%" y="197" width="0.0227%" height="15" fill="rgb(231,13,6)" fg:x="17430244506" fg:w="14598001"/><text x="27.3021%" y="207.50"></text></g><g><title>unlink_chunk (11,562,347 samples, 0.02%)</title><rect x="27.0568%" y="181" width="0.0179%" height="15" fill="rgb(207,181,40)" fg:x="17433280160" fg:w="11562347"/><text x="27.3068%" y="191.50"></text></g><g><title>_int_free (23,433,546 samples, 0.04%)</title><rect x="27.0994%" y="277" width="0.0364%" height="15" fill="rgb(254,173,49)" fg:x="17460716682" fg:w="23433546"/><text x="27.3494%" y="287.50"></text></g><g><title>__GI___libc_free (43,324,388 samples, 0.07%)</title><rect x="27.0747%" y="293" width="0.0672%" height="15" fill="rgb(221,1,38)" fg:x="17444842507" fg:w="43324388"/><text x="27.3247%" y="303.50"></text></g><g><title>_int_malloc (22,217,085 samples, 0.03%)</title><rect x="27.1482%" y="277" width="0.0345%" height="15" fill="rgb(206,124,46)" fg:x="17492144853" fg:w="22217085"/><text x="27.3982%" y="287.50"></text></g><g><title>tcache_put (11,780,461 samples, 0.02%)</title><rect x="27.1644%" y="261" width="0.0183%" height="15" fill="rgb(249,21,11)" fg:x="17502581477" fg:w="11780461"/><text x="27.4144%" y="271.50"></text></g><g><title>__GI___libc_malloc (29,213,694 samples, 0.05%)</title><rect x="27.1420%" y="293" width="0.0453%" height="15" fill="rgb(222,201,40)" fg:x="17488166895" fg:w="29213694"/><text x="27.3920%" y="303.50"></text></g><g><title>__rdl_dealloc (8,264,586 samples, 0.01%)</title><rect x="27.1935%" y="293" width="0.0128%" height="15" fill="rgb(235,61,29)" fg:x="17521343563" fg:w="8264586"/><text x="27.4435%" y="303.50"></text></g><g><title>[unknown] (36,718,442 samples, 0.06%)</title><rect x="27.4307%" y="229" width="0.0570%" height="15" fill="rgb(219,207,3)" fg:x="17674194991" fg:w="36718442"/><text x="27.6807%" y="239.50"></text></g><g><title>[unknown] (36,718,442 samples, 0.06%)</title><rect x="27.4307%" y="213" width="0.0570%" height="15" fill="rgb(222,56,46)" fg:x="17674194991" fg:w="36718442"/><text x="27.6807%" y="223.50"></text></g><g><title>[unknown] (33,639,049 samples, 0.05%)</title><rect x="27.4355%" y="197" width="0.0522%" height="15" fill="rgb(239,76,54)" fg:x="17677274384" fg:w="33639049"/><text x="27.6855%" y="207.50"></text></g><g><title>[unknown] (33,639,049 samples, 0.05%)</title><rect x="27.4355%" y="181" width="0.0522%" height="15" fill="rgb(231,124,27)" fg:x="17677274384" fg:w="33639049"/><text x="27.6855%" y="191.50"></text></g><g><title>[unknown] (33,639,049 samples, 0.05%)</title><rect x="27.4355%" y="165" width="0.0522%" height="15" fill="rgb(249,195,6)" fg:x="17677274384" fg:w="33639049"/><text x="27.6855%" y="175.50"></text></g><g><title>[unknown] (23,352,552 samples, 0.04%)</title><rect x="27.4515%" y="149" width="0.0362%" height="15" fill="rgb(237,174,47)" fg:x="17687560881" fg:w="23352552"/><text x="27.7015%" y="159.50"></text></g><g><title>[unknown] (19,653,214 samples, 0.03%)</title><rect x="27.4572%" y="133" width="0.0305%" height="15" fill="rgb(206,201,31)" fg:x="17691260219" fg:w="19653214"/><text x="27.7072%" y="143.50"></text></g><g><title>[unknown] (19,653,214 samples, 0.03%)</title><rect x="27.4572%" y="117" width="0.0305%" height="15" fill="rgb(231,57,52)" fg:x="17691260219" fg:w="19653214"/><text x="27.7072%" y="127.50"></text></g><g><title>[unknown] (19,653,214 samples, 0.03%)</title><rect x="27.4572%" y="101" width="0.0305%" height="15" fill="rgb(248,177,22)" fg:x="17691260219" fg:w="19653214"/><text x="27.7072%" y="111.50"></text></g><g><title>[unknown] (19,653,214 samples, 0.03%)</title><rect x="27.4572%" y="85" width="0.0305%" height="15" fill="rgb(215,211,37)" fg:x="17691260219" fg:w="19653214"/><text x="27.7072%" y="95.50"></text></g><g><title>[unknown] (11,931,830 samples, 0.02%)</title><rect x="27.4692%" y="69" width="0.0185%" height="15" fill="rgb(241,128,51)" fg:x="17698981603" fg:w="11931830"/><text x="27.7192%" y="79.50"></text></g><g><title>malloc_consolidate (6,570,893 samples, 0.01%)</title><rect x="27.4877%" y="229" width="0.0102%" height="15" fill="rgb(227,165,31)" fg:x="17710913433" fg:w="6570893"/><text x="27.7377%" y="239.50"></text></g><g><title>unlink_chunk (6,570,893 samples, 0.01%)</title><rect x="27.4877%" y="213" width="0.0102%" height="15" fill="rgb(228,167,24)" fg:x="17710913433" fg:w="6570893"/><text x="27.7377%" y="223.50"></text></g><g><title>_int_malloc (47,293,225 samples, 0.07%)</title><rect x="27.4307%" y="245" width="0.0734%" height="15" fill="rgb(228,143,12)" fg:x="17674194991" fg:w="47293225"/><text x="27.6807%" y="255.50"></text></g><g><title>__GI___libc_malloc (55,084,936 samples, 0.09%)</title><rect x="27.4250%" y="261" width="0.0855%" height="15" fill="rgb(249,149,8)" fg:x="17670520594" fg:w="55084936"/><text x="27.6750%" y="271.50"></text></g><g><title>__memset_avx2_unaligned (6,665,079 samples, 0.01%)</title><rect x="27.5105%" y="261" width="0.0103%" height="15" fill="rgb(243,35,44)" fg:x="17725605530" fg:w="6665079"/><text x="27.7605%" y="271.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h368aaacc3eb2e184E.llvm.9464877178135716140 (171,262,880 samples, 0.27%)</title><rect x="27.3083%" y="277" width="0.2658%" height="15" fill="rgb(246,89,9)" fg:x="17595348392" fg:w="171262880"/><text x="27.5583%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (30,337,612 samples, 0.05%)</title><rect x="27.5271%" y="261" width="0.0471%" height="15" fill="rgb(233,213,13)" fg:x="17736273660" fg:w="30337612"/><text x="27.7771%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (256,593,744 samples, 0.40%)</title><rect x="27.2128%" y="293" width="0.3982%" height="15" fill="rgb(233,141,41)" fg:x="17533801216" fg:w="256593744"/><text x="27.4628%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (23,783,688 samples, 0.04%)</title><rect x="27.5741%" y="277" width="0.0369%" height="15" fill="rgb(239,167,4)" fg:x="17766611272" fg:w="23783688"/><text x="27.8241%" y="287.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (937,116,380 samples, 1.45%)</title><rect x="26.2240%" y="309" width="1.4544%" height="15" fill="rgb(209,217,16)" fg:x="16896707026" fg:w="937116380"/><text x="26.4740%" y="319.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (43,428,446 samples, 0.07%)</title><rect x="27.6111%" y="293" width="0.0674%" height="15" fill="rgb(219,88,35)" fg:x="17790394960" fg:w="43428446"/><text x="27.8611%" y="303.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicyBuilder as grpc::client::load_balancing::LbPolicyBuilderCallbacks&gt;::build (19,905,075 samples, 0.03%)</title><rect x="27.6785%" y="309" width="0.0309%" height="15" fill="rgb(220,193,23)" fg:x="17833823406" fg:w="19905075"/><text x="27.9285%" y="319.50"></text></g><g><title>[unknown] (88,825,905 samples, 0.14%)</title><rect x="28.0110%" y="229" width="0.1379%" height="15" fill="rgb(230,90,52)" fg:x="18048099490" fg:w="88825905"/><text x="28.2610%" y="239.50"></text></g><g><title>[unknown] (73,866,275 samples, 0.11%)</title><rect x="28.0342%" y="213" width="0.1146%" height="15" fill="rgb(252,106,19)" fg:x="18063059120" fg:w="73866275"/><text x="28.2842%" y="223.50"></text></g><g><title>[unknown] (73,866,275 samples, 0.11%)</title><rect x="28.0342%" y="197" width="0.1146%" height="15" fill="rgb(206,74,20)" fg:x="18063059120" fg:w="73866275"/><text x="28.2842%" y="207.50"></text></g><g><title>[unknown] (70,866,134 samples, 0.11%)</title><rect x="28.0389%" y="181" width="0.1100%" height="15" fill="rgb(230,138,44)" fg:x="18066059261" fg:w="70866134"/><text x="28.2889%" y="191.50"></text></g><g><title>[unknown] (63,424,312 samples, 0.10%)</title><rect x="28.0504%" y="165" width="0.0984%" height="15" fill="rgb(235,182,43)" fg:x="18073501083" fg:w="63424312"/><text x="28.3004%" y="175.50"></text></g><g><title>[unknown] (56,816,881 samples, 0.09%)</title><rect x="28.0607%" y="149" width="0.0882%" height="15" fill="rgb(242,16,51)" fg:x="18080108514" fg:w="56816881"/><text x="28.3107%" y="159.50"></text></g><g><title>[unknown] (56,816,881 samples, 0.09%)</title><rect x="28.0607%" y="133" width="0.0882%" height="15" fill="rgb(248,9,4)" fg:x="18080108514" fg:w="56816881"/><text x="28.3107%" y="143.50"></text></g><g><title>[unknown] (49,357,018 samples, 0.08%)</title><rect x="28.0723%" y="117" width="0.0766%" height="15" fill="rgb(210,31,22)" fg:x="18087568377" fg:w="49357018"/><text x="28.3223%" y="127.50"></text></g><g><title>[unknown] (49,357,018 samples, 0.08%)</title><rect x="28.0723%" y="101" width="0.0766%" height="15" fill="rgb(239,54,39)" fg:x="18087568377" fg:w="49357018"/><text x="28.3223%" y="111.50"></text></g><g><title>[unknown] (45,699,179 samples, 0.07%)</title><rect x="28.0779%" y="85" width="0.0709%" height="15" fill="rgb(230,99,41)" fg:x="18091226216" fg:w="45699179"/><text x="28.3279%" y="95.50"></text></g><g><title>[unknown] (41,767,192 samples, 0.06%)</title><rect x="28.0841%" y="69" width="0.0648%" height="15" fill="rgb(253,106,12)" fg:x="18095158203" fg:w="41767192"/><text x="28.3341%" y="79.50"></text></g><g><title>_int_malloc (158,423,288 samples, 0.25%)</title><rect x="27.9153%" y="245" width="0.2459%" height="15" fill="rgb(213,46,41)" fg:x="17986399968" fg:w="158423288"/><text x="28.1653%" y="255.50"></text></g><g><title>__GI___libc_malloc (186,061,559 samples, 0.29%)</title><rect x="27.8784%" y="261" width="0.2888%" height="15" fill="rgb(215,133,35)" fg:x="17962620996" fg:w="186061559"/><text x="28.1284%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (15,815,910 samples, 0.02%)</title><rect x="28.1671%" y="261" width="0.0245%" height="15" fill="rgb(213,28,5)" fg:x="18148682555" fg:w="15815910"/><text x="28.4171%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (13,877,332 samples, 0.02%)</title><rect x="28.1917%" y="261" width="0.0215%" height="15" fill="rgb(215,77,49)" fg:x="18164498465" fg:w="13877332"/><text x="28.4417%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (249,486,473 samples, 0.39%)</title><rect x="27.8322%" y="277" width="0.3872%" height="15" fill="rgb(248,100,22)" fg:x="17932864080" fg:w="249486473"/><text x="28.0822%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (424,635,299 samples, 0.66%)</title><rect x="27.7154%" y="293" width="0.6590%" height="15" fill="rgb(208,67,9)" fg:x="17857613277" fg:w="424635299"/><text x="27.9654%" y="303.50"></text></g><g><title>__GI___libc_malloc (99,898,023 samples, 0.16%)</title><rect x="28.2194%" y="277" width="0.1550%" height="15" fill="rgb(219,133,21)" fg:x="18182350553" fg:w="99898023"/><text x="28.4694%" y="287.50"></text></g><g><title>_int_malloc (95,731,752 samples, 0.15%)</title><rect x="28.2258%" y="261" width="0.1486%" height="15" fill="rgb(246,46,29)" fg:x="18186516824" fg:w="95731752"/><text x="28.4758%" y="271.50"></text></g><g><title>[unknown] (95,731,752 samples, 0.15%)</title><rect x="28.2258%" y="245" width="0.1486%" height="15" fill="rgb(246,185,52)" fg:x="18186516824" fg:w="95731752"/><text x="28.4758%" y="255.50"></text></g><g><title>[unknown] (92,731,635 samples, 0.14%)</title><rect x="28.2305%" y="229" width="0.1439%" height="15" fill="rgb(252,136,11)" fg:x="18189516941" fg:w="92731635"/><text x="28.4805%" y="239.50"></text></g><g><title>[unknown] (85,582,431 samples, 0.13%)</title><rect x="28.2416%" y="213" width="0.1328%" height="15" fill="rgb(219,138,53)" fg:x="18196666145" fg:w="85582431"/><text x="28.4916%" y="223.50"></text></g><g><title>[unknown] (81,443,118 samples, 0.13%)</title><rect x="28.2480%" y="197" width="0.1264%" height="15" fill="rgb(211,51,23)" fg:x="18200805458" fg:w="81443118"/><text x="28.4980%" y="207.50"></text></g><g><title>[unknown] (77,196,890 samples, 0.12%)</title><rect x="28.2546%" y="181" width="0.1198%" height="15" fill="rgb(247,221,28)" fg:x="18205051686" fg:w="77196890"/><text x="28.5046%" y="191.50"></text></g><g><title>[unknown] (66,944,555 samples, 0.10%)</title><rect x="28.2705%" y="165" width="0.1039%" height="15" fill="rgb(251,222,45)" fg:x="18215304021" fg:w="66944555"/><text x="28.5205%" y="175.50"></text></g><g><title>[unknown] (66,944,555 samples, 0.10%)</title><rect x="28.2705%" y="149" width="0.1039%" height="15" fill="rgb(217,162,53)" fg:x="18215304021" fg:w="66944555"/><text x="28.5205%" y="159.50"></text></g><g><title>[unknown] (63,358,547 samples, 0.10%)</title><rect x="28.2761%" y="133" width="0.0983%" height="15" fill="rgb(229,93,14)" fg:x="18218890029" fg:w="63358547"/><text x="28.5261%" y="143.50"></text></g><g><title>[unknown] (59,112,035 samples, 0.09%)</title><rect x="28.2827%" y="117" width="0.0917%" height="15" fill="rgb(209,67,49)" fg:x="18223136541" fg:w="59112035"/><text x="28.5327%" y="127.50"></text></g><g><title>[unknown] (51,268,495 samples, 0.08%)</title><rect x="28.2949%" y="101" width="0.0796%" height="15" fill="rgb(213,87,29)" fg:x="18230980081" fg:w="51268495"/><text x="28.5449%" y="111.50"></text></g><g><title>[unknown] (34,145,211 samples, 0.05%)</title><rect x="28.3214%" y="85" width="0.0530%" height="15" fill="rgb(205,151,52)" fg:x="18248103365" fg:w="34145211"/><text x="28.5714%" y="95.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h164f6ec20c46bb4bE.llvm.2902323996697549742 (435,766,828 samples, 0.68%)</title><rect x="27.7093%" y="309" width="0.6763%" height="15" fill="rgb(253,215,39)" fg:x="17853728481" fg:w="435766828"/><text x="27.9593%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="293" width="0.0112%" height="15" fill="rgb(221,220,41)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="277" width="0.0112%" height="15" fill="rgb(218,133,21)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="287.50"></text></g><g><title>__GI___libc_realloc (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="261" width="0.0112%" height="15" fill="rgb(221,193,43)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="271.50"></text></g><g><title>_int_realloc (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="245" width="0.0112%" height="15" fill="rgb(240,128,52)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="255.50"></text></g><g><title>_int_malloc (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="229" width="0.0112%" height="15" fill="rgb(253,114,12)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="239.50"></text></g><g><title>[unknown] (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="213" width="0.0112%" height="15" fill="rgb(215,223,47)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="223.50"></text></g><g><title>[unknown] (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="197" width="0.0112%" height="15" fill="rgb(248,225,23)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="207.50"></text></g><g><title>[unknown] (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="181" width="0.0112%" height="15" fill="rgb(250,108,0)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="191.50"></text></g><g><title>[unknown] (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="165" width="0.0112%" height="15" fill="rgb(228,208,7)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="175.50"></text></g><g><title>[unknown] (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="149" width="0.0112%" height="15" fill="rgb(244,45,10)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="159.50"></text></g><g><title>[unknown] (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="133" width="0.0112%" height="15" fill="rgb(207,125,25)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="143.50"></text></g><g><title>[unknown] (7,246,733 samples, 0.01%)</title><rect x="28.3744%" y="117" width="0.0112%" height="15" fill="rgb(210,195,18)" fg:x="18282248576" fg:w="7246733"/><text x="28.6244%" y="127.50"></text></g><g><title>__GI___libc_malloc (27,456,747 samples, 0.04%)</title><rect x="28.3857%" y="309" width="0.0426%" height="15" fill="rgb(249,80,12)" fg:x="18289495309" fg:w="27456747"/><text x="28.6357%" y="319.50"></text></g><g><title>_int_malloc (23,802,347 samples, 0.04%)</title><rect x="28.3913%" y="293" width="0.0369%" height="15" fill="rgb(221,65,9)" fg:x="18293149709" fg:w="23802347"/><text x="28.6413%" y="303.50"></text></g><g><title>[unknown] (12,263,377 samples, 0.02%)</title><rect x="28.4092%" y="277" width="0.0190%" height="15" fill="rgb(235,49,36)" fg:x="18304688679" fg:w="12263377"/><text x="28.6592%" y="287.50"></text></g><g><title>[unknown] (12,263,377 samples, 0.02%)</title><rect x="28.4092%" y="261" width="0.0190%" height="15" fill="rgb(225,32,20)" fg:x="18304688679" fg:w="12263377"/><text x="28.6592%" y="271.50"></text></g><g><title>[unknown] (12,263,377 samples, 0.02%)</title><rect x="28.4092%" y="245" width="0.0190%" height="15" fill="rgb(215,141,46)" fg:x="18304688679" fg:w="12263377"/><text x="28.6592%" y="255.50"></text></g><g><title>[unknown] (12,263,377 samples, 0.02%)</title><rect x="28.4092%" y="229" width="0.0190%" height="15" fill="rgb(250,160,47)" fg:x="18304688679" fg:w="12263377"/><text x="28.6592%" y="239.50"></text></g><g><title>[unknown] (12,263,377 samples, 0.02%)</title><rect x="28.4092%" y="213" width="0.0190%" height="15" fill="rgb(216,222,40)" fg:x="18304688679" fg:w="12263377"/><text x="28.6592%" y="223.50"></text></g><g><title>[unknown] (12,263,377 samples, 0.02%)</title><rect x="28.4092%" y="197" width="0.0190%" height="15" fill="rgb(234,217,39)" fg:x="18304688679" fg:w="12263377"/><text x="28.6592%" y="207.50"></text></g><g><title>[unknown] (12,263,377 samples, 0.02%)</title><rect x="28.4092%" y="181" width="0.0190%" height="15" fill="rgb(207,178,40)" fg:x="18304688679" fg:w="12263377"/><text x="28.6592%" y="191.50"></text></g><g><title>[unknown] (12,263,377 samples, 0.02%)</title><rect x="28.4092%" y="165" width="0.0190%" height="15" fill="rgb(221,136,13)" fg:x="18304688679" fg:w="12263377"/><text x="28.6592%" y="175.50"></text></g><g><title>[unknown] (8,103,504 samples, 0.01%)</title><rect x="28.4157%" y="149" width="0.0126%" height="15" fill="rgb(249,199,10)" fg:x="18308848552" fg:w="8103504"/><text x="28.6657%" y="159.50"></text></g><g><title>[unknown] (8,103,504 samples, 0.01%)</title><rect x="28.4157%" y="133" width="0.0126%" height="15" fill="rgb(249,222,13)" fg:x="18308848552" fg:w="8103504"/><text x="28.6657%" y="143.50"></text></g><g><title>[unknown] (8,103,504 samples, 0.01%)</title><rect x="28.4157%" y="117" width="0.0126%" height="15" fill="rgb(244,185,38)" fg:x="18308848552" fg:w="8103504"/><text x="28.6657%" y="127.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h4884cc1a4d2303d3E.llvm.3660540333688232871 (127,695,544 samples, 0.20%)</title><rect x="28.4471%" y="261" width="0.1982%" height="15" fill="rgb(236,202,9)" fg:x="18329062470" fg:w="127695544"/><text x="28.6971%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (1,605,745,284 samples, 2.49%)</title><rect x="26.1592%" y="325" width="2.4921%" height="15" fill="rgb(250,229,37)" fg:x="16854907553" fg:w="1605745284"/><text x="26.4092%" y="335.50">&lt;g..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (139,443,295 samples, 0.22%)</title><rect x="28.4349%" y="309" width="0.2164%" height="15" fill="rgb(206,174,23)" fg:x="18321209542" fg:w="139443295"/><text x="28.6849%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (139,443,295 samples, 0.22%)</title><rect x="28.4349%" y="293" width="0.2164%" height="15" fill="rgb(211,33,43)" fg:x="18321209542" fg:w="139443295"/><text x="28.6849%" y="303.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (135,747,980 samples, 0.21%)</title><rect x="28.4406%" y="277" width="0.2107%" height="15" fill="rgb(245,58,50)" fg:x="18324904857" fg:w="135747980"/><text x="28.6906%" y="287.50"></text></g><g><title>[unknown] (10,824,816 samples, 0.02%)</title><rect x="28.7731%" y="293" width="0.0168%" height="15" fill="rgb(244,68,36)" fg:x="18539152984" fg:w="10824816"/><text x="29.0231%" y="303.50"></text></g><g><title>[unknown] (7,569,958 samples, 0.01%)</title><rect x="28.7782%" y="277" width="0.0117%" height="15" fill="rgb(232,229,15)" fg:x="18542407842" fg:w="7569958"/><text x="29.0282%" y="287.50"></text></g><g><title>[unknown] (7,569,958 samples, 0.01%)</title><rect x="28.7782%" y="261" width="0.0117%" height="15" fill="rgb(254,30,23)" fg:x="18542407842" fg:w="7569958"/><text x="29.0282%" y="271.50"></text></g><g><title>[unknown] (7,569,958 samples, 0.01%)</title><rect x="28.7782%" y="245" width="0.0117%" height="15" fill="rgb(235,160,14)" fg:x="18542407842" fg:w="7569958"/><text x="29.0282%" y="255.50"></text></g><g><title>[unknown] (7,569,958 samples, 0.01%)</title><rect x="28.7782%" y="229" width="0.0117%" height="15" fill="rgb(212,155,44)" fg:x="18542407842" fg:w="7569958"/><text x="29.0282%" y="239.50"></text></g><g><title>[unknown] (7,569,958 samples, 0.01%)</title><rect x="28.7782%" y="213" width="0.0117%" height="15" fill="rgb(226,2,50)" fg:x="18542407842" fg:w="7569958"/><text x="29.0282%" y="223.50"></text></g><g><title>[unknown] (7,569,958 samples, 0.01%)</title><rect x="28.7782%" y="197" width="0.0117%" height="15" fill="rgb(234,177,6)" fg:x="18542407842" fg:w="7569958"/><text x="29.0282%" y="207.50"></text></g><g><title>[unknown] (7,569,958 samples, 0.01%)</title><rect x="28.7782%" y="181" width="0.0117%" height="15" fill="rgb(217,24,9)" fg:x="18542407842" fg:w="7569958"/><text x="29.0282%" y="191.50"></text></g><g><title>[unknown] (7,569,958 samples, 0.01%)</title><rect x="28.7782%" y="165" width="0.0117%" height="15" fill="rgb(220,13,46)" fg:x="18542407842" fg:w="7569958"/><text x="29.0282%" y="175.50"></text></g><g><title>[unknown] (7,569,958 samples, 0.01%)</title><rect x="28.7782%" y="149" width="0.0117%" height="15" fill="rgb(239,221,27)" fg:x="18542407842" fg:w="7569958"/><text x="29.0282%" y="159.50"></text></g><g><title>__GI___libc_malloc (101,106,067 samples, 0.16%)</title><rect x="28.6513%" y="325" width="0.1569%" height="15" fill="rgb(222,198,25)" fg:x="18460652837" fg:w="101106067"/><text x="28.9013%" y="335.50"></text></g><g><title>_int_malloc (73,657,374 samples, 0.11%)</title><rect x="28.6939%" y="309" width="0.1143%" height="15" fill="rgb(211,99,13)" fg:x="18488101530" fg:w="73657374"/><text x="28.9439%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (19,946,601 samples, 0.03%)</title><rect x="28.9729%" y="293" width="0.0310%" height="15" fill="rgb(232,111,31)" fg:x="18667842833" fg:w="19946601"/><text x="29.2229%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,388,182 samples, 0.01%)</title><rect x="29.1034%" y="261" width="0.0130%" height="15" fill="rgb(245,82,37)" fg:x="18751955667" fg:w="8388182"/><text x="29.3534%" y="271.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="197" width="0.0186%" height="15" fill="rgb(227,149,46)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="207.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="181" width="0.0186%" height="15" fill="rgb(218,36,50)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="191.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="165" width="0.0186%" height="15" fill="rgb(226,80,48)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="175.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="149" width="0.0186%" height="15" fill="rgb(238,224,15)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="159.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="133" width="0.0186%" height="15" fill="rgb(241,136,10)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="143.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="117" width="0.0186%" height="15" fill="rgb(208,32,45)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="127.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="101" width="0.0186%" height="15" fill="rgb(207,135,9)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="111.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="85" width="0.0186%" height="15" fill="rgb(206,86,44)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="95.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="69" width="0.0186%" height="15" fill="rgb(245,177,15)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="79.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="53" width="0.0186%" height="15" fill="rgb(206,64,50)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="63.50"></text></g><g><title>[unknown] (11,985,857 samples, 0.02%)</title><rect x="29.3324%" y="37" width="0.0186%" height="15" fill="rgb(234,36,40)" fg:x="18899504397" fg:w="11985857"/><text x="29.5824%" y="47.50"></text></g><g><title>__GI___libc_malloc (134,702,452 samples, 0.21%)</title><rect x="29.1550%" y="229" width="0.2091%" height="15" fill="rgb(213,64,8)" fg:x="18785201433" fg:w="134702452"/><text x="29.4050%" y="239.50"></text></g><g><title>_int_malloc (113,193,199 samples, 0.18%)</title><rect x="29.1884%" y="213" width="0.1757%" height="15" fill="rgb(210,75,36)" fg:x="18806710686" fg:w="113193199"/><text x="29.4384%" y="223.50"></text></g><g><title>unlink_chunk (8,413,631 samples, 0.01%)</title><rect x="29.3510%" y="197" width="0.0131%" height="15" fill="rgb(229,88,21)" fg:x="18911490254" fg:w="8413631"/><text x="29.6010%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (218,119,565 samples, 0.34%)</title><rect x="29.0371%" y="277" width="0.3385%" height="15" fill="rgb(252,204,47)" fg:x="18709214368" fg:w="218119565"/><text x="29.2871%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (166,990,084 samples, 0.26%)</title><rect x="29.1164%" y="261" width="0.2592%" height="15" fill="rgb(208,77,27)" fg:x="18760343849" fg:w="166990084"/><text x="29.3664%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (148,394,094 samples, 0.23%)</title><rect x="29.1453%" y="245" width="0.2303%" height="15" fill="rgb(221,76,26)" fg:x="18778939839" fg:w="148394094"/><text x="29.3953%" y="255.50"></text></g><g><title>alloc::fmt::format::format_inner (432,186,186 samples, 0.67%)</title><rect x="28.8148%" y="325" width="0.6708%" height="15" fill="rgb(225,139,18)" fg:x="18566008130" fg:w="432186186"/><text x="29.0648%" y="335.50"></text></g><g><title>core::fmt::write (400,118,714 samples, 0.62%)</title><rect x="28.8646%" y="309" width="0.6210%" height="15" fill="rgb(230,137,11)" fg:x="18598075602" fg:w="400118714"/><text x="29.1146%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (310,404,882 samples, 0.48%)</title><rect x="29.0038%" y="293" width="0.4818%" height="15" fill="rgb(212,28,1)" fg:x="18687789434" fg:w="310404882"/><text x="29.2538%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral (70,860,383 samples, 0.11%)</title><rect x="29.3756%" y="277" width="0.1100%" height="15" fill="rgb(248,164,17)" fg:x="18927333933" fg:w="70860383"/><text x="29.6256%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (34,122,453 samples, 0.05%)</title><rect x="29.4326%" y="261" width="0.0530%" height="15" fill="rgb(222,171,42)" fg:x="18964071863" fg:w="34122453"/><text x="29.6826%" y="271.50"></text></g><g><title>[unknown] (20,618,849 samples, 0.03%)</title><rect x="29.5342%" y="261" width="0.0320%" height="15" fill="rgb(243,84,45)" fg:x="19029507817" fg:w="20618849"/><text x="29.7842%" y="271.50"></text></g><g><title>[unknown] (20,618,849 samples, 0.03%)</title><rect x="29.5342%" y="245" width="0.0320%" height="15" fill="rgb(252,49,23)" fg:x="19029507817" fg:w="20618849"/><text x="29.7842%" y="255.50"></text></g><g><title>[unknown] (20,618,849 samples, 0.03%)</title><rect x="29.5342%" y="229" width="0.0320%" height="15" fill="rgb(215,19,7)" fg:x="19029507817" fg:w="20618849"/><text x="29.7842%" y="239.50"></text></g><g><title>[unknown] (20,618,849 samples, 0.03%)</title><rect x="29.5342%" y="213" width="0.0320%" height="15" fill="rgb(238,81,41)" fg:x="19029507817" fg:w="20618849"/><text x="29.7842%" y="223.50"></text></g><g><title>[unknown] (20,618,849 samples, 0.03%)</title><rect x="29.5342%" y="197" width="0.0320%" height="15" fill="rgb(210,199,37)" fg:x="19029507817" fg:w="20618849"/><text x="29.7842%" y="207.50"></text></g><g><title>[unknown] (14,376,786 samples, 0.02%)</title><rect x="29.5439%" y="181" width="0.0223%" height="15" fill="rgb(244,192,49)" fg:x="19035749880" fg:w="14376786"/><text x="29.7939%" y="191.50"></text></g><g><title>[unknown] (14,376,786 samples, 0.02%)</title><rect x="29.5439%" y="165" width="0.0223%" height="15" fill="rgb(226,211,11)" fg:x="19035749880" fg:w="14376786"/><text x="29.7939%" y="175.50"></text></g><g><title>[unknown] (10,795,647 samples, 0.02%)</title><rect x="29.5494%" y="149" width="0.0168%" height="15" fill="rgb(236,162,54)" fg:x="19039331019" fg:w="10795647"/><text x="29.7994%" y="159.50"></text></g><g><title>[unknown] (10,795,647 samples, 0.02%)</title><rect x="29.5494%" y="133" width="0.0168%" height="15" fill="rgb(220,229,9)" fg:x="19039331019" fg:w="10795647"/><text x="29.7994%" y="143.50"></text></g><g><title>[unknown] (7,231,851 samples, 0.01%)</title><rect x="29.5550%" y="117" width="0.0112%" height="15" fill="rgb(250,87,22)" fg:x="19042894815" fg:w="7231851"/><text x="29.8050%" y="127.50"></text></g><g><title>__GI_memcpy (15,622,143 samples, 0.02%)</title><rect x="29.5662%" y="261" width="0.0242%" height="15" fill="rgb(239,43,17)" fg:x="19050126666" fg:w="15622143"/><text x="29.8162%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15,622,143 samples, 0.02%)</title><rect x="29.5662%" y="245" width="0.0242%" height="15" fill="rgb(231,177,25)" fg:x="19050126666" fg:w="15622143"/><text x="29.8162%" y="255.50"></text></g><g><title>[unknown] (135,027,933 samples, 0.21%)</title><rect x="29.6082%" y="245" width="0.2096%" height="15" fill="rgb(219,179,1)" fg:x="19077198832" fg:w="135027933"/><text x="29.8582%" y="255.50"></text></g><g><title>[unknown] (130,916,872 samples, 0.20%)</title><rect x="29.6146%" y="229" width="0.2032%" height="15" fill="rgb(238,219,53)" fg:x="19081309893" fg:w="130916872"/><text x="29.8646%" y="239.50"></text></g><g><title>[unknown] (123,761,040 samples, 0.19%)</title><rect x="29.6257%" y="213" width="0.1921%" height="15" fill="rgb(232,167,36)" fg:x="19088465725" fg:w="123761040"/><text x="29.8757%" y="223.50"></text></g><g><title>[unknown] (123,761,040 samples, 0.19%)</title><rect x="29.6257%" y="197" width="0.1921%" height="15" fill="rgb(244,19,51)" fg:x="19088465725" fg:w="123761040"/><text x="29.8757%" y="207.50"></text></g><g><title>[unknown] (110,984,948 samples, 0.17%)</title><rect x="29.6455%" y="181" width="0.1723%" height="15" fill="rgb(224,6,22)" fg:x="19101241817" fg:w="110984948"/><text x="29.8955%" y="191.50"></text></g><g><title>[unknown] (97,519,999 samples, 0.15%)</title><rect x="29.6664%" y="165" width="0.1514%" height="15" fill="rgb(224,145,5)" fg:x="19114706766" fg:w="97519999"/><text x="29.9164%" y="175.50"></text></g><g><title>[unknown] (86,800,970 samples, 0.13%)</title><rect x="29.6830%" y="149" width="0.1347%" height="15" fill="rgb(234,130,49)" fg:x="19125425795" fg:w="86800970"/><text x="29.9330%" y="159.50"></text></g><g><title>[unknown] (86,800,970 samples, 0.13%)</title><rect x="29.6830%" y="133" width="0.1347%" height="15" fill="rgb(254,6,2)" fg:x="19125425795" fg:w="86800970"/><text x="29.9330%" y="143.50"></text></g><g><title>[unknown] (67,582,741 samples, 0.10%)</title><rect x="29.7129%" y="117" width="0.1049%" height="15" fill="rgb(208,96,46)" fg:x="19144644024" fg:w="67582741"/><text x="29.9629%" y="127.50"></text></g><g><title>[unknown] (59,897,108 samples, 0.09%)</title><rect x="29.7248%" y="101" width="0.0930%" height="15" fill="rgb(239,3,39)" fg:x="19152329657" fg:w="59897108"/><text x="29.9748%" y="111.50"></text></g><g><title>[unknown] (55,729,609 samples, 0.09%)</title><rect x="29.7313%" y="85" width="0.0865%" height="15" fill="rgb(233,210,1)" fg:x="19156497156" fg:w="55729609"/><text x="29.9813%" y="95.50"></text></g><g><title>_int_realloc (205,565,747 samples, 0.32%)</title><rect x="29.5156%" y="277" width="0.3190%" height="15" fill="rgb(244,137,37)" fg:x="19017538269" fg:w="205565747"/><text x="29.7656%" y="287.50"></text></g><g><title>_int_malloc (154,037,821 samples, 0.24%)</title><rect x="29.5956%" y="261" width="0.2391%" height="15" fill="rgb(240,136,2)" fg:x="19069066195" fg:w="154037821"/><text x="29.8456%" y="271.50"></text></g><g><title>sysmalloc (10,877,251 samples, 0.02%)</title><rect x="29.8178%" y="245" width="0.0169%" height="15" fill="rgb(239,18,37)" fg:x="19212226765" fg:w="10877251"/><text x="30.0678%" y="255.50"></text></g><g><title>__glibc_morecore (10,877,251 samples, 0.02%)</title><rect x="29.8178%" y="229" width="0.0169%" height="15" fill="rgb(218,185,22)" fg:x="19212226765" fg:w="10877251"/><text x="30.0678%" y="239.50"></text></g><g><title>__GI___sbrk (10,877,251 samples, 0.02%)</title><rect x="29.8178%" y="213" width="0.0169%" height="15" fill="rgb(225,218,4)" fg:x="19212226765" fg:w="10877251"/><text x="30.0678%" y="223.50"></text></g><g><title>__brk (10,877,251 samples, 0.02%)</title><rect x="29.8178%" y="197" width="0.0169%" height="15" fill="rgb(230,182,32)" fg:x="19212226765" fg:w="10877251"/><text x="30.0678%" y="207.50"></text></g><g><title>[unknown] (10,877,251 samples, 0.02%)</title><rect x="29.8178%" y="181" width="0.0169%" height="15" fill="rgb(242,56,43)" fg:x="19212226765" fg:w="10877251"/><text x="30.0678%" y="191.50"></text></g><g><title>[unknown] (10,877,251 samples, 0.02%)</title><rect x="29.8178%" y="165" width="0.0169%" height="15" fill="rgb(233,99,24)" fg:x="19212226765" fg:w="10877251"/><text x="30.0678%" y="175.50"></text></g><g><title>[unknown] (10,877,251 samples, 0.02%)</title><rect x="29.8178%" y="149" width="0.0169%" height="15" fill="rgb(234,209,42)" fg:x="19212226765" fg:w="10877251"/><text x="30.0678%" y="159.50"></text></g><g><title>[unknown] (10,877,251 samples, 0.02%)</title><rect x="29.8178%" y="133" width="0.0169%" height="15" fill="rgb(227,7,12)" fg:x="19212226765" fg:w="10877251"/><text x="30.0678%" y="143.50"></text></g><g><title>[unknown] (10,877,251 samples, 0.02%)</title><rect x="29.8178%" y="117" width="0.0169%" height="15" fill="rgb(245,203,43)" fg:x="19212226765" fg:w="10877251"/><text x="30.0678%" y="127.50"></text></g><g><title>[unknown] (7,894,124 samples, 0.01%)</title><rect x="29.8224%" y="101" width="0.0123%" height="15" fill="rgb(238,205,33)" fg:x="19215209892" fg:w="7894124"/><text x="30.0724%" y="111.50"></text></g><g><title>__GI___libc_realloc (209,396,614 samples, 0.32%)</title><rect x="29.5156%" y="293" width="0.3250%" height="15" fill="rgb(231,56,7)" fg:x="19017538269" fg:w="209396614"/><text x="29.7656%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (232,385,573 samples, 0.36%)</title><rect x="29.4856%" y="325" width="0.3607%" height="15" fill="rgb(244,186,29)" fg:x="18998194316" fg:w="232385573"/><text x="29.7356%" y="335.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (216,044,521 samples, 0.34%)</title><rect x="29.5109%" y="309" width="0.3353%" height="15" fill="rgb(234,111,31)" fg:x="19014535368" fg:w="216044521"/><text x="29.7609%" y="319.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (20,140,069 samples, 0.03%)</title><rect x="29.8782%" y="309" width="0.0313%" height="15" fill="rgb(241,149,10)" fg:x="19251140165" fg:w="20140069"/><text x="30.1282%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,615,068,764 samples, 7.16%)</title><rect x="34.5189%" y="245" width="7.1627%" height="15" fill="rgb(249,206,44)" fg:x="22241247565" fg:w="4615068764"/><text x="34.7689%" y="255.50">&lt;core::ite..</text></g><g><title>&lt;lb_apis::StubChannelControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (28,144,690 samples, 0.04%)</title><rect x="41.6815%" y="245" width="0.0437%" height="15" fill="rgb(251,153,30)" fg:x="26856316329" fg:w="28144690"/><text x="41.9315%" y="255.50"></text></g><g><title>__GI___libc_free (20,711,818 samples, 0.03%)</title><rect x="41.7252%" y="245" width="0.0321%" height="15" fill="rgb(239,152,38)" fg:x="26884461019" fg:w="20711818"/><text x="41.9752%" y="255.50"></text></g><g><title>_int_free (20,711,818 samples, 0.03%)</title><rect x="41.7252%" y="229" width="0.0321%" height="15" fill="rgb(249,139,47)" fg:x="26884461019" fg:w="20711818"/><text x="41.9752%" y="239.50"></text></g><g><title>_int_malloc (59,540,426 samples, 0.09%)</title><rect x="41.7766%" y="229" width="0.0924%" height="15" fill="rgb(244,64,35)" fg:x="26917553841" fg:w="59540426"/><text x="42.0266%" y="239.50"></text></g><g><title>unlink_chunk (27,658,144 samples, 0.04%)</title><rect x="41.8261%" y="213" width="0.0429%" height="15" fill="rgb(216,46,15)" fg:x="26949436123" fg:w="27658144"/><text x="42.0761%" y="223.50"></text></g><g><title>__GI___libc_malloc (76,181,691 samples, 0.12%)</title><rect x="41.7574%" y="245" width="0.1182%" height="15" fill="rgb(250,74,19)" fg:x="26905172837" fg:w="76181691"/><text x="42.0074%" y="255.50"></text></g><g><title>_int_free (8,293,918 samples, 0.01%)</title><rect x="41.9116%" y="213" width="0.0129%" height="15" fill="rgb(249,42,33)" fg:x="27004526972" fg:w="8293918"/><text x="42.1616%" y="223.50"></text></g><g><title>__GI___libc_free (67,470,866 samples, 0.10%)</title><rect x="41.8993%" y="229" width="0.1047%" height="15" fill="rgb(242,149,17)" fg:x="26996639305" fg:w="67470866"/><text x="42.1493%" y="239.50"></text></g><g><title>_int_free_merge_chunk (51,289,281 samples, 0.08%)</title><rect x="41.9244%" y="213" width="0.0796%" height="15" fill="rgb(244,29,21)" fg:x="27012820890" fg:w="51289281"/><text x="42.1744%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2,895,093,142 samples, 4.49%)</title><rect x="41.8822%" y="245" width="4.4932%" height="15" fill="rgb(220,130,37)" fg:x="26985575907" fg:w="2895093142"/><text x="42.1322%" y="255.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_cb::RRPickerPicker&gt; (2,816,558,878 samples, 4.37%)</title><rect x="42.0040%" y="229" width="4.3714%" height="15" fill="rgb(211,67,2)" fg:x="27064110171" fg:w="2816558878"/><text x="42.2540%" y="239.50">core:..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (7,339,148,777 samples, 11.39%)</title><rect x="46.3945%" y="229" width="11.3905%" height="15" fill="rgb(235,68,52)" fg:x="29892946845" fg:w="7339148777"/><text x="46.6445%" y="239.50">&lt;alloc::vec::into..</text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h582e6995221ab373E.llvm.2902323996697549742 (17,014,906,012 samples, 26.41%)</title><rect x="31.3902%" y="261" width="26.4075%" height="15" fill="rgb(246,142,3)" fg:x="20225378830" fg:w="17014906012"/><text x="31.6402%" y="271.50">_ZN4core3ops8function6FnOnce9call_once17h5..</text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (7,359,615,793 samples, 11.42%)</title><rect x="46.3754%" y="245" width="11.4223%" height="15" fill="rgb(241,25,7)" fg:x="29880669049" fg:w="7359615793"/><text x="46.6254%" y="255.50">alloc::vec::in_pl..</text></g><g><title>__GI___libc_free (16,240,040 samples, 0.03%)</title><rect x="57.7977%" y="261" width="0.0252%" height="15" fill="rgb(242,119,39)" fg:x="37240284842" fg:w="16240040"/><text x="58.0477%" y="271.50"></text></g><g><title>_int_free (12,161,065 samples, 0.02%)</title><rect x="57.8040%" y="245" width="0.0189%" height="15" fill="rgb(241,98,45)" fg:x="37244363817" fg:w="12161065"/><text x="58.0540%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (17,190,339,736 samples, 26.68%)</title><rect x="31.1740%" y="277" width="26.6798%" height="15" fill="rgb(254,28,30)" fg:x="20086089155" fg:w="17190339736"/><text x="31.4240%" y="287.50">&lt;grpc::client::load_balancing::child_manage..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (19,904,009 samples, 0.03%)</title><rect x="57.8229%" y="261" width="0.0309%" height="15" fill="rgb(241,142,54)" fg:x="37256524882" fg:w="19904009"/><text x="58.0729%" y="271.50"></text></g><g><title>__GI___libc_malloc (15,943,971 samples, 0.02%)</title><rect x="57.8538%" y="277" width="0.0247%" height="15" fill="rgb(222,85,15)" fg:x="37276428891" fg:w="15943971"/><text x="58.1038%" y="287.50"></text></g><g><title>tcache_get (7,871,281 samples, 0.01%)</title><rect x="57.8663%" y="261" width="0.0122%" height="15" fill="rgb(210,85,47)" fg:x="37284501581" fg:w="7871281"/><text x="58.1163%" y="271.50"></text></g><g><title>tcache_get_n (7,871,281 samples, 0.01%)</title><rect x="57.8663%" y="245" width="0.0122%" height="15" fill="rgb(224,206,25)" fg:x="37284501581" fg:w="7871281"/><text x="58.1163%" y="255.50"></text></g><g><title>__rust_alloc (8,344,722 samples, 0.01%)</title><rect x="57.8785%" y="277" width="0.0130%" height="15" fill="rgb(243,201,19)" fg:x="37292372862" fg:w="8344722"/><text x="58.1285%" y="287.50"></text></g><g><title>lb_apis::StubChannelControllerCallbacks::send_update (18,080,827,106 samples, 28.06%)</title><rect x="29.9094%" y="309" width="28.0618%" height="15" fill="rgb(236,59,4)" fg:x="19271280234" fg:w="18080827106"/><text x="30.1594%" y="319.50">lb_apis::StubChannelControllerCallbacks::send..</text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::_{{closure}} (17,967,159,430 samples, 27.89%)</title><rect x="30.0858%" y="293" width="27.8854%" height="15" fill="rgb(254,179,45)" fg:x="19384947910" fg:w="17967159430"/><text x="30.3358%" y="303.50">&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::cl..</text></g><g><title>core::hash::BuildHasher::hash_one (51,389,756 samples, 0.08%)</title><rect x="57.8915%" y="277" width="0.0798%" height="15" fill="rgb(226,14,10)" fg:x="37300717584" fg:w="51389756"/><text x="58.1415%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,467,717 samples, 0.01%)</title><rect x="57.9581%" y="261" width="0.0131%" height="15" fill="rgb(244,27,41)" fg:x="37343639623" fg:w="8467717"/><text x="58.2081%" y="271.50"></text></g><g><title>rand::rng::Rng::gen_range (16,144,515 samples, 0.03%)</title><rect x="57.9712%" y="309" width="0.0251%" height="15" fill="rgb(235,35,32)" fg:x="37352107340" fg:w="16144515"/><text x="58.2212%" y="319.50"></text></g><g><title>lb_apis::callbacks (20,572,568,960 samples, 31.93%)</title><rect x="26.0734%" y="341" width="31.9290%" height="15" fill="rgb(218,68,31)" fg:x="16799636051" fg:w="20572568960"/><text x="26.3234%" y="351.50">lb_apis::callbacks</text></g><g><title>bencher::Bencher::iter (18,141,625,122 samples, 28.16%)</title><rect x="29.8462%" y="325" width="28.1562%" height="15" fill="rgb(207,120,37)" fg:x="19230579889" fg:w="18141625122"/><text x="30.0962%" y="335.50">bencher::Bencher::iter</text></g><g><title>checked_request2size (8,380,771 samples, 0.01%)</title><rect x="58.4339%" y="229" width="0.0130%" height="15" fill="rgb(227,98,0)" fg:x="37650198319" fg:w="8380771"/><text x="58.6839%" y="239.50"></text></g><g><title>__GI___libc_malloc (99,821,449 samples, 0.15%)</title><rect x="58.3049%" y="261" width="0.1549%" height="15" fill="rgb(207,7,3)" fg:x="37567108731" fg:w="99821449"/><text x="58.5549%" y="271.50"></text></g><g><title>_int_malloc (91,628,297 samples, 0.14%)</title><rect x="58.3176%" y="245" width="0.1422%" height="15" fill="rgb(206,98,19)" fg:x="37575301883" fg:w="91628297"/><text x="58.5676%" y="255.50"></text></g><g><title>unlink_chunk (8,351,090 samples, 0.01%)</title><rect x="58.4469%" y="229" width="0.0130%" height="15" fill="rgb(217,5,26)" fg:x="37658579090" fg:w="8351090"/><text x="58.6969%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,274,553 samples, 0.01%)</title><rect x="58.4663%" y="261" width="0.0128%" height="15" fill="rgb(235,190,38)" fg:x="37671081403" fg:w="8274553"/><text x="58.7163%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (8,274,553 samples, 0.01%)</title><rect x="58.4663%" y="245" width="0.0128%" height="15" fill="rgb(247,86,24)" fg:x="37671081403" fg:w="8274553"/><text x="58.7163%" y="255.50"></text></g><g><title>__GI___libc_realloc (8,274,553 samples, 0.01%)</title><rect x="58.4663%" y="229" width="0.0128%" height="15" fill="rgb(205,101,16)" fg:x="37671081403" fg:w="8274553"/><text x="58.7163%" y="239.50"></text></g><g><title>_int_realloc (8,274,553 samples, 0.01%)</title><rect x="58.4663%" y="213" width="0.0128%" height="15" fill="rgb(246,168,33)" fg:x="37671081403" fg:w="8274553"/><text x="58.7163%" y="223.50"></text></g><g><title>_int_malloc (8,274,553 samples, 0.01%)</title><rect x="58.4663%" y="197" width="0.0128%" height="15" fill="rgb(231,114,1)" fg:x="37671081403" fg:w="8274553"/><text x="58.7163%" y="207.50"></text></g><g><title>malloc_consolidate (8,274,553 samples, 0.01%)</title><rect x="58.4663%" y="181" width="0.0128%" height="15" fill="rgb(207,184,53)" fg:x="37671081403" fg:w="8274553"/><text x="58.7163%" y="191.50"></text></g><g><title>unlink_chunk (8,274,553 samples, 0.01%)</title><rect x="58.4663%" y="165" width="0.0128%" height="15" fill="rgb(224,95,51)" fg:x="37671081403" fg:w="8274553"/><text x="58.7163%" y="175.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (174,584,514 samples, 0.27%)</title><rect x="58.2275%" y="277" width="0.2710%" height="15" fill="rgb(212,188,45)" fg:x="37517198681" fg:w="174584514"/><text x="58.4775%" y="287.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (12,427,239 samples, 0.02%)</title><rect x="58.4791%" y="261" width="0.0193%" height="15" fill="rgb(223,154,38)" fg:x="37679355956" fg:w="12427239"/><text x="58.7291%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (265,870,963 samples, 0.41%)</title><rect x="58.1569%" y="293" width="0.4126%" height="15" fill="rgb(251,22,52)" fg:x="37471713666" fg:w="265870963"/><text x="58.4069%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (45,801,434 samples, 0.07%)</title><rect x="58.4984%" y="277" width="0.0711%" height="15" fill="rgb(229,209,22)" fg:x="37691783195" fg:w="45801434"/><text x="58.7484%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (37,398,032 samples, 0.06%)</title><rect x="58.5115%" y="261" width="0.0580%" height="15" fill="rgb(234,138,34)" fg:x="37700186597" fg:w="37398032"/><text x="58.7615%" y="271.50"></text></g><g><title>__GI___libc_realloc (33,313,336 samples, 0.05%)</title><rect x="58.5178%" y="245" width="0.0517%" height="15" fill="rgb(212,95,11)" fg:x="37704271293" fg:w="33313336"/><text x="58.7678%" y="255.50"></text></g><g><title>_int_realloc (33,313,336 samples, 0.05%)</title><rect x="58.5178%" y="229" width="0.0517%" height="15" fill="rgb(240,179,47)" fg:x="37704271293" fg:w="33313336"/><text x="58.7678%" y="239.50"></text></g><g><title>_int_malloc (29,143,521 samples, 0.05%)</title><rect x="58.5243%" y="213" width="0.0452%" height="15" fill="rgb(240,163,11)" fg:x="37708441108" fg:w="29143521"/><text x="58.7743%" y="223.50"></text></g><g><title>_int_free (32,943,169 samples, 0.05%)</title><rect x="58.5695%" y="277" width="0.0511%" height="15" fill="rgb(236,37,12)" fg:x="37737584629" fg:w="32943169"/><text x="58.8195%" y="287.50"></text></g><g><title>__GI___libc_free (37,160,745 samples, 0.06%)</title><rect x="58.5695%" y="293" width="0.0577%" height="15" fill="rgb(232,164,16)" fg:x="37737584629" fg:w="37160745"/><text x="58.8195%" y="303.50"></text></g><g><title>__rdl_dealloc (8,244,866 samples, 0.01%)</title><rect x="58.6272%" y="293" width="0.0128%" height="15" fill="rgb(244,205,15)" fg:x="37774745374" fg:w="8244866"/><text x="58.8772%" y="303.50"></text></g><g><title>__GI___libc_free (16,563,291 samples, 0.03%)</title><rect x="58.7994%" y="261" width="0.0257%" height="15" fill="rgb(223,117,47)" fg:x="37885746074" fg:w="16563291"/><text x="59.0494%" y="271.50"></text></g><g><title>_int_free (8,236,549 samples, 0.01%)</title><rect x="58.8124%" y="245" width="0.0128%" height="15" fill="rgb(244,107,35)" fg:x="37894072816" fg:w="8236549"/><text x="59.0624%" y="255.50"></text></g><g><title>__GI___libc_malloc (8,350,159 samples, 0.01%)</title><rect x="58.8252%" y="261" width="0.0130%" height="15" fill="rgb(205,140,8)" fg:x="37902309365" fg:w="8350159"/><text x="59.0752%" y="271.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h368aaacc3eb2e184E.llvm.9464877178135716140 (128,009,057 samples, 0.20%)</title><rect x="58.7108%" y="277" width="0.1987%" height="15" fill="rgb(228,84,46)" fg:x="37828631129" fg:w="128009057"/><text x="58.9608%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (41,821,113 samples, 0.06%)</title><rect x="58.8446%" y="261" width="0.0649%" height="15" fill="rgb(254,188,9)" fg:x="37914819073" fg:w="41821113"/><text x="59.0946%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (227,930,455 samples, 0.35%)</title><rect x="58.6464%" y="293" width="0.3538%" height="15" fill="rgb(206,112,54)" fg:x="37787151733" fg:w="227930455"/><text x="58.8964%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (58,442,002 samples, 0.09%)</title><rect x="58.9095%" y="277" width="0.0907%" height="15" fill="rgb(216,84,49)" fg:x="37956640186" fg:w="58442002"/><text x="59.1595%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,455,124 samples, 0.01%)</title><rect x="58.9871%" y="261" width="0.0131%" height="15" fill="rgb(214,194,35)" fg:x="38006627064" fg:w="8455124"/><text x="59.2371%" y="271.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (564,241,524 samples, 0.88%)</title><rect x="58.1440%" y="309" width="0.8757%" height="15" fill="rgb(249,28,3)" fg:x="37463403763" fg:w="564241524"/><text x="58.3940%" y="319.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (12,563,099 samples, 0.02%)</title><rect x="59.0002%" y="293" width="0.0195%" height="15" fill="rgb(222,56,52)" fg:x="38015082188" fg:w="12563099"/><text x="59.2502%" y="303.50"></text></g><g><title>__GI___libc_malloc (95,745,760 samples, 0.15%)</title><rect x="59.1419%" y="261" width="0.1486%" height="15" fill="rgb(245,217,50)" fg:x="38106369699" fg:w="95745760"/><text x="59.3919%" y="271.50"></text></g><g><title>_int_malloc (66,680,093 samples, 0.10%)</title><rect x="59.1870%" y="245" width="0.1035%" height="15" fill="rgb(213,201,24)" fg:x="38135435366" fg:w="66680093"/><text x="59.4370%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (186,994,515 samples, 0.29%)</title><rect x="59.0197%" y="293" width="0.2902%" height="15" fill="rgb(248,116,28)" fg:x="38027645287" fg:w="186994515"/><text x="59.2697%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (124,927,926 samples, 0.19%)</title><rect x="59.1160%" y="277" width="0.1939%" height="15" fill="rgb(219,72,43)" fg:x="38089711876" fg:w="124927926"/><text x="59.3660%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,292,983 samples, 0.01%)</title><rect x="59.2970%" y="261" width="0.0129%" height="15" fill="rgb(209,138,14)" fg:x="38206346819" fg:w="8292983"/><text x="59.5470%" y="271.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h731624bbe989dabeE.llvm.4780643635171514031 (195,354,311 samples, 0.30%)</title><rect x="59.0197%" y="309" width="0.3032%" height="15" fill="rgb(222,18,33)" fg:x="38027645287" fg:w="195354311"/><text x="59.2697%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,359,796 samples, 0.01%)</title><rect x="59.3099%" y="293" width="0.0130%" height="15" fill="rgb(213,199,7)" fg:x="38214639802" fg:w="8359796"/><text x="59.5599%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (8,359,796 samples, 0.01%)</title><rect x="59.3099%" y="277" width="0.0130%" height="15" fill="rgb(250,110,10)" fg:x="38214639802" fg:w="8359796"/><text x="59.5599%" y="287.50"></text></g><g><title>__GI___libc_free (25,024,282 samples, 0.04%)</title><rect x="59.3294%" y="293" width="0.0388%" height="15" fill="rgb(248,123,6)" fg:x="38227183575" fg:w="25024282"/><text x="59.5794%" y="303.50"></text></g><g><title>_int_free_maybe_consolidate (25,024,282 samples, 0.04%)</title><rect x="59.3294%" y="277" width="0.0388%" height="15" fill="rgb(206,91,31)" fg:x="38227183575" fg:w="25024282"/><text x="59.5794%" y="287.50"></text></g><g><title>malloc_consolidate (25,024,282 samples, 0.04%)</title><rect x="59.3294%" y="261" width="0.0388%" height="15" fill="rgb(211,154,13)" fg:x="38227183575" fg:w="25024282"/><text x="59.5794%" y="271.50"></text></g><g><title>unlink_chunk (12,527,394 samples, 0.02%)</title><rect x="59.3488%" y="245" width="0.0194%" height="15" fill="rgb(225,148,7)" fg:x="38239680463" fg:w="12527394"/><text x="59.5988%" y="255.50"></text></g><g><title>[unknown] (29,169,727 samples, 0.05%)</title><rect x="59.5098%" y="261" width="0.0453%" height="15" fill="rgb(220,160,43)" fg:x="38343474323" fg:w="29169727"/><text x="59.7598%" y="271.50"></text></g><g><title>[unknown] (16,626,555 samples, 0.03%)</title><rect x="59.5293%" y="245" width="0.0258%" height="15" fill="rgb(213,52,39)" fg:x="38356017495" fg:w="16626555"/><text x="59.7793%" y="255.50"></text></g><g><title>[unknown] (16,626,555 samples, 0.03%)</title><rect x="59.5293%" y="229" width="0.0258%" height="15" fill="rgb(243,137,7)" fg:x="38356017495" fg:w="16626555"/><text x="59.7793%" y="239.50"></text></g><g><title>[unknown] (16,626,555 samples, 0.03%)</title><rect x="59.5293%" y="213" width="0.0258%" height="15" fill="rgb(230,79,13)" fg:x="38356017495" fg:w="16626555"/><text x="59.7793%" y="223.50"></text></g><g><title>[unknown] (16,626,555 samples, 0.03%)</title><rect x="59.5293%" y="197" width="0.0258%" height="15" fill="rgb(247,105,23)" fg:x="38356017495" fg:w="16626555"/><text x="59.7793%" y="207.50"></text></g><g><title>[unknown] (16,626,555 samples, 0.03%)</title><rect x="59.5293%" y="181" width="0.0258%" height="15" fill="rgb(223,179,41)" fg:x="38356017495" fg:w="16626555"/><text x="59.7793%" y="191.50"></text></g><g><title>[unknown] (16,626,555 samples, 0.03%)</title><rect x="59.5293%" y="165" width="0.0258%" height="15" fill="rgb(218,9,34)" fg:x="38356017495" fg:w="16626555"/><text x="59.7793%" y="175.50"></text></g><g><title>[unknown] (12,552,462 samples, 0.02%)</title><rect x="59.5356%" y="149" width="0.0195%" height="15" fill="rgb(222,106,8)" fg:x="38360091588" fg:w="12552462"/><text x="59.7856%" y="159.50"></text></g><g><title>[unknown] (12,552,462 samples, 0.02%)</title><rect x="59.5356%" y="133" width="0.0195%" height="15" fill="rgb(211,220,0)" fg:x="38360091588" fg:w="12552462"/><text x="59.7856%" y="143.50"></text></g><g><title>[unknown] (8,462,894 samples, 0.01%)</title><rect x="59.5420%" y="117" width="0.0131%" height="15" fill="rgb(229,52,16)" fg:x="38364181156" fg:w="8462894"/><text x="59.7920%" y="127.50"></text></g><g><title>malloc_consolidate (37,274,499 samples, 0.06%)</title><rect x="59.5551%" y="229" width="0.0579%" height="15" fill="rgb(212,155,18)" fg:x="38372644050" fg:w="37274499"/><text x="59.8051%" y="239.50"></text></g><g><title>unlink_chunk (20,603,608 samples, 0.03%)</title><rect x="59.5810%" y="213" width="0.0320%" height="15" fill="rgb(242,21,14)" fg:x="38389314941" fg:w="20603608"/><text x="59.8310%" y="223.50"></text></g><g><title>__GI___libc_malloc (41,446,735 samples, 0.06%)</title><rect x="59.5551%" y="261" width="0.0643%" height="15" fill="rgb(222,19,48)" fg:x="38372644050" fg:w="41446735"/><text x="59.8051%" y="271.50"></text></g><g><title>_int_malloc (41,446,735 samples, 0.06%)</title><rect x="59.5551%" y="245" width="0.0643%" height="15" fill="rgb(232,45,27)" fg:x="38372644050" fg:w="41446735"/><text x="59.8051%" y="255.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h03e3fa1e86f88544E.llvm.9464877178135716140 (132,973,738 samples, 0.21%)</title><rect x="59.4582%" y="277" width="0.2064%" height="15" fill="rgb(249,103,42)" fg:x="38310180513" fg:w="132973738"/><text x="59.7082%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29,063,466 samples, 0.05%)</title><rect x="59.6194%" y="261" width="0.0451%" height="15" fill="rgb(246,81,33)" fg:x="38414090785" fg:w="29063466"/><text x="59.8694%" y="271.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17he69976d13d8f5112E.llvm.2957088687967014999 (253,539,397 samples, 0.39%)</title><rect x="59.3229%" y="309" width="0.3935%" height="15" fill="rgb(252,33,42)" fg:x="38222999598" fg:w="253539397"/><text x="59.5729%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (224,331,138 samples, 0.35%)</title><rect x="59.3682%" y="293" width="0.3482%" height="15" fill="rgb(209,212,41)" fg:x="38252207857" fg:w="224331138"/><text x="59.6182%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33,384,744 samples, 0.05%)</title><rect x="59.6646%" y="277" width="0.0518%" height="15" fill="rgb(207,154,6)" fg:x="38443154251" fg:w="33384744"/><text x="59.9146%" y="287.50"></text></g><g><title>__GI___libc_malloc (8,511,486 samples, 0.01%)</title><rect x="59.7164%" y="309" width="0.0132%" height="15" fill="rgb(223,64,47)" fg:x="38476538995" fg:w="8511486"/><text x="59.9664%" y="319.50"></text></g><g><title>_int_malloc (8,511,486 samples, 0.01%)</title><rect x="59.7164%" y="293" width="0.0132%" height="15" fill="rgb(211,161,38)" fg:x="38476538995" fg:w="8511486"/><text x="59.9664%" y="303.50"></text></g><g><title>grpc::client::load_balancing::LbState::initial (8,264,666 samples, 0.01%)</title><rect x="59.7296%" y="309" width="0.0128%" height="15" fill="rgb(219,138,40)" fg:x="38485050481" fg:w="8264666"/><text x="59.9796%" y="319.50"></text></g><g><title>__GI___libc_malloc (8,264,666 samples, 0.01%)</title><rect x="59.7296%" y="293" width="0.0128%" height="15" fill="rgb(241,228,46)" fg:x="38485050481" fg:w="8264666"/><text x="59.9796%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (1,129,832,514 samples, 1.75%)</title><rect x="58.1247%" y="325" width="1.7535%" height="15" fill="rgb(223,209,38)" fg:x="37450994800" fg:w="1129832514"/><text x="58.3747%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (87,512,167 samples, 0.14%)</title><rect x="59.7424%" y="309" width="0.1358%" height="15" fill="rgb(236,164,45)" fg:x="38493315147" fg:w="87512167"/><text x="59.9924%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (87,512,167 samples, 0.14%)</title><rect x="59.7424%" y="293" width="0.1358%" height="15" fill="rgb(231,15,5)" fg:x="38493315147" fg:w="87512167"/><text x="59.9924%" y="303.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (87,512,167 samples, 0.14%)</title><rect x="59.7424%" y="277" width="0.1358%" height="15" fill="rgb(252,35,15)" fg:x="38493315147" fg:w="87512167"/><text x="59.9924%" y="287.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h4884cc1a4d2303d3E.llvm.3660540333688232871 (74,996,425 samples, 0.12%)</title><rect x="59.7618%" y="261" width="0.1164%" height="15" fill="rgb(248,181,18)" fg:x="38505830889" fg:w="74996425"/><text x="60.0118%" y="271.50"></text></g><g><title>__GI___libc_malloc (54,013,539 samples, 0.08%)</title><rect x="59.8847%" y="325" width="0.0838%" height="15" fill="rgb(233,39,42)" fg:x="38584986253" fg:w="54013539"/><text x="60.1347%" y="335.50"></text></g><g><title>_int_malloc (37,494,681 samples, 0.06%)</title><rect x="59.9103%" y="309" width="0.0582%" height="15" fill="rgb(238,110,33)" fg:x="38601505111" fg:w="37494681"/><text x="60.1603%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (33,188,376 samples, 0.05%)</title><rect x="60.0593%" y="293" width="0.0515%" height="15" fill="rgb(233,195,10)" fg:x="38697520443" fg:w="33188376"/><text x="60.3093%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned (12,346,515 samples, 0.02%)</title><rect x="60.1949%" y="261" width="0.0192%" height="15" fill="rgb(254,105,3)" fg:x="38784849993" fg:w="12346515"/><text x="60.4449%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (137,073,593 samples, 0.21%)</title><rect x="60.1820%" y="277" width="0.2127%" height="15" fill="rgb(221,225,9)" fg:x="38776546032" fg:w="137073593"/><text x="60.4320%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (112,272,903 samples, 0.17%)</title><rect x="60.2205%" y="261" width="0.1742%" height="15" fill="rgb(224,227,45)" fg:x="38801346722" fg:w="112272903"/><text x="60.4705%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (108,033,257 samples, 0.17%)</title><rect x="60.2271%" y="245" width="0.1677%" height="15" fill="rgb(229,198,43)" fg:x="38805586368" fg:w="108033257"/><text x="60.4771%" y="255.50"></text></g><g><title>__GI___libc_malloc (99,636,423 samples, 0.15%)</title><rect x="60.2401%" y="229" width="0.1546%" height="15" fill="rgb(206,209,35)" fg:x="38813983202" fg:w="99636423"/><text x="60.4901%" y="239.50"></text></g><g><title>_int_malloc (74,589,857 samples, 0.12%)</title><rect x="60.2790%" y="213" width="0.1158%" height="15" fill="rgb(245,195,53)" fg:x="38839029768" fg:w="74589857"/><text x="60.5290%" y="223.50"></text></g><g><title>alloc::fmt::format::format_inner (328,613,769 samples, 0.51%)</title><rect x="59.9685%" y="325" width="0.5100%" height="15" fill="rgb(240,92,26)" fg:x="38638999792" fg:w="328613769"/><text x="60.2185%" y="335.50"></text></g><g><title>core::fmt::write (290,958,489 samples, 0.45%)</title><rect x="60.0270%" y="309" width="0.4516%" height="15" fill="rgb(207,40,23)" fg:x="38676655072" fg:w="290958489"/><text x="60.2770%" y="319.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (236,904,742 samples, 0.37%)</title><rect x="60.1108%" y="293" width="0.3677%" height="15" fill="rgb(223,111,35)" fg:x="38730708819" fg:w="236904742"/><text x="60.3608%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral (53,993,936 samples, 0.08%)</title><rect x="60.3947%" y="277" width="0.0838%" height="15" fill="rgb(229,147,28)" fg:x="38913619625" fg:w="53993936"/><text x="60.6447%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (16,599,387 samples, 0.03%)</title><rect x="60.4528%" y="261" width="0.0258%" height="15" fill="rgb(211,29,28)" fg:x="38951014174" fg:w="16599387"/><text x="60.7028%" y="271.50"></text></g><g><title>__GI_memcpy (12,578,990 samples, 0.02%)</title><rect x="60.4979%" y="261" width="0.0195%" height="15" fill="rgb(228,72,33)" fg:x="38980106661" fg:w="12578990"/><text x="60.7479%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,578,990 samples, 0.02%)</title><rect x="60.4979%" y="245" width="0.0195%" height="15" fill="rgb(205,214,31)" fg:x="38980106661" fg:w="12578990"/><text x="60.7479%" y="255.50"></text></g><g><title>_int_realloc (66,968,871 samples, 0.10%)</title><rect x="60.4979%" y="277" width="0.1039%" height="15" fill="rgb(224,111,15)" fg:x="38980106661" fg:w="66968871"/><text x="60.7479%" y="287.50"></text></g><g><title>_int_malloc (54,389,881 samples, 0.08%)</title><rect x="60.5174%" y="261" width="0.0844%" height="15" fill="rgb(253,21,26)" fg:x="38992685651" fg:w="54389881"/><text x="60.7674%" y="271.50"></text></g><g><title>malloc_consolidate (41,778,586 samples, 0.06%)</title><rect x="60.5370%" y="245" width="0.0648%" height="15" fill="rgb(245,139,43)" fg:x="39005296946" fg:w="41778586"/><text x="60.7870%" y="255.50"></text></g><g><title>unlink_chunk (16,681,088 samples, 0.03%)</title><rect x="60.5760%" y="229" width="0.0259%" height="15" fill="rgb(252,170,7)" fg:x="39030394444" fg:w="16681088"/><text x="60.8260%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (82,503,647 samples, 0.13%)</title><rect x="60.4785%" y="325" width="0.1280%" height="15" fill="rgb(231,118,14)" fg:x="38967613561" fg:w="82503647"/><text x="60.7285%" y="335.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (70,010,547 samples, 0.11%)</title><rect x="60.4979%" y="309" width="0.1087%" height="15" fill="rgb(238,83,0)" fg:x="38980106661" fg:w="70010547"/><text x="60.7479%" y="319.50"></text></g><g><title>__GI___libc_realloc (70,010,547 samples, 0.11%)</title><rect x="60.4979%" y="293" width="0.1087%" height="15" fill="rgb(221,39,39)" fg:x="38980106661" fg:w="70010547"/><text x="60.7479%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (41,440,712 samples, 0.06%)</title><rect x="63.3216%" y="277" width="0.0643%" height="15" fill="rgb(222,119,46)" fg:x="40799449075" fg:w="41440712"/><text x="63.5716%" y="287.50"></text></g><g><title>__rust_alloc (12,399,135 samples, 0.02%)</title><rect x="63.3989%" y="277" width="0.0192%" height="15" fill="rgb(222,165,49)" fg:x="40849268279" fg:w="12399135"/><text x="63.6489%" y="287.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (1,502,920,357 samples, 2.33%)</title><rect x="61.2466%" y="293" width="2.3326%" height="15" fill="rgb(219,113,52)" fg:x="39462514028" fg:w="1502920357"/><text x="61.4966%" y="303.50">&lt;..</text></g><g><title>core::hash::BuildHasher::hash_one (103,766,971 samples, 0.16%)</title><rect x="63.4181%" y="277" width="0.1610%" height="15" fill="rgb(214,7,15)" fg:x="40861667414" fg:w="103766971"/><text x="63.6681%" y="287.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33,191,866 samples, 0.05%)</title><rect x="63.6571%" y="277" width="0.0515%" height="15" fill="rgb(235,32,4)" fg:x="41015629761" fg:w="33191866"/><text x="63.9071%" y="287.50"></text></g><g><title>__GI___libc_free (16,684,711 samples, 0.03%)</title><rect x="63.7086%" y="277" width="0.0259%" height="15" fill="rgb(238,90,54)" fg:x="41048821627" fg:w="16684711"/><text x="63.9586%" y="287.50"></text></g><g><title>_int_free (8,324,009 samples, 0.01%)</title><rect x="63.7216%" y="261" width="0.0129%" height="15" fill="rgb(213,208,19)" fg:x="41057182329" fg:w="8324009"/><text x="63.9716%" y="271.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17he69976d13d8f5112E.llvm.2957088687967014999 (137,604,050 samples, 0.21%)</title><rect x="63.5792%" y="293" width="0.2136%" height="15" fill="rgb(233,156,4)" fg:x="40965434385" fg:w="137604050"/><text x="63.8292%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (33,367,698 samples, 0.05%)</title><rect x="63.7410%" y="277" width="0.0518%" height="15" fill="rgb(207,194,5)" fg:x="41069670737" fg:w="33367698"/><text x="63.9910%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (1,831,884,842 samples, 2.84%)</title><rect x="61.0401%" y="309" width="2.8431%" height="15" fill="rgb(206,111,30)" fg:x="39329446434" fg:w="1831884842"/><text x="61.2901%" y="319.50">&lt;g..</text></g><g><title>core::hash::BuildHasher::hash_one (58,292,841 samples, 0.09%)</title><rect x="63.7927%" y="293" width="0.0905%" height="15" fill="rgb(243,70,54)" fg:x="41103038435" fg:w="58292841"/><text x="64.0427%" y="303.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (62,847,227 samples, 0.10%)</title><rect x="63.8832%" y="309" width="0.0975%" height="15" fill="rgb(242,28,8)" fg:x="41161331276" fg:w="62847227"/><text x="64.1332%" y="319.50"></text></g><g><title>__GI___libc_malloc (37,293,987 samples, 0.06%)</title><rect x="84.0300%" y="277" width="0.0579%" height="15" fill="rgb(219,106,18)" fg:x="54142364039" fg:w="37293987"/><text x="84.2800%" y="287.50"></text></g><g><title>tcache_get (24,797,630 samples, 0.04%)</title><rect x="84.0494%" y="261" width="0.0385%" height="15" fill="rgb(244,222,10)" fg:x="54154860396" fg:w="24797630"/><text x="84.2994%" y="271.50"></text></g><g><title>tcache_get_n (24,797,630 samples, 0.04%)</title><rect x="84.0494%" y="245" width="0.0385%" height="15" fill="rgb(236,179,52)" fg:x="54154860396" fg:w="24797630"/><text x="84.2994%" y="255.50"></text></g><g><title>__rdl_alloc (8,313,932 samples, 0.01%)</title><rect x="84.0879%" y="277" width="0.0129%" height="15" fill="rgb(213,23,39)" fg:x="54179658026" fg:w="8313932"/><text x="84.3379%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned (16,612,053 samples, 0.03%)</title><rect x="85.1280%" y="197" width="0.0258%" height="15" fill="rgb(238,48,10)" fg:x="54849793011" fg:w="16612053"/><text x="85.3780%" y="207.50"></text></g><g><title>__GI_memcpy (358,363,783 samples, 0.56%)</title><rect x="85.1087%" y="213" width="0.5562%" height="15" fill="rgb(251,196,23)" fg:x="54837354117" fg:w="358363783"/><text x="85.3587%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned_erms (329,312,836 samples, 0.51%)</title><rect x="85.1538%" y="197" width="0.5111%" height="15" fill="rgb(250,152,24)" fg:x="54866405064" fg:w="329312836"/><text x="85.4038%" y="207.50"></text></g><g><title>_int_free (62,520,659 samples, 0.10%)</title><rect x="85.6649%" y="213" width="0.0970%" height="15" fill="rgb(209,150,17)" fg:x="55195717900" fg:w="62520659"/><text x="85.9149%" y="223.50"></text></g><g><title>_int_free_create_chunk (116,594,485 samples, 0.18%)</title><rect x="85.9109%" y="197" width="0.1810%" height="15" fill="rgb(234,202,34)" fg:x="55354250984" fg:w="116594485"/><text x="86.1609%" y="207.50"></text></g><g><title>unlink_chunk (29,327,210 samples, 0.05%)</title><rect x="86.0464%" y="181" width="0.0455%" height="15" fill="rgb(253,148,53)" fg:x="55441518259" fg:w="29327210"/><text x="86.2964%" y="191.50"></text></g><g><title>_int_free_merge_chunk (216,788,286 samples, 0.34%)</title><rect x="85.7619%" y="213" width="0.3365%" height="15" fill="rgb(218,129,16)" fg:x="55258238559" fg:w="216788286"/><text x="86.0119%" y="223.50"></text></g><g><title>_int_malloc (549,843,478 samples, 0.85%)</title><rect x="86.0984%" y="213" width="0.8534%" height="15" fill="rgb(216,85,19)" fg:x="55475026845" fg:w="549843478"/><text x="86.3484%" y="223.50"></text></g><g><title>unlink_chunk (95,798,950 samples, 0.15%)</title><rect x="86.8031%" y="197" width="0.1487%" height="15" fill="rgb(235,228,7)" fg:x="55929071373" fg:w="95798950"/><text x="87.0531%" y="207.50"></text></g><g><title>_int_realloc (1,370,750,092 samples, 2.13%)</title><rect x="84.8500%" y="229" width="2.1274%" height="15" fill="rgb(245,175,0)" fg:x="54670687098" fg:w="1370750092"/><text x="85.1000%" y="239.50">_..</text></g><g><title>unlink_chunk (16,566,867 samples, 0.03%)</title><rect x="86.9517%" y="213" width="0.0257%" height="15" fill="rgb(208,168,36)" fg:x="56024870323" fg:w="16566867"/><text x="87.2017%" y="223.50"></text></g><g><title>__GI___libc_realloc (1,575,099,461 samples, 2.44%)</title><rect x="84.5717%" y="245" width="2.4446%" height="15" fill="rgb(246,171,24)" fg:x="54491356068" fg:w="1575099461"/><text x="84.8217%" y="255.50">__..</text></g><g><title>musable (20,865,995 samples, 0.03%)</title><rect x="86.9839%" y="229" width="0.0324%" height="15" fill="rgb(215,142,24)" fg:x="56045589534" fg:w="20865995"/><text x="87.2339%" y="239.50"></text></g><g><title>__rdl_realloc (58,314,968 samples, 0.09%)</title><rect x="87.0163%" y="245" width="0.0905%" height="15" fill="rgb(250,187,7)" fg:x="56066455529" fg:w="58314968"/><text x="87.2663%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (10,786,677,092 samples, 16.74%)</title><rect x="70.3721%" y="293" width="16.7411%" height="15" fill="rgb(228,66,33)" fg:x="45342241219" fg:w="10786677092"/><text x="70.6221%" y="303.50">&lt;alloc::vec::Vec&lt;T&gt; as all..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (1,936,764,130 samples, 3.01%)</title><rect x="84.1073%" y="277" width="3.0059%" height="15" fill="rgb(234,215,21)" fg:x="54192154181" fg:w="1936764130"/><text x="84.3573%" y="287.50">all..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (1,778,926,997 samples, 2.76%)</title><rect x="84.3523%" y="261" width="2.7609%" height="15" fill="rgb(222,191,20)" fg:x="54349991314" fg:w="1778926997"/><text x="84.6023%" y="271.50">_Z..</text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (66,555,640 samples, 0.10%)</title><rect x="87.1132%" y="293" width="0.1033%" height="15" fill="rgb(245,79,54)" fg:x="56128918311" fg:w="66555640"/><text x="87.3632%" y="303.50"></text></g><g><title>_int_free (45,959,276 samples, 0.07%)</title><rect x="87.2618%" y="277" width="0.0713%" height="15" fill="rgb(240,10,37)" fg:x="56224650240" fg:w="45959276"/><text x="87.5118%" y="287.50"></text></g><g><title>_int_free_merge_chunk (29,251,517 samples, 0.05%)</title><rect x="87.3331%" y="277" width="0.0454%" height="15" fill="rgb(214,192,32)" fg:x="56270609516" fg:w="29251517"/><text x="87.5831%" y="287.50"></text></g><g><title>_int_free_create_chunk (16,677,040 samples, 0.03%)</title><rect x="87.3526%" y="261" width="0.0259%" height="15" fill="rgb(209,36,54)" fg:x="56283183993" fg:w="16677040"/><text x="87.6026%" y="271.50"></text></g><g><title>__GI___libc_free (104,348,646 samples, 0.16%)</title><rect x="87.2230%" y="293" width="0.1620%" height="15" fill="rgb(220,10,11)" fg:x="56199663996" fg:w="104348646"/><text x="87.4730%" y="303.50"></text></g><g><title>_int_malloc (275,389,524 samples, 0.43%)</title><rect x="87.4948%" y="277" width="0.4274%" height="15" fill="rgb(221,106,17)" fg:x="56374777527" fg:w="275389524"/><text x="87.7448%" y="287.50"></text></g><g><title>unlink_chunk (33,260,116 samples, 0.05%)</title><rect x="87.8706%" y="261" width="0.0516%" height="15" fill="rgb(251,142,44)" fg:x="56616906935" fg:w="33260116"/><text x="88.1206%" y="271.50"></text></g><g><title>__GI___libc_malloc (350,318,170 samples, 0.54%)</title><rect x="87.3850%" y="293" width="0.5437%" height="15" fill="rgb(238,13,15)" fg:x="56304012642" fg:w="350318170"/><text x="87.6350%" y="303.50"></text></g><g><title>__rust_alloc (41,630,624 samples, 0.06%)</title><rect x="87.9352%" y="293" width="0.0646%" height="15" fill="rgb(208,107,27)" fg:x="56658514280" fg:w="41630624"/><text x="88.1852%" y="303.50"></text></g><g><title>_int_free (12,483,877 samples, 0.02%)</title><rect x="88.0577%" y="261" width="0.0194%" height="15" fill="rgb(205,136,37)" fg:x="56737471017" fg:w="12483877"/><text x="88.3077%" y="271.50"></text></g><g><title>__GI___libc_free (33,253,129 samples, 0.05%)</title><rect x="88.0513%" y="277" width="0.0516%" height="15" fill="rgb(250,205,27)" fg:x="56733352307" fg:w="33253129"/><text x="88.3013%" y="287.50"></text></g><g><title>_int_free_merge_chunk (16,650,542 samples, 0.03%)</title><rect x="88.0771%" y="261" width="0.0258%" height="15" fill="rgb(210,80,43)" fg:x="56749954894" fg:w="16650542"/><text x="88.3271%" y="271.50"></text></g><g><title>_int_free_create_chunk (8,336,799 samples, 0.01%)</title><rect x="88.0900%" y="245" width="0.0129%" height="15" fill="rgb(247,160,36)" fg:x="56758268637" fg:w="8336799"/><text x="88.3400%" y="255.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h9f7b29ce195bd27dE.llvm.4780643635171514031 (22,797,851,311 samples, 35.38%)</title><rect x="63.9808%" y="309" width="35.3827%" height="15" fill="rgb(234,13,49)" fg:x="41224178503" fg:w="22797851311"/><text x="64.2308%" y="319.50">_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_pic..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (7,317,700,026 samples, 11.36%)</title><rect x="88.0063%" y="293" width="11.3572%" height="15" fill="rgb(234,122,0)" fg:x="56704329788" fg:w="7317700026"/><text x="88.2563%" y="303.50">alloc::sync::Arc&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::RRPickerPicker&gt; (7,255,424,378 samples, 11.26%)</title><rect x="88.1029%" y="277" width="11.2606%" height="15" fill="rgb(207,146,38)" fg:x="56766605436" fg:w="7255424378"/><text x="88.3529%" y="287.50">core::ptr::drop_i..</text></g><g><title>rand::rng::Rng::gen_range (37,484,175 samples, 0.06%)</title><rect x="99.3635%" y="309" width="0.0582%" height="15" fill="rgb(207,177,25)" fg:x="64022029814" fg:w="37484175"/><text x="99.6135%" y="319.50"></text></g><g><title>bencher::Bencher::iter (25,034,365,721 samples, 38.85%)</title><rect x="60.6066%" y="325" width="38.8538%" height="15" fill="rgb(211,178,42)" fg:x="39050117208" fg:w="25034365721"/><text x="60.8566%" y="335.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (20,770,565 samples, 0.03%)</title><rect x="99.4282%" y="309" width="0.0322%" height="15" fill="rgb(230,69,54)" fg:x="64063712364" fg:w="20770565"/><text x="99.6782%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,581,352 samples, 0.03%)</title><rect x="99.4604%" y="309" width="0.0319%" height="15" fill="rgb(214,135,41)" fg:x="64084482929" fg:w="20581352"/><text x="99.7104%" y="319.50"></text></g><g><title>__GI___libc_free (24,897,287 samples, 0.04%)</title><rect x="99.5504%" y="277" width="0.0386%" height="15" fill="rgb(237,67,25)" fg:x="64142486818" fg:w="24897287"/><text x="99.8004%" y="287.50"></text></g><g><title>_int_free (16,526,428 samples, 0.03%)</title><rect x="99.5634%" y="261" width="0.0256%" height="15" fill="rgb(222,189,50)" fg:x="64150857677" fg:w="16526428"/><text x="99.8134%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (83,047,068 samples, 0.13%)</title><rect x="99.5118%" y="293" width="0.1289%" height="15" fill="rgb(245,148,34)" fg:x="64117572483" fg:w="83047068"/><text x="99.7618%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (33,235,446 samples, 0.05%)</title><rect x="99.5891%" y="277" width="0.0516%" height="15" fill="rgb(222,29,6)" fg:x="64167384105" fg:w="33235446"/><text x="99.8391%" y="287.50"></text></g><g><title>_int_free (24,630,794 samples, 0.04%)</title><rect x="99.6532%" y="277" width="0.0382%" height="15" fill="rgb(221,189,43)" fg:x="64208721965" fg:w="24630794"/><text x="99.9032%" y="287.50"></text></g><g><title>_int_free_maybe_consolidate (148,420,580 samples, 0.23%)</title><rect x="99.6915%" y="277" width="0.2304%" height="15" fill="rgb(207,36,27)" fg:x="64233352759" fg:w="148420580"/><text x="99.9415%" y="287.50"></text></g><g><title>malloc_consolidate (148,420,580 samples, 0.23%)</title><rect x="99.6915%" y="261" width="0.2304%" height="15" fill="rgb(217,90,24)" fg:x="64233352759" fg:w="148420580"/><text x="99.9415%" y="271.50"></text></g><g><title>unlink_chunk (33,397,261 samples, 0.05%)</title><rect x="99.8700%" y="245" width="0.0518%" height="15" fill="rgb(224,66,35)" fg:x="64348376078" fg:w="33397261"/><text x="100.1200%" y="255.50"></text></g><g><title>__GI___libc_free (185,235,229 samples, 0.29%)</title><rect x="99.6407%" y="293" width="0.2875%" height="15" fill="rgb(221,13,50)" fg:x="64200619551" fg:w="185235229"/><text x="99.8907%" y="303.50"></text></g><g><title>__libc_start_main_impl (64,358,106,364 samples, 99.89%)</title><rect x="0.0558%" y="485" width="99.8851%" height="15" fill="rgb(236,68,49)" fg:x="35974267" fg:w="64358106364"/><text x="0.3058%" y="495.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (64,358,106,364 samples, 99.89%)</title><rect x="0.0558%" y="469" width="99.8851%" height="15" fill="rgb(229,146,28)" fg:x="35974267" fg:w="64358106364"/><text x="0.3058%" y="479.50">__libc_start_call_main</text></g><g><title>main (64,358,106,364 samples, 99.89%)</title><rect x="0.0558%" y="453" width="99.8851%" height="15" fill="rgb(225,31,38)" fg:x="35974267" fg:w="64358106364"/><text x="0.3058%" y="463.50">main</text></g><g><title>std::rt::lang_start_internal (64,358,106,364 samples, 99.89%)</title><rect x="0.0558%" y="437" width="99.8851%" height="15" fill="rgb(250,208,3)" fg:x="35974267" fg:w="64358106364"/><text x="0.3058%" y="447.50">std::rt::lang_start_internal</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha3c3a5ccd7c12df4E.llvm.4008388692433172374 (64,358,106,364 samples, 99.89%)</title><rect x="0.0558%" y="421" width="99.8851%" height="15" fill="rgb(246,54,23)" fg:x="35974267" fg:w="64358106364"/><text x="0.3058%" y="431.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha3c3a5ccd7c12df4E.llvm.4008388692433172374</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (64,358,106,364 samples, 99.89%)</title><rect x="0.0558%" y="405" width="99.8851%" height="15" fill="rgb(243,76,11)" fg:x="35974267" fg:w="64358106364"/><text x="0.3058%" y="415.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lb_apis::main (64,358,106,364 samples, 99.89%)</title><rect x="0.0558%" y="389" width="99.8851%" height="15" fill="rgb(245,21,50)" fg:x="35974267" fg:w="64358106364"/><text x="0.3058%" y="399.50">lb_apis::main</text></g><g><title>bencher::run_tests_console (64,358,106,364 samples, 99.89%)</title><rect x="0.0558%" y="373" width="99.8851%" height="15" fill="rgb(228,9,43)" fg:x="35974267" fg:w="64358106364"/><text x="0.3058%" y="383.50">bencher::run_tests_console</text></g><g><title>bencher::Bencher::auto_bench (64,358,106,364 samples, 99.89%)</title><rect x="0.0558%" y="357" width="99.8851%" height="15" fill="rgb(208,100,47)" fg:x="35974267" fg:w="64358106364"/><text x="0.3058%" y="367.50">bencher::Bencher::auto_bench</text></g><g><title>lb_apis::single (27,021,875,620 samples, 41.94%)</title><rect x="58.0024%" y="341" width="41.9385%" height="15" fill="rgb(232,26,8)" fg:x="37372205011" fg:w="27021875620"/><text x="58.2524%" y="351.50">lb_apis::single</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::DelegatingPolicy&gt; (309,597,702 samples, 0.48%)</title><rect x="99.4604%" y="325" width="0.4805%" height="15" fill="rgb(216,166,38)" fg:x="64084482929" fg:w="309597702"/><text x="99.7104%" y="335.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h6fd88c756eedc8fdE.llvm.13391218907786022700 (289,016,350 samples, 0.45%)</title><rect x="99.4924%" y="309" width="0.4486%" height="15" fill="rgb(251,202,51)" fg:x="64105064281" fg:w="289016350"/><text x="99.7424%" y="319.50"></text></g><g><title>__rdl_dealloc (8,225,851 samples, 0.01%)</title><rect x="99.9282%" y="293" width="0.0128%" height="15" fill="rgb(254,216,34)" fg:x="64385854780" fg:w="8225851"/><text x="100.1782%" y="303.50"></text></g><g><title>_start (64,359,821,941 samples, 99.89%)</title><rect x="0.0558%" y="501" width="99.8877%" height="15" fill="rgb(251,32,27)" fg:x="35974266" fg:w="64359821941"/><text x="0.3058%" y="511.50">_start</text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15,768,191 samples, 0.02%)</title><rect x="99.9564%" y="485" width="0.0245%" height="15" fill="rgb(208,127,28)" fg:x="64404083964" fg:w="15768191"/><text x="100.2064%" y="495.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (19,912,635 samples, 0.03%)</title><rect x="99.9564%" y="501" width="0.0309%" height="15" fill="rgb(224,137,22)" fg:x="64404083964" fg:w="19912635"/><text x="100.2064%" y="511.50"></text></g><g><title>all (64,432,149,190 samples, 100%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(254,70,32)" fg:x="0" fg:w="64432149190"/><text x="0.2500%" y="543.50"></text></g><g><title>lb_apis-7aa6005 (64,432,149,190 samples, 100.00%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(229,75,37)" fg:x="0" fg:w="64432149190"/><text x="0.2500%" y="527.50">lb_apis-7aa6005</text></g><g><title>std::panicking::HOOK (8,152,591 samples, 0.01%)</title><rect x="99.9873%" y="501" width="0.0127%" height="15" fill="rgb(252,64,23)" fg:x="64423996599" fg:w="8152591"/><text x="100.2373%" y="511.50"></text></g><g><title>__GI___libc_free (8,152,591 samples, 0.01%)</title><rect x="99.9873%" y="485" width="0.0127%" height="15" fill="rgb(232,162,48)" fg:x="64423996599" fg:w="8152591"/><text x="100.2373%" y="495.50"></text></g><g><title>_int_malloc (8,152,591 samples, 0.01%)</title><rect x="99.9873%" y="469" width="0.0127%" height="15" fill="rgb(246,160,12)" fg:x="64423996599" fg:w="8152591"/><text x="100.2373%" y="479.50"></text></g></svg></svg>