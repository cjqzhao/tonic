<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="550" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="533.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="533.00"> </text><svg id="frames" x="10" width="1180" total_samples="39839149033"><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (20,379,987 samples, 0.05%)</title><rect x="0.0000%" y="469" width="0.0512%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="20379987"/><text x="0.2500%" y="479.50"></text></g><g><title>__GI___libc_malloc (20,379,987 samples, 0.05%)</title><rect x="0.0000%" y="453" width="0.0512%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="20379987"/><text x="0.2500%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4,152,922 samples, 0.01%)</title><rect x="0.0512%" y="469" width="0.0104%" height="15" fill="rgb(221,193,54)" fg:x="20379987" fg:w="4152922"/><text x="0.3012%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (4,152,922 samples, 0.01%)</title><rect x="0.0512%" y="453" width="0.0104%" height="15" fill="rgb(248,212,6)" fg:x="20379987" fg:w="4152922"/><text x="0.3012%" y="463.50"></text></g><g><title>__GI___libc_malloc (4,188,116 samples, 0.01%)</title><rect x="0.3955%" y="229" width="0.0105%" height="15" fill="rgb(208,68,35)" fg:x="157581207" fg:w="4188116"/><text x="0.6455%" y="239.50"></text></g><g><title>tcache_get (4,188,116 samples, 0.01%)</title><rect x="0.3955%" y="213" width="0.0105%" height="15" fill="rgb(232,128,0)" fg:x="157581207" fg:w="4188116"/><text x="0.6455%" y="223.50"></text></g><g><title>tcache_get_n (4,188,116 samples, 0.01%)</title><rect x="0.3955%" y="197" width="0.0105%" height="15" fill="rgb(207,160,47)" fg:x="157581207" fg:w="4188116"/><text x="0.6455%" y="207.50"></text></g><g><title>__rust_alloc (4,175,675 samples, 0.01%)</title><rect x="0.4061%" y="229" width="0.0105%" height="15" fill="rgb(228,23,34)" fg:x="161769323" fg:w="4175675"/><text x="0.6561%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (5,807,677 samples, 0.01%)</title><rect x="0.4165%" y="229" width="0.0146%" height="15" fill="rgb(218,30,26)" fg:x="165944998" fg:w="5807677"/><text x="0.6665%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.7623550346864670336 (5,807,677 samples, 0.01%)</title><rect x="0.4165%" y="213" width="0.0146%" height="15" fill="rgb(220,122,19)" fg:x="165944998" fg:w="5807677"/><text x="0.6665%" y="223.50"></text></g><g><title>__GI___libc_realloc (5,807,677 samples, 0.01%)</title><rect x="0.4165%" y="197" width="0.0146%" height="15" fill="rgb(250,228,42)" fg:x="165944998" fg:w="5807677"/><text x="0.6665%" y="207.50"></text></g><g><title>_int_realloc (5,807,677 samples, 0.01%)</title><rect x="0.4165%" y="181" width="0.0146%" height="15" fill="rgb(240,193,28)" fg:x="165944998" fg:w="5807677"/><text x="0.6665%" y="191.50"></text></g><g><title>_int_malloc (4,158,975 samples, 0.01%)</title><rect x="0.4207%" y="165" width="0.0104%" height="15" fill="rgb(216,20,37)" fg:x="167593700" fg:w="4158975"/><text x="0.6707%" y="175.50"></text></g><g><title>malloc_consolidate (4,158,975 samples, 0.01%)</title><rect x="0.4207%" y="149" width="0.0104%" height="15" fill="rgb(206,188,39)" fg:x="167593700" fg:w="4158975"/><text x="0.6707%" y="159.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (22,513,883 samples, 0.06%)</title><rect x="0.3851%" y="245" width="0.0565%" height="15" fill="rgb(217,207,13)" fg:x="153429904" fg:w="22513883"/><text x="0.6351%" y="255.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (4,191,112 samples, 0.01%)</title><rect x="0.4311%" y="229" width="0.0105%" height="15" fill="rgb(231,73,38)" fg:x="171752675" fg:w="4191112"/><text x="0.6811%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (47,410,102 samples, 0.12%)</title><rect x="0.3330%" y="261" width="0.1190%" height="15" fill="rgb(225,20,46)" fg:x="132665622" fg:w="47410102"/><text x="0.5830%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4,131,937 samples, 0.01%)</title><rect x="0.4416%" y="245" width="0.0104%" height="15" fill="rgb(210,31,41)" fg:x="175943787" fg:w="4131937"/><text x="0.6916%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (4,131,937 samples, 0.01%)</title><rect x="0.4416%" y="229" width="0.0104%" height="15" fill="rgb(221,200,47)" fg:x="175943787" fg:w="4131937"/><text x="0.6916%" y="239.50"></text></g><g><title>_int_free (30,422,311 samples, 0.08%)</title><rect x="0.4834%" y="245" width="0.0764%" height="15" fill="rgb(226,26,5)" fg:x="192589484" fg:w="30422311"/><text x="0.7334%" y="255.50"></text></g><g><title>__GI___libc_free (47,076,852 samples, 0.12%)</title><rect x="0.4520%" y="261" width="0.1182%" height="15" fill="rgb(249,33,26)" fg:x="180075724" fg:w="47076852"/><text x="0.7020%" y="271.50"></text></g><g><title>arena_for_chunk (4,140,781 samples, 0.01%)</title><rect x="0.5598%" y="245" width="0.0104%" height="15" fill="rgb(235,183,28)" fg:x="223011795" fg:w="4140781"/><text x="0.8098%" y="255.50"></text></g><g><title>__rdl_dealloc (8,391,261 samples, 0.02%)</title><rect x="0.5702%" y="261" width="0.0211%" height="15" fill="rgb(221,5,38)" fg:x="227152576" fg:w="8391261"/><text x="0.8202%" y="271.50"></text></g><g><title>__rust_dealloc (8,380,277 samples, 0.02%)</title><rect x="0.5912%" y="261" width="0.0210%" height="15" fill="rgb(247,18,42)" fg:x="235543837" fg:w="8380277"/><text x="0.8412%" y="271.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::connect (4,181,311 samples, 0.01%)</title><rect x="0.6123%" y="261" width="0.0105%" height="15" fill="rgb(241,131,45)" fg:x="243924114" fg:w="4181311"/><text x="0.8623%" y="271.50"></text></g><g><title>alloc_perturb (4,205,177 samples, 0.01%)</title><rect x="0.7758%" y="197" width="0.0106%" height="15" fill="rgb(249,31,29)" fg:x="309074738" fg:w="4205177"/><text x="1.0258%" y="207.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.8629370553447058674 (45,893,929 samples, 0.12%)</title><rect x="0.6920%" y="245" width="0.1152%" height="15" fill="rgb(225,111,53)" fg:x="275686002" fg:w="45893929"/><text x="0.9420%" y="255.50"></text></g><g><title>__GI___libc_malloc (37,650,113 samples, 0.09%)</title><rect x="0.7127%" y="229" width="0.0945%" height="15" fill="rgb(238,160,17)" fg:x="283929818" fg:w="37650113"/><text x="0.9627%" y="239.50"></text></g><g><title>_int_malloc (37,650,113 samples, 0.09%)</title><rect x="0.7127%" y="213" width="0.0945%" height="15" fill="rgb(214,148,48)" fg:x="283929818" fg:w="37650113"/><text x="0.9627%" y="223.50"></text></g><g><title>unlink_chunk (8,300,016 samples, 0.02%)</title><rect x="0.7864%" y="197" width="0.0208%" height="15" fill="rgb(232,36,49)" fg:x="313279915" fg:w="8300016"/><text x="1.0364%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (98,446,202 samples, 0.25%)</title><rect x="0.6228%" y="261" width="0.2471%" height="15" fill="rgb(209,103,24)" fg:x="248105425" fg:w="98446202"/><text x="0.8728%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24,971,696 samples, 0.06%)</title><rect x="0.8072%" y="245" width="0.0627%" height="15" fill="rgb(229,88,8)" fg:x="321579931" fg:w="24971696"/><text x="1.0572%" y="255.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.2597197333346081462 (4,153,448 samples, 0.01%)</title><rect x="0.8595%" y="229" width="0.0104%" height="15" fill="rgb(213,181,19)" fg:x="342398179" fg:w="4153448"/><text x="1.1095%" y="239.50"></text></g><g><title>&lt;lb_apis::child_policy::ChildPolicy as grpc::client::load_balancing::LbPolicy&gt;::resolver_update (255,449,530 samples, 0.64%)</title><rect x="0.2496%" y="277" width="0.6412%" height="15" fill="rgb(254,191,54)" fg:x="99440135" fg:w="255449530"/><text x="0.4996%" y="287.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (8,338,038 samples, 0.02%)</title><rect x="0.8699%" y="261" width="0.0209%" height="15" fill="rgb(241,83,37)" fg:x="346551627" fg:w="8338038"/><text x="1.1199%" y="271.50"></text></g><g><title>__GI___libc_malloc (12,500,426 samples, 0.03%)</title><rect x="0.9536%" y="261" width="0.0314%" height="15" fill="rgb(233,36,39)" fg:x="379921080" fg:w="12500426"/><text x="1.2036%" y="271.50"></text></g><g><title>_int_malloc (8,351,433 samples, 0.02%)</title><rect x="0.9641%" y="245" width="0.0210%" height="15" fill="rgb(226,3,54)" fg:x="384070073" fg:w="8351433"/><text x="1.2141%" y="255.50"></text></g><g><title>&lt;lb_apis::child_policy::ChildPolicyBuilder as grpc::client::load_balancing::LbPolicyBuilder&gt;::build (50,021,883 samples, 0.13%)</title><rect x="0.8908%" y="277" width="0.1256%" height="15" fill="rgb(245,192,40)" fg:x="354889665" fg:w="50021883"/><text x="1.1408%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (12,490,042 samples, 0.03%)</title><rect x="0.9850%" y="261" width="0.0314%" height="15" fill="rgb(238,167,29)" fg:x="392421506" fg:w="12490042"/><text x="1.2350%" y="271.50"></text></g><g><title>__GI___libc_malloc (37,514,888 samples, 0.09%)</title><rect x="1.1898%" y="229" width="0.0942%" height="15" fill="rgb(232,182,51)" fg:x="474019177" fg:w="37514888"/><text x="1.4398%" y="239.50"></text></g><g><title>_int_malloc (20,727,436 samples, 0.05%)</title><rect x="1.2320%" y="213" width="0.0520%" height="15" fill="rgb(231,60,39)" fg:x="490806629" fg:w="20727436"/><text x="1.4820%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (58,374,735 samples, 0.15%)</title><rect x="1.1585%" y="245" width="0.1465%" height="15" fill="rgb(208,69,12)" fg:x="461539960" fg:w="58374735"/><text x="1.4085%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,380,630 samples, 0.02%)</title><rect x="1.2840%" y="229" width="0.0210%" height="15" fill="rgb(235,93,37)" fg:x="511534065" fg:w="8380630"/><text x="1.5340%" y="239.50"></text></g><g><title>__GI___libc_malloc (4,115,762 samples, 0.01%)</title><rect x="1.3050%" y="245" width="0.0103%" height="15" fill="rgb(213,116,39)" fg:x="519914695" fg:w="4115762"/><text x="1.5550%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (104,049,317 samples, 0.26%)</title><rect x="1.0645%" y="261" width="0.2612%" height="15" fill="rgb(222,207,29)" fg:x="424094787" fg:w="104049317"/><text x="1.3145%" y="271.50"></text></g><g><title>__rdl_alloc (4,113,647 samples, 0.01%)</title><rect x="1.3154%" y="245" width="0.0103%" height="15" fill="rgb(206,96,30)" fg:x="524030457" fg:w="4113647"/><text x="1.5654%" y="255.50"></text></g><g><title>__GI___libc_malloc (12,516,042 samples, 0.03%)</title><rect x="1.3677%" y="229" width="0.0314%" height="15" fill="rgb(218,138,4)" fg:x="544881841" fg:w="12516042"/><text x="1.6177%" y="239.50"></text></g><g><title>_int_malloc (12,516,042 samples, 0.03%)</title><rect x="1.3677%" y="213" width="0.0314%" height="15" fill="rgb(250,191,14)" fg:x="544881841" fg:w="12516042"/><text x="1.6177%" y="223.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h97a0514209a890f3E.llvm.6810588386109608260 (160,892,912 samples, 0.40%)</title><rect x="1.0164%" y="277" width="0.4039%" height="15" fill="rgb(239,60,40)" fg:x="404911548" fg:w="160892912"/><text x="1.2664%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (37,660,356 samples, 0.09%)</title><rect x="1.3257%" y="261" width="0.0945%" height="15" fill="rgb(206,27,48)" fg:x="528144104" fg:w="37660356"/><text x="1.5757%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.7623550346864670336 (25,054,644 samples, 0.06%)</title><rect x="1.3573%" y="245" width="0.0629%" height="15" fill="rgb(225,35,8)" fg:x="540749816" fg:w="25054644"/><text x="1.6073%" y="255.50"></text></g><g><title>__GI___libc_realloc (8,406,577 samples, 0.02%)</title><rect x="1.3991%" y="229" width="0.0211%" height="15" fill="rgb(250,213,24)" fg:x="557397883" fg:w="8406577"/><text x="1.6491%" y="239.50"></text></g><g><title>_int_realloc (8,406,577 samples, 0.02%)</title><rect x="1.3991%" y="213" width="0.0211%" height="15" fill="rgb(247,123,22)" fg:x="557397883" fg:w="8406577"/><text x="1.6491%" y="223.50"></text></g><g><title>_int_malloc (8,406,577 samples, 0.02%)</title><rect x="1.3991%" y="197" width="0.0211%" height="15" fill="rgb(231,138,38)" fg:x="557397883" fg:w="8406577"/><text x="1.6491%" y="207.50"></text></g><g><title>unlink_chunk (4,209,685 samples, 0.01%)</title><rect x="1.4097%" y="181" width="0.0106%" height="15" fill="rgb(231,145,46)" fg:x="561594775" fg:w="4209685"/><text x="1.6597%" y="191.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,186,406 samples, 0.01%)</title><rect x="1.4517%" y="261" width="0.0105%" height="15" fill="rgb(251,118,11)" fg:x="578349807" fg:w="4186406"/><text x="1.7017%" y="271.50"></text></g><g><title>__GI___libc_free (12,506,049 samples, 0.03%)</title><rect x="1.4622%" y="261" width="0.0314%" height="15" fill="rgb(217,147,25)" fg:x="582536213" fg:w="12506049"/><text x="1.7122%" y="271.50"></text></g><g><title>_int_free (4,211,447 samples, 0.01%)</title><rect x="1.4830%" y="245" width="0.0106%" height="15" fill="rgb(247,81,37)" fg:x="590830815" fg:w="4211447"/><text x="1.7330%" y="255.50"></text></g><g><title>__GI___libc_malloc (25,003,061 samples, 0.06%)</title><rect x="1.5988%" y="229" width="0.0628%" height="15" fill="rgb(209,12,38)" fg:x="636935885" fg:w="25003061"/><text x="1.8488%" y="239.50"></text></g><g><title>_int_malloc (25,003,061 samples, 0.06%)</title><rect x="1.5988%" y="213" width="0.0628%" height="15" fill="rgb(227,1,9)" fg:x="636935885" fg:w="25003061"/><text x="1.8488%" y="223.50"></text></g><g><title>malloc_consolidate (25,003,061 samples, 0.06%)</title><rect x="1.5988%" y="197" width="0.0628%" height="15" fill="rgb(248,47,43)" fg:x="636935885" fg:w="25003061"/><text x="1.8488%" y="207.50"></text></g><g><title>unlink_chunk (16,712,080 samples, 0.04%)</title><rect x="1.6196%" y="181" width="0.0419%" height="15" fill="rgb(221,10,30)" fg:x="645226866" fg:w="16712080"/><text x="1.8696%" y="191.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.8629370553447058674 (75,397,459 samples, 0.19%)</title><rect x="1.5462%" y="245" width="0.1893%" height="15" fill="rgb(210,229,1)" fg:x="616003160" fg:w="75397459"/><text x="1.7962%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29,461,673 samples, 0.07%)</title><rect x="1.6615%" y="229" width="0.0740%" height="15" fill="rgb(222,148,37)" fg:x="661938946" fg:w="29461673"/><text x="1.9115%" y="239.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.2597197333346081462 (8,338,066 samples, 0.02%)</title><rect x="1.7146%" y="213" width="0.0209%" height="15" fill="rgb(234,67,33)" fg:x="683062553" fg:w="8338066"/><text x="1.9646%" y="223.50"></text></g><g><title>_ZN4grpc6client14load_balancing13child_manager21ChildManager$LT$T$GT$24resolve_child_controller17hb08ed04d47f6e0cdE.llvm.4444103748938724560 (138,163,274 samples, 0.35%)</title><rect x="1.4202%" y="277" width="0.3468%" height="15" fill="rgb(247,98,35)" fg:x="565804460" fg:w="138163274"/><text x="1.6702%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (108,925,472 samples, 0.27%)</title><rect x="1.4936%" y="261" width="0.2734%" height="15" fill="rgb(247,138,52)" fg:x="595042262" fg:w="108925472"/><text x="1.7436%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,567,115 samples, 0.03%)</title><rect x="1.7355%" y="245" width="0.0315%" height="15" fill="rgb(213,79,30)" fg:x="691400619" fg:w="12567115"/><text x="1.9855%" y="255.50"></text></g><g><title>__GI___libc_malloc (16,415,601 samples, 0.04%)</title><rect x="1.7670%" y="277" width="0.0412%" height="15" fill="rgb(246,177,23)" fg:x="703967734" fg:w="16415601"/><text x="2.0170%" y="287.50"></text></g><g><title>_int_malloc (4,135,626 samples, 0.01%)</title><rect x="1.7978%" y="261" width="0.0104%" height="15" fill="rgb(230,62,27)" fg:x="716247709" fg:w="4135626"/><text x="2.0478%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (25,016,949 samples, 0.06%)</title><rect x="1.8082%" y="277" width="0.0628%" height="15" fill="rgb(216,154,8)" fg:x="720383335" fg:w="25016949"/><text x="2.0582%" y="287.50"></text></g><g><title>__GI___libc_malloc (8,390,930 samples, 0.02%)</title><rect x="1.9023%" y="261" width="0.0211%" height="15" fill="rgb(244,35,45)" fg:x="757875611" fg:w="8390930"/><text x="2.1523%" y="271.50"></text></g><g><title>tcache_get (8,390,930 samples, 0.02%)</title><rect x="1.9023%" y="245" width="0.0211%" height="15" fill="rgb(251,115,12)" fg:x="757875611" fg:w="8390930"/><text x="2.1523%" y="255.50"></text></g><g><title>tcache_get_n (8,390,930 samples, 0.02%)</title><rect x="1.9023%" y="229" width="0.0211%" height="15" fill="rgb(240,54,50)" fg:x="757875611" fg:w="8390930"/><text x="2.1523%" y="239.50"></text></g><g><title>grpc::client::load_balancing::LbState::initial (25,004,217 samples, 0.06%)</title><rect x="1.8710%" y="277" width="0.0628%" height="15" fill="rgb(233,84,52)" fg:x="745400284" fg:w="25004217"/><text x="2.1210%" y="287.50"></text></g><g><title>__rust_alloc (4,137,960 samples, 0.01%)</title><rect x="1.9234%" y="261" width="0.0104%" height="15" fill="rgb(207,117,47)" fg:x="766266541" fg:w="4137960"/><text x="2.1734%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicy&gt;::resolver_update (770,660,613 samples, 1.93%)</title><rect x="0.1451%" y="293" width="1.9344%" height="15" fill="rgb(249,43,39)" fg:x="57795489" fg:w="770660613"/><text x="0.3951%" y="303.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (58,051,601 samples, 0.15%)</title><rect x="1.9338%" y="277" width="0.1457%" height="15" fill="rgb(209,38,44)" fg:x="770404501" fg:w="58051601"/><text x="2.1838%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45,639,812 samples, 0.11%)</title><rect x="1.9649%" y="261" width="0.1146%" height="15" fill="rgb(236,212,23)" fg:x="782816290" fg:w="45639812"/><text x="2.2149%" y="271.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (24,784,728 samples, 0.06%)</title><rect x="2.0173%" y="245" width="0.0622%" height="15" fill="rgb(242,79,21)" fg:x="803671374" fg:w="24784728"/><text x="2.2673%" y="255.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.2597197333346081462 (20,625,437 samples, 0.05%)</title><rect x="2.0277%" y="229" width="0.0518%" height="15" fill="rgb(211,96,35)" fg:x="807830665" fg:w="20625437"/><text x="2.2777%" y="239.50"></text></g><g><title>_ZN7lb_apis17delegating_policy16DelegatingPolicy13update_picker17he977b9fc8a8811a6E.llvm.6810588386109608260 (4,124,342 samples, 0.01%)</title><rect x="2.0795%" y="293" width="0.0104%" height="15" fill="rgb(253,215,40)" fg:x="828456102" fg:w="4124342"/><text x="2.3295%" y="303.50"></text></g><g><title>__GI___libc_malloc (33,230,547 samples, 0.08%)</title><rect x="2.0899%" y="293" width="0.0834%" height="15" fill="rgb(211,81,21)" fg:x="832580444" fg:w="33230547"/><text x="2.3399%" y="303.50"></text></g><g><title>_int_malloc (24,907,561 samples, 0.06%)</title><rect x="2.1107%" y="277" width="0.0625%" height="15" fill="rgb(208,190,38)" fg:x="840903430" fg:w="24907561"/><text x="2.3607%" y="287.50"></text></g><g><title>checked_request2size (4,161,374 samples, 0.01%)</title><rect x="2.1628%" y="261" width="0.0104%" height="15" fill="rgb(235,213,38)" fg:x="861649617" fg:w="4161374"/><text x="2.4128%" y="271.50"></text></g><g><title>__rust_alloc (8,352,497 samples, 0.02%)</title><rect x="2.1733%" y="293" width="0.0210%" height="15" fill="rgb(237,122,38)" fg:x="865810991" fg:w="8352497"/><text x="2.4233%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20,853,309 samples, 0.05%)</title><rect x="2.2672%" y="261" width="0.0523%" height="15" fill="rgb(244,218,35)" fg:x="903241849" fg:w="20853309"/><text x="2.5172%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (4,190,601 samples, 0.01%)</title><rect x="2.3922%" y="229" width="0.0105%" height="15" fill="rgb(240,68,47)" fg:x="953015288" fg:w="4190601"/><text x="2.6422%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,213,854 samples, 0.01%)</title><rect x="2.4027%" y="229" width="0.0106%" height="15" fill="rgb(210,16,53)" fg:x="957205889" fg:w="4213854"/><text x="2.6527%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (58,613,583 samples, 0.15%)</title><rect x="2.3607%" y="245" width="0.1471%" height="15" fill="rgb(235,124,12)" fg:x="940478945" fg:w="58613583"/><text x="2.6107%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (37,672,785 samples, 0.09%)</title><rect x="2.4133%" y="229" width="0.0946%" height="15" fill="rgb(224,169,11)" fg:x="961419743" fg:w="37672785"/><text x="2.6633%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (20,952,313 samples, 0.05%)</title><rect x="2.4552%" y="213" width="0.0526%" height="15" fill="rgb(250,166,2)" fg:x="978140215" fg:w="20952313"/><text x="2.7052%" y="223.50"></text></g><g><title>__GI___libc_malloc (20,952,313 samples, 0.05%)</title><rect x="2.4552%" y="197" width="0.0526%" height="15" fill="rgb(242,216,29)" fg:x="978140215" fg:w="20952313"/><text x="2.7052%" y="207.50"></text></g><g><title>_int_malloc (8,340,725 samples, 0.02%)</title><rect x="2.4869%" y="181" width="0.0209%" height="15" fill="rgb(230,116,27)" fg:x="990751803" fg:w="8340725"/><text x="2.7369%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (149,904,957 samples, 0.38%)</title><rect x="2.1942%" y="293" width="0.3763%" height="15" fill="rgb(228,99,48)" fg:x="874163488" fg:w="149904957"/><text x="2.4442%" y="303.50"></text></g><g><title>core::fmt::write (137,398,381 samples, 0.34%)</title><rect x="2.2256%" y="277" width="0.3449%" height="15" fill="rgb(253,11,6)" fg:x="886670064" fg:w="137398381"/><text x="2.4756%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (99,973,287 samples, 0.25%)</title><rect x="2.3196%" y="261" width="0.2509%" height="15" fill="rgb(247,143,39)" fg:x="924095158" fg:w="99973287"/><text x="2.5696%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (24,975,917 samples, 0.06%)</title><rect x="2.5078%" y="245" width="0.0627%" height="15" fill="rgb(236,97,10)" fg:x="999092528" fg:w="24975917"/><text x="2.7578%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (16,653,647 samples, 0.04%)</title><rect x="2.5287%" y="229" width="0.0418%" height="15" fill="rgb(233,208,19)" fg:x="1007414798" fg:w="16653647"/><text x="2.7787%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (22,142,915 samples, 0.06%)</title><rect x="2.5705%" y="293" width="0.0556%" height="15" fill="rgb(216,164,2)" fg:x="1024068445" fg:w="22142915"/><text x="2.8205%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.7623550346864670336 (13,909,358 samples, 0.03%)</title><rect x="2.5912%" y="277" width="0.0349%" height="15" fill="rgb(220,129,5)" fg:x="1032302002" fg:w="13909358"/><text x="2.8412%" y="287.50"></text></g><g><title>__GI___libc_malloc (9,727,783 samples, 0.02%)</title><rect x="2.6017%" y="261" width="0.0244%" height="15" fill="rgb(242,17,10)" fg:x="1036483577" fg:w="9727783"/><text x="2.8517%" y="271.50"></text></g><g><title>checked_request2size (4,176,655 samples, 0.01%)</title><rect x="2.6156%" y="245" width="0.0105%" height="15" fill="rgb(242,107,0)" fg:x="1042034705" fg:w="4176655"/><text x="2.8656%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (20,741,346 samples, 0.05%)</title><rect x="3.1246%" y="245" width="0.0521%" height="15" fill="rgb(251,28,31)" fg:x="1244830580" fg:w="20741346"/><text x="3.3746%" y="255.50"></text></g><g><title>&lt;lb_apis::child_policy::ChildPolicy as grpc::client::load_balancing::LbPolicy&gt;::subchannel_update (123,448,424 samples, 0.31%)</title><rect x="2.9503%" y="261" width="0.3099%" height="15" fill="rgb(233,223,10)" fg:x="1175368874" fg:w="123448424"/><text x="3.2003%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33,245,372 samples, 0.08%)</title><rect x="3.1767%" y="245" width="0.0834%" height="15" fill="rgb(215,21,27)" fg:x="1265571926" fg:w="33245372"/><text x="3.4267%" y="255.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.2597197333346081462 (8,298,538 samples, 0.02%)</title><rect x="3.2393%" y="229" width="0.0208%" height="15" fill="rgb(232,23,21)" fg:x="1290518760" fg:w="8298538"/><text x="3.4893%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,427,849 samples, 0.03%)</title><rect x="3.2810%" y="245" width="0.0312%" height="15" fill="rgb(244,5,23)" fg:x="1307122225" fg:w="12427849"/><text x="3.5310%" y="255.50"></text></g><g><title>__GI___libc_free (4,157,415 samples, 0.01%)</title><rect x="3.3122%" y="245" width="0.0104%" height="15" fill="rgb(226,81,46)" fg:x="1319550074" fg:w="4157415"/><text x="3.5622%" y="255.50"></text></g><g><title>_int_free (4,157,360 samples, 0.01%)</title><rect x="3.3122%" y="229" width="0.0104%" height="15" fill="rgb(247,70,30)" fg:x="1319550129" fg:w="4157360"/><text x="3.5622%" y="239.50"></text></g><g><title>_ZN4grpc6client14load_balancing13child_manager21ChildManager$LT$T$GT$24resolve_child_controller17hb08ed04d47f6e0cdE.llvm.4444103748938724560 (41,487,910 samples, 0.10%)</title><rect x="3.2602%" y="261" width="0.1041%" height="15" fill="rgb(212,68,19)" fg:x="1298817298" fg:w="41487910"/><text x="3.5102%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16,597,719 samples, 0.04%)</title><rect x="3.3226%" y="245" width="0.0417%" height="15" fill="rgb(240,187,13)" fg:x="1323707489" fg:w="16597719"/><text x="3.5726%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicy&gt;::subchannel_update (236,021,446 samples, 0.59%)</title><rect x="2.8136%" y="277" width="0.5924%" height="15" fill="rgb(223,113,26)" fg:x="1120911286" fg:w="236021446"/><text x="3.0636%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,627,524 samples, 0.04%)</title><rect x="3.3643%" y="261" width="0.0417%" height="15" fill="rgb(206,192,2)" fg:x="1340305208" fg:w="16627524"/><text x="3.6143%" y="271.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (24,193,931 samples, 0.06%)</title><rect x="3.4060%" y="277" width="0.0607%" height="15" fill="rgb(241,108,4)" fg:x="1356932732" fg:w="24193931"/><text x="3.6560%" y="287.50"></text></g><g><title>__GI___libc_malloc (33,242,460 samples, 0.08%)</title><rect x="45.1715%" y="245" width="0.0834%" height="15" fill="rgb(247,173,49)" fg:x="17995955433" fg:w="33242460"/><text x="45.4215%" y="255.50"></text></g><g><title>tcache_get (24,909,392 samples, 0.06%)</title><rect x="45.1925%" y="229" width="0.0625%" height="15" fill="rgb(224,114,35)" fg:x="18004288501" fg:w="24909392"/><text x="45.4425%" y="239.50"></text></g><g><title>tcache_get_n (24,909,392 samples, 0.06%)</title><rect x="45.1925%" y="213" width="0.0625%" height="15" fill="rgb(245,159,27)" fg:x="18004288501" fg:w="24909392"/><text x="45.4425%" y="223.50"></text></g><g><title>__rust_alloc (4,207,165 samples, 0.01%)</title><rect x="45.2550%" y="245" width="0.0106%" height="15" fill="rgb(245,172,44)" fg:x="18029197893" fg:w="4207165"/><text x="45.5050%" y="255.50"></text></g><g><title>__GI_memcpy (44,250,675 samples, 0.11%)</title><rect x="45.7120%" y="181" width="0.1111%" height="15" fill="rgb(236,23,11)" fg:x="18211284374" fg:w="44250675"/><text x="45.9620%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned_erms (44,250,675 samples, 0.11%)</title><rect x="45.7120%" y="165" width="0.1111%" height="15" fill="rgb(205,117,38)" fg:x="18211284374" fg:w="44250675"/><text x="45.9620%" y="175.50"></text></g><g><title>get_max_fast (4,159,232 samples, 0.01%)</title><rect x="45.8857%" y="165" width="0.0104%" height="15" fill="rgb(237,72,25)" fg:x="18280478901" fg:w="4159232"/><text x="46.1357%" y="175.50"></text></g><g><title>_int_free (33,255,925 samples, 0.08%)</title><rect x="45.8231%" y="181" width="0.0835%" height="15" fill="rgb(244,70,9)" fg:x="18255535049" fg:w="33255925"/><text x="46.0731%" y="191.50"></text></g><g><title>tcache_put (4,152,841 samples, 0.01%)</title><rect x="45.8962%" y="165" width="0.0104%" height="15" fill="rgb(217,125,39)" fg:x="18284638133" fg:w="4152841"/><text x="46.1462%" y="175.50"></text></g><g><title>_int_free_merge_chunk (33,105,792 samples, 0.08%)</title><rect x="45.9066%" y="181" width="0.0831%" height="15" fill="rgb(235,36,10)" fg:x="18288790974" fg:w="33105792"/><text x="46.1566%" y="191.50"></text></g><g><title>_int_free_create_chunk (20,661,791 samples, 0.05%)</title><rect x="45.9378%" y="165" width="0.0519%" height="15" fill="rgb(251,123,47)" fg:x="18301234975" fg:w="20661791"/><text x="46.1878%" y="175.50"></text></g><g><title>unlink_chunk (4,147,261 samples, 0.01%)</title><rect x="45.9793%" y="149" width="0.0104%" height="15" fill="rgb(221,13,13)" fg:x="18317749505" fg:w="4147261"/><text x="46.2293%" y="159.50"></text></g><g><title>malloc_consolidate (4,159,855 samples, 0.01%)</title><rect x="46.4060%" y="165" width="0.0104%" height="15" fill="rgb(238,131,9)" fg:x="18487770708" fg:w="4159855"/><text x="46.6560%" y="175.50"></text></g><g><title>_int_malloc (176,975,672 samples, 0.44%)</title><rect x="45.9897%" y="181" width="0.4442%" height="15" fill="rgb(211,50,8)" fg:x="18321896766" fg:w="176975672"/><text x="46.2397%" y="191.50"></text></g><g><title>unlink_chunk (6,941,875 samples, 0.02%)</title><rect x="46.4165%" y="165" width="0.0174%" height="15" fill="rgb(245,182,24)" fg:x="18491930563" fg:w="6941875"/><text x="46.6665%" y="175.50"></text></g><g><title>_int_realloc (333,338,758 samples, 0.84%)</title><rect x="45.6076%" y="197" width="0.8367%" height="15" fill="rgb(242,14,37)" fg:x="18169690644" fg:w="333338758"/><text x="45.8576%" y="207.50"></text></g><g><title>unlink_chunk (4,156,964 samples, 0.01%)</title><rect x="46.4339%" y="181" width="0.0104%" height="15" fill="rgb(246,228,12)" fg:x="18498872438" fg:w="4156964"/><text x="46.6839%" y="191.50"></text></g><g><title>__GI___libc_realloc (365,628,175 samples, 0.92%)</title><rect x="45.5370%" y="213" width="0.9178%" height="15" fill="rgb(213,55,15)" fg:x="18141556883" fg:w="365628175"/><text x="45.7870%" y="223.50"></text></g><g><title>arena_for_chunk (4,155,656 samples, 0.01%)</title><rect x="46.4443%" y="197" width="0.0104%" height="15" fill="rgb(209,9,3)" fg:x="18503029402" fg:w="4155656"/><text x="46.6943%" y="207.50"></text></g><g><title>__rdl_realloc (8,304,709 samples, 0.02%)</title><rect x="46.4548%" y="213" width="0.0208%" height="15" fill="rgb(230,59,30)" fg:x="18507185058" fg:w="8304709"/><text x="46.7048%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,142,062,791 samples, 7.89%)</title><rect x="38.5991%" y="261" width="7.8869%" height="15" fill="rgb(209,121,21)" fg:x="15377553004" fg:w="3142062791"/><text x="38.8491%" y="271.50">&lt;alloc::vec..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (486,210,737 samples, 1.22%)</title><rect x="45.2655%" y="245" width="1.2204%" height="15" fill="rgb(220,109,13)" fg:x="18033405058" fg:w="486210737"/><text x="45.5155%" y="255.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.7623550346864670336 (440,544,864 samples, 1.11%)</title><rect x="45.3802%" y="229" width="1.1058%" height="15" fill="rgb(232,18,1)" fg:x="18079070931" fg:w="440544864"/><text x="45.6302%" y="239.50"></text></g><g><title>__rust_realloc (4,126,028 samples, 0.01%)</title><rect x="46.4756%" y="213" width="0.0104%" height="15" fill="rgb(215,41,42)" fg:x="18515489767" fg:w="4126028"/><text x="46.7256%" y="223.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (8,275,880 samples, 0.02%)</title><rect x="46.4860%" y="261" width="0.0208%" height="15" fill="rgb(224,123,36)" fg:x="18519615795" fg:w="8275880"/><text x="46.7360%" y="271.50"></text></g><g><title>_int_free (8,212,367 samples, 0.02%)</title><rect x="46.5483%" y="245" width="0.0206%" height="15" fill="rgb(240,125,3)" fg:x="18544454451" fg:w="8212367"/><text x="46.7983%" y="255.50"></text></g><g><title>_int_free_create_chunk (12,440,523 samples, 0.03%)</title><rect x="46.6001%" y="229" width="0.0312%" height="15" fill="rgb(205,98,50)" fg:x="18565080006" fg:w="12440523"/><text x="46.8501%" y="239.50"></text></g><g><title>unlink_chunk (4,154,780 samples, 0.01%)</title><rect x="46.6209%" y="213" width="0.0104%" height="15" fill="rgb(205,185,37)" fg:x="18573365749" fg:w="4154780"/><text x="46.8709%" y="223.50"></text></g><g><title>__GI___libc_free (53,782,436 samples, 0.13%)</title><rect x="46.5067%" y="261" width="0.1350%" height="15" fill="rgb(238,207,15)" fg:x="18527891675" fg:w="53782436"/><text x="46.7567%" y="271.50"></text></g><g><title>_int_free_merge_chunk (29,007,293 samples, 0.07%)</title><rect x="46.5689%" y="245" width="0.0728%" height="15" fill="rgb(213,199,42)" fg:x="18552666818" fg:w="29007293"/><text x="46.8189%" y="255.50"></text></g><g><title>free_perturb (4,153,582 samples, 0.01%)</title><rect x="46.6313%" y="229" width="0.0104%" height="15" fill="rgb(235,201,11)" fg:x="18577520529" fg:w="4153582"/><text x="46.8813%" y="239.50"></text></g><g><title>_int_malloc (91,188,072 samples, 0.23%)</title><rect x="46.6626%" y="245" width="0.2289%" height="15" fill="rgb(207,46,11)" fg:x="18589986536" fg:w="91188072"/><text x="46.9126%" y="255.50"></text></g><g><title>unlink_chunk (8,266,677 samples, 0.02%)</title><rect x="46.8707%" y="229" width="0.0208%" height="15" fill="rgb(241,35,35)" fg:x="18672907931" fg:w="8266677"/><text x="47.1207%" y="239.50"></text></g><g><title>__GI___libc_malloc (103,660,175 samples, 0.26%)</title><rect x="46.6417%" y="261" width="0.2602%" height="15" fill="rgb(243,32,47)" fg:x="18581674111" fg:w="103660175"/><text x="46.8917%" y="271.50"></text></g><g><title>tcache_get (4,159,678 samples, 0.01%)</title><rect x="46.8915%" y="245" width="0.0104%" height="15" fill="rgb(247,202,23)" fg:x="18681174608" fg:w="4159678"/><text x="47.1415%" y="255.50"></text></g><g><title>tcache_get_n (4,159,678 samples, 0.01%)</title><rect x="46.8915%" y="229" width="0.0104%" height="15" fill="rgb(219,102,11)" fg:x="18681174608" fg:w="4159678"/><text x="47.1415%" y="239.50"></text></g><g><title>__rdl_dealloc (8,267,837 samples, 0.02%)</title><rect x="46.9019%" y="261" width="0.0208%" height="15" fill="rgb(243,110,44)" fg:x="18685334808" fg:w="8267837"/><text x="47.1519%" y="271.50"></text></g><g><title>__rust_dealloc (4,135,064 samples, 0.01%)</title><rect x="46.9227%" y="261" width="0.0104%" height="15" fill="rgb(222,74,54)" fg:x="18693602645" fg:w="4135064"/><text x="47.1727%" y="271.50"></text></g><g><title>__GI___libc_free (4,157,858 samples, 0.01%)</title><rect x="46.9538%" y="245" width="0.0104%" height="15" fill="rgb(216,99,12)" fg:x="18705989076" fg:w="4157858"/><text x="47.2038%" y="255.50"></text></g><g><title>_int_free_merge_chunk (4,157,858 samples, 0.01%)</title><rect x="46.9538%" y="229" width="0.0104%" height="15" fill="rgb(226,22,26)" fg:x="18705989076" fg:w="4157858"/><text x="47.2038%" y="239.50"></text></g><g><title>_int_free_create_chunk (4,157,858 samples, 0.01%)</title><rect x="46.9538%" y="213" width="0.0104%" height="15" fill="rgb(217,163,10)" fg:x="18705989076" fg:w="4157858"/><text x="47.2038%" y="223.50"></text></g><g><title>_ZN7lb_apis17delegating_policy16DelegatingPolicy13update_picker17he977b9fc8a8811a6E.llvm.6810588386109608260 (19,066,349,260 samples, 47.86%)</title><rect x="3.4668%" y="277" width="47.8583%" height="15" fill="rgb(213,25,53)" fg:x="1381126663" fg:w="19066349260"/><text x="3.7168%" y="287.50">_ZN7lb_apis17delegating_policy16DelegatingPolicy13update_picker17he977b9fc8a881..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (1,749,738,214 samples, 4.39%)</title><rect x="46.9331%" y="261" width="4.3920%" height="15" fill="rgb(252,105,26)" fg:x="18697737709" fg:w="1749738214"/><text x="47.1831%" y="271.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::delegating_policy::RRPickerPicker&gt; (1,737,328,989 samples, 4.36%)</title><rect x="46.9642%" y="245" width="4.3609%" height="15" fill="rgb(220,39,43)" fg:x="18710146934" fg:w="1737328989"/><text x="47.2142%" y="255.50">core:..</text></g><g><title>bencher::Bencher::iter (19,409,570,896 samples, 48.72%)</title><rect x="2.6261%" y="293" width="48.7198%" height="15" fill="rgb(229,68,48)" fg:x="1046211360" fg:w="19409570896"/><text x="2.8761%" y="303.50">bencher::Bencher::iter</text></g><g><title>rand::rng::Rng::gen_range (8,306,333 samples, 0.02%)</title><rect x="51.3251%" y="277" width="0.0208%" height="15" fill="rgb(252,8,32)" fg:x="20447475923" fg:w="8306333"/><text x="51.5751%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,379,871 samples, 0.02%)</title><rect x="51.3459%" y="277" width="0.0210%" height="15" fill="rgb(223,20,43)" fg:x="20455782256" fg:w="8379871"/><text x="51.5959%" y="287.50"></text></g><g><title>__GI___libc_free (4,194,355 samples, 0.01%)</title><rect x="51.4823%" y="245" width="0.0105%" height="15" fill="rgb(229,81,49)" fg:x="20510101321" fg:w="4194355"/><text x="51.7323%" y="255.50"></text></g><g><title>_int_free (4,194,355 samples, 0.01%)</title><rect x="51.4823%" y="229" width="0.0105%" height="15" fill="rgb(236,28,36)" fg:x="20510101321" fg:w="4194355"/><text x="51.7323%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33,134,280 samples, 0.08%)</title><rect x="51.4507%" y="261" width="0.0832%" height="15" fill="rgb(249,185,26)" fg:x="20497540589" fg:w="33134280"/><text x="51.7007%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16,379,193 samples, 0.04%)</title><rect x="51.4928%" y="245" width="0.0411%" height="15" fill="rgb(249,174,33)" fg:x="20514295676" fg:w="16379193"/><text x="51.7428%" y="255.50"></text></g><g><title>_int_free (18,878,033 samples, 0.05%)</title><rect x="51.5443%" y="245" width="0.0474%" height="15" fill="rgb(233,201,37)" fg:x="20534827213" fg:w="18878033"/><text x="51.7943%" y="255.50"></text></g><g><title>_int_free_maybe_consolidate (8,390,287 samples, 0.02%)</title><rect x="51.5917%" y="245" width="0.0211%" height="15" fill="rgb(221,78,26)" fg:x="20553705246" fg:w="8390287"/><text x="51.8417%" y="255.50"></text></g><g><title>malloc_consolidate (8,390,287 samples, 0.02%)</title><rect x="51.5917%" y="229" width="0.0211%" height="15" fill="rgb(250,127,30)" fg:x="20553705246" fg:w="8390287"/><text x="51.8417%" y="239.50"></text></g><g><title>unlink_chunk (8,390,287 samples, 0.02%)</title><rect x="51.5917%" y="213" width="0.0211%" height="15" fill="rgb(230,49,44)" fg:x="20553705246" fg:w="8390287"/><text x="51.8417%" y="223.50"></text></g><g><title>__GI___libc_free (43,894,869 samples, 0.11%)</title><rect x="51.5339%" y="261" width="0.1102%" height="15" fill="rgb(229,67,23)" fg:x="20530674869" fg:w="43894869"/><text x="51.7839%" y="271.50"></text></g><g><title>_int_free_merge_chunk (12,474,205 samples, 0.03%)</title><rect x="51.6128%" y="245" width="0.0313%" height="15" fill="rgb(249,83,47)" fg:x="20562095533" fg:w="12474205"/><text x="51.8628%" y="255.50"></text></g><g><title>_int_free_create_chunk (8,279,709 samples, 0.02%)</title><rect x="51.6233%" y="229" width="0.0208%" height="15" fill="rgb(215,43,3)" fg:x="20566290029" fg:w="8279709"/><text x="51.8733%" y="239.50"></text></g><g><title>_ZN4core3ptr121drop_in_place$LT$grpc..client..load_balancing..child_manager_cb..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h3deee280ed9120c0E.llvm.17382535891996400411 (114,597,686 samples, 0.29%)</title><rect x="51.3670%" y="277" width="0.2877%" height="15" fill="rgb(238,154,13)" fg:x="20464162127" fg:w="114597686"/><text x="51.6170%" y="287.50"></text></g><g><title>__rdl_dealloc (4,190,075 samples, 0.01%)</title><rect x="51.6441%" y="261" width="0.0105%" height="15" fill="rgb(219,56,2)" fg:x="20574569738" fg:w="4190075"/><text x="51.8941%" y="271.50"></text></g><g><title>__GI___libc_free (86,248,689 samples, 0.22%)</title><rect x="51.6546%" y="277" width="0.2165%" height="15" fill="rgb(233,0,4)" fg:x="20578759813" fg:w="86248689"/><text x="51.9046%" y="287.50"></text></g><g><title>_int_free_maybe_consolidate (86,248,689 samples, 0.22%)</title><rect x="51.6546%" y="261" width="0.2165%" height="15" fill="rgb(235,30,7)" fg:x="20578759813" fg:w="86248689"/><text x="51.9046%" y="271.50"></text></g><g><title>malloc_consolidate (86,248,689 samples, 0.22%)</title><rect x="51.6546%" y="245" width="0.2165%" height="15" fill="rgb(250,79,13)" fg:x="20578759813" fg:w="86248689"/><text x="51.9046%" y="255.50"></text></g><g><title>unlink_chunk (23,762,073 samples, 0.06%)</title><rect x="51.8115%" y="229" width="0.0596%" height="15" fill="rgb(211,146,34)" fg:x="20641246429" fg:w="23762073"/><text x="52.0615%" y="239.50"></text></g><g><title>__rust_dealloc (4,211,759 samples, 0.01%)</title><rect x="51.8711%" y="277" width="0.0106%" height="15" fill="rgb(228,22,38)" fg:x="20665008502" fg:w="4211759"/><text x="52.1211%" y="287.50"></text></g><g><title>lb_apis::broadcast (20,660,987,918 samples, 51.86%)</title><rect x="0.0616%" y="309" width="51.8610%" height="15" fill="rgb(235,168,5)" fg:x="24532910" fg:w="20660987918"/><text x="0.3116%" y="319.50">lb_apis::broadcast</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::delegating_policy::DelegatingPolicy&gt; (229,738,572 samples, 0.58%)</title><rect x="51.3459%" y="293" width="0.5767%" height="15" fill="rgb(221,155,16)" fg:x="20455782256" fg:w="229738572"/><text x="51.5959%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16,300,567 samples, 0.04%)</title><rect x="51.8817%" y="277" width="0.0409%" height="15" fill="rgb(215,215,53)" fg:x="20669220261" fg:w="16300567"/><text x="52.1317%" y="287.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::default::Default&gt;::default (12,209,005 samples, 0.03%)</title><rect x="52.1378%" y="245" width="0.0306%" height="15" fill="rgb(223,4,10)" fg:x="20771247475" fg:w="12209005"/><text x="52.3878%" y="255.50"></text></g><g><title>__GI___libc_malloc (8,138,614 samples, 0.02%)</title><rect x="52.1480%" y="229" width="0.0204%" height="15" fill="rgb(234,103,6)" fg:x="20775317866" fg:w="8138614"/><text x="52.3980%" y="239.50"></text></g><g><title>_int_malloc (8,138,614 samples, 0.02%)</title><rect x="52.1480%" y="213" width="0.0204%" height="15" fill="rgb(227,97,0)" fg:x="20775317866" fg:w="8138614"/><text x="52.3980%" y="223.50"></text></g><g><title>__GI___libc_free (4,020,532 samples, 0.01%)</title><rect x="52.1684%" y="245" width="0.0101%" height="15" fill="rgb(234,150,53)" fg:x="20783456480" fg:w="4020532"/><text x="52.4184%" y="255.50"></text></g><g><title>__GI___libc_malloc (8,186,826 samples, 0.02%)</title><rect x="52.1785%" y="245" width="0.0205%" height="15" fill="rgb(228,201,54)" fg:x="20787477012" fg:w="8186826"/><text x="52.4285%" y="255.50"></text></g><g><title>_int_malloc (8,186,826 samples, 0.02%)</title><rect x="52.1785%" y="229" width="0.0205%" height="15" fill="rgb(222,22,37)" fg:x="20787477012" fg:w="8186826"/><text x="52.4285%" y="239.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicyBuilderCallbacks as grpc::client::load_balancing::LbPolicyBuilderCallbacks&gt;::build (40,564,278 samples, 0.10%)</title><rect x="52.1378%" y="261" width="0.1018%" height="15" fill="rgb(237,53,32)" fg:x="20771247475" fg:w="40564278"/><text x="52.3878%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16,147,915 samples, 0.04%)</title><rect x="52.1991%" y="245" width="0.0405%" height="15" fill="rgb(233,25,53)" fg:x="20795663838" fg:w="16147915"/><text x="52.4491%" y="255.50"></text></g><g><title>_ZN116_$LT$lb_apis..StubChannelControllerCallbacks$u20$as$u20$grpc..client..load_balancing..ChannelControllerCallbacks$GT$14new_subchannel17hcdcb3d6e4c734d49E.llvm.13320514010008657956 (32,753,592 samples, 0.08%)</title><rect x="52.3626%" y="229" width="0.0822%" height="15" fill="rgb(210,40,34)" fg:x="20860826352" fg:w="32753592"/><text x="52.6126%" y="239.50"></text></g><g><title>__GI___libc_malloc (12,282,719 samples, 0.03%)</title><rect x="52.4140%" y="213" width="0.0308%" height="15" fill="rgb(241,220,44)" fg:x="20881297225" fg:w="12282719"/><text x="52.6640%" y="223.50"></text></g><g><title>_int_malloc (8,210,825 samples, 0.02%)</title><rect x="52.4242%" y="197" width="0.0206%" height="15" fill="rgb(235,28,35)" fg:x="20885369119" fg:w="8210825"/><text x="52.6742%" y="207.50"></text></g><g><title>_ZN124_$LT$lb_apis..del_pol_cb..WrappedControllerCallbacks$u20$as$u20$grpc..client..load_balancing..ChannelControllerCallbacks$GT$14new_subchannel17h8c8643edc30f78d3E.llvm.6945639425234485707 (24,460,497 samples, 0.06%)</title><rect x="52.4448%" y="229" width="0.0614%" height="15" fill="rgb(210,56,17)" fg:x="20893579944" fg:w="24460497"/><text x="52.6948%" y="239.50"></text></g><g><title>__GI___libc_malloc (24,460,497 samples, 0.06%)</title><rect x="52.4448%" y="213" width="0.0614%" height="15" fill="rgb(224,130,29)" fg:x="20893579944" fg:w="24460497"/><text x="52.6948%" y="223.50"></text></g><g><title>_int_malloc (16,344,099 samples, 0.04%)</title><rect x="52.4652%" y="197" width="0.0410%" height="15" fill="rgb(235,212,8)" fg:x="20901696342" fg:w="16344099"/><text x="52.7152%" y="207.50"></text></g><g><title>__GI___libc_malloc (4,117,007 samples, 0.01%)</title><rect x="52.5062%" y="229" width="0.0103%" height="15" fill="rgb(223,33,50)" fg:x="20918040441" fg:w="4117007"/><text x="52.7562%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel (110,361,280 samples, 0.28%)</title><rect x="52.2802%" y="245" width="0.2770%" height="15" fill="rgb(219,149,13)" fg:x="20827994041" fg:w="110361280"/><text x="52.5302%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16,197,873 samples, 0.04%)</title><rect x="52.5166%" y="229" width="0.0407%" height="15" fill="rgb(250,156,29)" fg:x="20922157448" fg:w="16197873"/><text x="52.7666%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.7623550346864670336 (8,098,290 samples, 0.02%)</title><rect x="52.5369%" y="213" width="0.0203%" height="15" fill="rgb(216,193,19)" fg:x="20930257031" fg:w="8098290"/><text x="52.7869%" y="223.50"></text></g><g><title>__GI___libc_malloc (4,029,386 samples, 0.01%)</title><rect x="52.5471%" y="197" width="0.0101%" height="15" fill="rgb(216,135,14)" fg:x="20934325935" fg:w="4029386"/><text x="52.7971%" y="207.50"></text></g><g><title>checked_request2size (4,029,386 samples, 0.01%)</title><rect x="52.5471%" y="181" width="0.0101%" height="15" fill="rgb(241,47,5)" fg:x="20934325935" fg:w="4029386"/><text x="52.7971%" y="191.50"></text></g><g><title>__GI___libc_free (40,503,229 samples, 0.10%)</title><rect x="52.5572%" y="245" width="0.1017%" height="15" fill="rgb(233,42,35)" fg:x="20938355321" fg:w="40503229"/><text x="52.8072%" y="255.50"></text></g><g><title>_int_free (28,277,386 samples, 0.07%)</title><rect x="52.5879%" y="229" width="0.0710%" height="15" fill="rgb(231,13,6)" fg:x="20950581164" fg:w="28277386"/><text x="52.8379%" y="239.50"></text></g><g><title>tcache_put (4,003,325 samples, 0.01%)</title><rect x="52.6489%" y="213" width="0.0100%" height="15" fill="rgb(207,181,40)" fg:x="20974855225" fg:w="4003325"/><text x="52.8989%" y="223.50"></text></g><g><title>[unknown] (8,240,989 samples, 0.02%)</title><rect x="52.7615%" y="181" width="0.0207%" height="15" fill="rgb(254,173,49)" fg:x="21019734947" fg:w="8240989"/><text x="53.0115%" y="191.50"></text></g><g><title>[unknown] (8,240,989 samples, 0.02%)</title><rect x="52.7615%" y="165" width="0.0207%" height="15" fill="rgb(221,1,38)" fg:x="21019734947" fg:w="8240989"/><text x="53.0115%" y="175.50"></text></g><g><title>[unknown] (8,240,989 samples, 0.02%)</title><rect x="52.7615%" y="149" width="0.0207%" height="15" fill="rgb(206,124,46)" fg:x="21019734947" fg:w="8240989"/><text x="53.0115%" y="159.50"></text></g><g><title>[unknown] (8,240,989 samples, 0.02%)</title><rect x="52.7615%" y="133" width="0.0207%" height="15" fill="rgb(249,21,11)" fg:x="21019734947" fg:w="8240989"/><text x="53.0115%" y="143.50"></text></g><g><title>[unknown] (8,240,989 samples, 0.02%)</title><rect x="52.7615%" y="117" width="0.0207%" height="15" fill="rgb(222,201,40)" fg:x="21019734947" fg:w="8240989"/><text x="53.0115%" y="127.50"></text></g><g><title>malloc_consolidate (4,100,714 samples, 0.01%)</title><rect x="52.7822%" y="181" width="0.0103%" height="15" fill="rgb(235,61,29)" fg:x="21027975936" fg:w="4100714"/><text x="53.0322%" y="191.50"></text></g><g><title>[unknown] (4,073,264 samples, 0.01%)</title><rect x="52.7925%" y="165" width="0.0102%" height="15" fill="rgb(219,207,3)" fg:x="21032076650" fg:w="4073264"/><text x="53.0425%" y="175.50"></text></g><g><title>__GI___libc_malloc (32,751,806 samples, 0.08%)</title><rect x="52.7309%" y="213" width="0.0822%" height="15" fill="rgb(222,56,46)" fg:x="21007524580" fg:w="32751806"/><text x="52.9809%" y="223.50"></text></g><g><title>_int_malloc (28,664,584 samples, 0.07%)</title><rect x="52.7411%" y="197" width="0.0720%" height="15" fill="rgb(239,76,54)" fg:x="21011611802" fg:w="28664584"/><text x="52.9911%" y="207.50"></text></g><g><title>sysmalloc (8,199,736 samples, 0.02%)</title><rect x="52.7925%" y="181" width="0.0206%" height="15" fill="rgb(231,124,27)" fg:x="21032076650" fg:w="8199736"/><text x="53.0425%" y="191.50"></text></g><g><title>__glibc_morecore (4,126,472 samples, 0.01%)</title><rect x="52.8027%" y="165" width="0.0104%" height="15" fill="rgb(249,195,6)" fg:x="21036149914" fg:w="4126472"/><text x="53.0527%" y="175.50"></text></g><g><title>__GI___sbrk (4,126,472 samples, 0.01%)</title><rect x="52.8027%" y="149" width="0.0104%" height="15" fill="rgb(237,174,47)" fg:x="21036149914" fg:w="4126472"/><text x="53.0527%" y="159.50"></text></g><g><title>__brk (4,126,472 samples, 0.01%)</title><rect x="52.8027%" y="133" width="0.0104%" height="15" fill="rgb(206,201,31)" fg:x="21036149914" fg:w="4126472"/><text x="53.0527%" y="143.50"></text></g><g><title>[unknown] (4,126,472 samples, 0.01%)</title><rect x="52.8027%" y="117" width="0.0104%" height="15" fill="rgb(231,57,52)" fg:x="21036149914" fg:w="4126472"/><text x="53.0527%" y="127.50"></text></g><g><title>[unknown] (4,126,472 samples, 0.01%)</title><rect x="52.8027%" y="101" width="0.0104%" height="15" fill="rgb(248,177,22)" fg:x="21036149914" fg:w="4126472"/><text x="53.0527%" y="111.50"></text></g><g><title>[unknown] (4,126,472 samples, 0.01%)</title><rect x="52.8027%" y="85" width="0.0104%" height="15" fill="rgb(215,211,37)" fg:x="21036149914" fg:w="4126472"/><text x="53.0527%" y="95.50"></text></g><g><title>[unknown] (4,126,472 samples, 0.01%)</title><rect x="52.8027%" y="69" width="0.0104%" height="15" fill="rgb(241,128,51)" fg:x="21036149914" fg:w="4126472"/><text x="53.0527%" y="79.50"></text></g><g><title>[unknown] (4,126,472 samples, 0.01%)</title><rect x="52.8027%" y="53" width="0.0104%" height="15" fill="rgb(227,165,31)" fg:x="21036149914" fg:w="4126472"/><text x="53.0527%" y="63.50"></text></g><g><title>[unknown] (4,126,472 samples, 0.01%)</title><rect x="52.8027%" y="37" width="0.0104%" height="15" fill="rgb(228,167,24)" fg:x="21036149914" fg:w="4126472"/><text x="53.0527%" y="47.50"></text></g><g><title>__memset_avx2_unaligned (4,139,229 samples, 0.01%)</title><rect x="52.8131%" y="213" width="0.0104%" height="15" fill="rgb(228,143,12)" fg:x="21040276386" fg:w="4139229"/><text x="53.0631%" y="223.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.8629370553447058674 (53,339,812 samples, 0.13%)</title><rect x="52.6998%" y="229" width="0.1339%" height="15" fill="rgb(249,149,8)" fg:x="20995170217" fg:w="53339812"/><text x="52.9498%" y="239.50"></text></g><g><title>__memset_avx2_unaligned_erms (4,094,414 samples, 0.01%)</title><rect x="52.8235%" y="213" width="0.0103%" height="15" fill="rgb(243,35,44)" fg:x="21044415615" fg:w="4094414"/><text x="53.0735%" y="223.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicyCallbacks as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (244,842,679 samples, 0.61%)</title><rect x="52.2396%" y="261" width="0.6146%" height="15" fill="rgb(246,89,9)" fg:x="20811811753" fg:w="244842679"/><text x="52.4896%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (77,795,882 samples, 0.20%)</title><rect x="52.6589%" y="245" width="0.1953%" height="15" fill="rgb(233,213,13)" fg:x="20978858550" fg:w="77795882"/><text x="52.9089%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,144,403 samples, 0.02%)</title><rect x="52.8337%" y="229" width="0.0204%" height="15" fill="rgb(233,141,41)" fg:x="21048510029" fg:w="8144403"/><text x="53.0837%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (44,868,127 samples, 0.11%)</title><rect x="52.9874%" y="229" width="0.1126%" height="15" fill="rgb(239,167,4)" fg:x="21109727535" fg:w="44868127"/><text x="53.2374%" y="239.50"></text></g><g><title>__GI___libc_malloc (40,907,543 samples, 0.10%)</title><rect x="52.9973%" y="213" width="0.1027%" height="15" fill="rgb(209,217,16)" fg:x="21113688119" fg:w="40907543"/><text x="53.2473%" y="223.50"></text></g><g><title>_int_malloc (28,588,192 samples, 0.07%)</title><rect x="53.0283%" y="197" width="0.0718%" height="15" fill="rgb(219,88,35)" fg:x="21126007470" fg:w="28588192"/><text x="53.2783%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (69,218,096 samples, 0.17%)</title><rect x="52.9366%" y="245" width="0.1737%" height="15" fill="rgb(220,193,23)" fg:x="21089503407" fg:w="69218096"/><text x="53.1866%" y="255.50"></text></g><g><title>__GI___libc_malloc (4,125,841 samples, 0.01%)</title><rect x="53.1000%" y="229" width="0.0104%" height="15" fill="rgb(230,90,52)" fg:x="21154595662" fg:w="4125841"/><text x="53.3500%" y="239.50"></text></g><g><title>_int_malloc (4,125,841 samples, 0.01%)</title><rect x="53.1000%" y="213" width="0.0104%" height="15" fill="rgb(252,106,19)" fg:x="21154595662" fg:w="4125841"/><text x="53.3500%" y="223.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17he913d698642fd5ddE.llvm.6945639425234485707 (134,929,837 samples, 0.34%)</title><rect x="52.8542%" y="261" width="0.3387%" height="15" fill="rgb(206,74,20)" fg:x="21056654432" fg:w="134929837"/><text x="53.1042%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (32,862,766 samples, 0.08%)</title><rect x="53.1104%" y="245" width="0.0825%" height="15" fill="rgb(230,138,44)" fg:x="21158721503" fg:w="32862766"/><text x="53.3604%" y="255.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.7623550346864670336 (24,630,697 samples, 0.06%)</title><rect x="53.1310%" y="229" width="0.0618%" height="15" fill="rgb(235,182,43)" fg:x="21166953572" fg:w="24630697"/><text x="53.3810%" y="239.50"></text></g><g><title>__GI___libc_malloc (24,630,697 samples, 0.06%)</title><rect x="53.1310%" y="213" width="0.0618%" height="15" fill="rgb(242,16,51)" fg:x="21166953572" fg:w="24630697"/><text x="53.3810%" y="223.50"></text></g><g><title>_int_malloc (20,501,493 samples, 0.05%)</title><rect x="53.1414%" y="197" width="0.0515%" height="15" fill="rgb(248,9,4)" fg:x="21171082776" fg:w="20501493"/><text x="53.3914%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (20,523,787 samples, 0.05%)</title><rect x="53.2028%" y="261" width="0.0515%" height="15" fill="rgb(210,31,22)" fg:x="21195553123" fg:w="20523787"/><text x="53.4528%" y="271.50"></text></g><g><title>grpc::client::load_balancing::LbState::initial (12,118,534 samples, 0.03%)</title><rect x="53.2543%" y="261" width="0.0304%" height="15" fill="rgb(239,54,39)" fg:x="21216076910" fg:w="12118534"/><text x="53.5043%" y="271.50"></text></g><g><title>__GI___libc_malloc (8,003,718 samples, 0.02%)</title><rect x="53.2647%" y="245" width="0.0201%" height="15" fill="rgb(230,99,41)" fg:x="21220191726" fg:w="8003718"/><text x="53.5147%" y="255.50"></text></g><g><title>tcache_get (8,003,718 samples, 0.02%)</title><rect x="53.2647%" y="229" width="0.0201%" height="15" fill="rgb(253,106,12)" fg:x="21220191726" fg:w="8003718"/><text x="53.5147%" y="239.50"></text></g><g><title>tcache_get_n (8,003,718 samples, 0.02%)</title><rect x="53.2647%" y="213" width="0.0201%" height="15" fill="rgb(213,46,41)" fg:x="21220191726" fg:w="8003718"/><text x="53.5147%" y="223.50"></text></g><g><title>__rust_dealloc (4,114,873 samples, 0.01%)</title><rect x="53.3158%" y="245" width="0.0103%" height="15" fill="rgb(215,133,35)" fg:x="21240553442" fg:w="4114873"/><text x="53.5658%" y="255.50"></text></g><g><title>[unknown] (4,118,533 samples, 0.01%)</title><rect x="53.4695%" y="181" width="0.0103%" height="15" fill="rgb(213,28,5)" fg:x="21301794945" fg:w="4118533"/><text x="53.7195%" y="191.50"></text></g><g><title>[unknown] (4,118,533 samples, 0.01%)</title><rect x="53.4695%" y="165" width="0.0103%" height="15" fill="rgb(215,77,49)" fg:x="21301794945" fg:w="4118533"/><text x="53.7195%" y="175.50"></text></g><g><title>[unknown] (4,118,533 samples, 0.01%)</title><rect x="53.4695%" y="149" width="0.0103%" height="15" fill="rgb(248,100,22)" fg:x="21301794945" fg:w="4118533"/><text x="53.7195%" y="159.50"></text></g><g><title>[unknown] (4,118,533 samples, 0.01%)</title><rect x="53.4695%" y="133" width="0.0103%" height="15" fill="rgb(208,67,9)" fg:x="21301794945" fg:w="4118533"/><text x="53.7195%" y="143.50"></text></g><g><title>[unknown] (4,118,533 samples, 0.01%)</title><rect x="53.4695%" y="117" width="0.0103%" height="15" fill="rgb(219,133,21)" fg:x="21301794945" fg:w="4118533"/><text x="53.7195%" y="127.50"></text></g><g><title>__GI___libc_malloc (8,101,032 samples, 0.02%)</title><rect x="53.4695%" y="213" width="0.0203%" height="15" fill="rgb(246,46,29)" fg:x="21301794945" fg:w="8101032"/><text x="53.7195%" y="223.50"></text></g><g><title>_int_malloc (8,101,032 samples, 0.02%)</title><rect x="53.4695%" y="197" width="0.0203%" height="15" fill="rgb(246,185,52)" fg:x="21301794945" fg:w="8101032"/><text x="53.7195%" y="207.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.8629370553447058674 (53,092,438 samples, 0.13%)</title><rect x="53.3979%" y="229" width="0.1333%" height="15" fill="rgb(252,136,11)" fg:x="21273252809" fg:w="53092438"/><text x="53.6479%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,449,270 samples, 0.04%)</title><rect x="53.4898%" y="213" width="0.0413%" height="15" fill="rgb(219,138,53)" fg:x="21309895977" fg:w="16449270"/><text x="53.7398%" y="223.50"></text></g><g><title>grpc::client::load_balancing::child_manager_cb::Inner&lt;T&gt;::resolve_child_controller (110,418,377 samples, 0.28%)</title><rect x="53.2848%" y="261" width="0.2772%" height="15" fill="rgb(211,51,23)" fg:x="21228195444" fg:w="110418377"/><text x="53.5348%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (93,945,506 samples, 0.24%)</title><rect x="53.3261%" y="245" width="0.2358%" height="15" fill="rgb(247,221,28)" fg:x="21244668315" fg:w="93945506"/><text x="53.5761%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,268,574 samples, 0.03%)</title><rect x="53.5311%" y="229" width="0.0308%" height="15" fill="rgb(251,222,45)" fg:x="21326345247" fg:w="12268574"/><text x="53.7811%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::ChildManagerCallbacks&lt;T&gt; as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (673,174,296 samples, 1.69%)</title><rect x="51.9948%" y="277" width="1.6897%" height="15" fill="rgb(217,162,53)" fg:x="20714289352" fg:w="673174296"/><text x="52.2448%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (48,849,827 samples, 0.12%)</title><rect x="53.5619%" y="261" width="0.1226%" height="15" fill="rgb(229,93,14)" fg:x="21338613821" fg:w="48849827"/><text x="53.8119%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32,556,799 samples, 0.08%)</title><rect x="53.6028%" y="245" width="0.0817%" height="15" fill="rgb(209,67,49)" fg:x="21354906849" fg:w="32556799"/><text x="53.8528%" y="255.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (12,249,317 samples, 0.03%)</title><rect x="53.6538%" y="229" width="0.0307%" height="15" fill="rgb(213,87,29)" fg:x="21375214331" fg:w="12249317"/><text x="53.9038%" y="239.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.2597197333346081462 (4,082,970 samples, 0.01%)</title><rect x="53.6743%" y="213" width="0.0102%" height="15" fill="rgb(205,151,52)" fg:x="21383380678" fg:w="4082970"/><text x="53.9243%" y="223.50"></text></g><g><title>_int_free (12,205,108 samples, 0.03%)</title><rect x="53.7464%" y="229" width="0.0306%" height="15" fill="rgb(253,215,39)" fg:x="21412098980" fg:w="12205108"/><text x="53.9964%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,930,225 samples, 0.11%)</title><rect x="53.6845%" y="261" width="0.1128%" height="15" fill="rgb(221,220,41)" fg:x="21387463648" fg:w="44930225"/><text x="53.9345%" y="271.50"></text></g><g><title>__GI___libc_free (24,382,631 samples, 0.06%)</title><rect x="53.7361%" y="245" width="0.0612%" height="15" fill="rgb(218,133,21)" fg:x="21408011242" fg:w="24382631"/><text x="53.9861%" y="255.50"></text></g><g><title>arena_for_chunk (8,089,785 samples, 0.02%)</title><rect x="53.7770%" y="229" width="0.0203%" height="15" fill="rgb(221,193,43)" fg:x="21424304088" fg:w="8089785"/><text x="54.0270%" y="239.50"></text></g><g><title>__GI___libc_malloc (52,960,719 samples, 0.13%)</title><rect x="53.8899%" y="197" width="0.1329%" height="15" fill="rgb(240,128,52)" fg:x="21469277577" fg:w="52960719"/><text x="54.1399%" y="207.50"></text></g><g><title>_int_malloc (40,765,338 samples, 0.10%)</title><rect x="53.9205%" y="181" width="0.1023%" height="15" fill="rgb(253,114,12)" fg:x="21481472958" fg:w="40765338"/><text x="54.1705%" y="191.50"></text></g><g><title>[unknown] (8,137,853 samples, 0.02%)</title><rect x="54.0024%" y="165" width="0.0204%" height="15" fill="rgb(215,223,47)" fg:x="21514100443" fg:w="8137853"/><text x="54.2524%" y="175.50"></text></g><g><title>[unknown] (8,137,853 samples, 0.02%)</title><rect x="54.0024%" y="149" width="0.0204%" height="15" fill="rgb(248,225,23)" fg:x="21514100443" fg:w="8137853"/><text x="54.2524%" y="159.50"></text></g><g><title>[unknown] (8,137,853 samples, 0.02%)</title><rect x="54.0024%" y="133" width="0.0204%" height="15" fill="rgb(250,108,0)" fg:x="21514100443" fg:w="8137853"/><text x="54.2524%" y="143.50"></text></g><g><title>[unknown] (8,137,853 samples, 0.02%)</title><rect x="54.0024%" y="117" width="0.0204%" height="15" fill="rgb(228,208,7)" fg:x="21514100443" fg:w="8137853"/><text x="54.2524%" y="127.50"></text></g><g><title>[unknown] (8,137,853 samples, 0.02%)</title><rect x="54.0024%" y="101" width="0.0204%" height="15" fill="rgb(244,45,10)" fg:x="21514100443" fg:w="8137853"/><text x="54.2524%" y="111.50"></text></g><g><title>[unknown] (4,024,028 samples, 0.01%)</title><rect x="54.0127%" y="85" width="0.0101%" height="15" fill="rgb(207,125,25)" fg:x="21518214268" fg:w="4024028"/><text x="54.2627%" y="95.50"></text></g><g><title>[unknown] (4,024,028 samples, 0.01%)</title><rect x="54.0127%" y="69" width="0.0101%" height="15" fill="rgb(210,195,18)" fg:x="21518214268" fg:w="4024028"/><text x="54.2627%" y="79.50"></text></g><g><title>[unknown] (4,024,028 samples, 0.01%)</title><rect x="54.0127%" y="53" width="0.0101%" height="15" fill="rgb(249,80,12)" fg:x="21518214268" fg:w="4024028"/><text x="54.2627%" y="63.50"></text></g><g><title>__memcpy_avx_unaligned (4,078,532 samples, 0.01%)</title><rect x="54.0228%" y="197" width="0.0102%" height="15" fill="rgb(221,65,9)" fg:x="21522238296" fg:w="4078532"/><text x="54.2728%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (77,540,809 samples, 0.19%)</title><rect x="53.8487%" y="213" width="0.1946%" height="15" fill="rgb(235,49,36)" fg:x="21452844464" fg:w="77540809"/><text x="54.0987%" y="223.50"></text></g><g><title>__rdl_alloc (4,068,445 samples, 0.01%)</title><rect x="54.0331%" y="197" width="0.0102%" height="15" fill="rgb(225,32,20)" fg:x="21526316828" fg:w="4068445"/><text x="54.2831%" y="207.50"></text></g><g><title>__GI___libc_malloc (17,052,177 samples, 0.04%)</title><rect x="54.0433%" y="213" width="0.0428%" height="15" fill="rgb(215,141,46)" fg:x="21530385273" fg:w="17052177"/><text x="54.2933%" y="223.50"></text></g><g><title>_int_malloc (8,852,898 samples, 0.02%)</title><rect x="54.0639%" y="197" width="0.0222%" height="15" fill="rgb(250,160,47)" fg:x="21538584552" fg:w="8852898"/><text x="54.3139%" y="207.50"></text></g><g><title>[unknown] (4,045,011 samples, 0.01%)</title><rect x="54.0759%" y="181" width="0.0102%" height="15" fill="rgb(216,222,40)" fg:x="21543392439" fg:w="4045011"/><text x="54.3259%" y="191.50"></text></g><g><title>[unknown] (4,045,011 samples, 0.01%)</title><rect x="54.0759%" y="165" width="0.0102%" height="15" fill="rgb(234,217,39)" fg:x="21543392439" fg:w="4045011"/><text x="54.3259%" y="175.50"></text></g><g><title>[unknown] (4,045,011 samples, 0.01%)</title><rect x="54.0759%" y="149" width="0.0102%" height="15" fill="rgb(207,178,40)" fg:x="21543392439" fg:w="4045011"/><text x="54.3259%" y="159.50"></text></g><g><title>[unknown] (4,045,011 samples, 0.01%)</title><rect x="54.0759%" y="133" width="0.0102%" height="15" fill="rgb(221,136,13)" fg:x="21543392439" fg:w="4045011"/><text x="54.3259%" y="143.50"></text></g><g><title>[unknown] (4,045,011 samples, 0.01%)</title><rect x="54.0759%" y="117" width="0.0102%" height="15" fill="rgb(249,199,10)" fg:x="21543392439" fg:w="4045011"/><text x="54.3259%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (114,906,570 samples, 0.29%)</title><rect x="53.8076%" y="229" width="0.2884%" height="15" fill="rgb(249,222,13)" fg:x="21436498702" fg:w="114906570"/><text x="54.0576%" y="239.50"></text></g><g><title>[unknown] (16,328,768 samples, 0.04%)</title><rect x="54.0960%" y="229" width="0.0410%" height="15" fill="rgb(244,185,38)" fg:x="21551405272" fg:w="16328768"/><text x="54.3460%" y="239.50"></text></g><g><title>[unknown] (16,328,768 samples, 0.04%)</title><rect x="54.0960%" y="213" width="0.0410%" height="15" fill="rgb(236,202,9)" fg:x="21551405272" fg:w="16328768"/><text x="54.3460%" y="223.50"></text></g><g><title>[unknown] (16,328,768 samples, 0.04%)</title><rect x="54.0960%" y="197" width="0.0410%" height="15" fill="rgb(250,229,37)" fg:x="21551405272" fg:w="16328768"/><text x="54.3460%" y="207.50"></text></g><g><title>[unknown] (16,328,768 samples, 0.04%)</title><rect x="54.0960%" y="181" width="0.0410%" height="15" fill="rgb(206,174,23)" fg:x="21551405272" fg:w="16328768"/><text x="54.3460%" y="191.50"></text></g><g><title>[unknown] (16,328,768 samples, 0.04%)</title><rect x="54.0960%" y="165" width="0.0410%" height="15" fill="rgb(211,33,43)" fg:x="21551405272" fg:w="16328768"/><text x="54.3460%" y="175.50"></text></g><g><title>[unknown] (16,328,768 samples, 0.04%)</title><rect x="54.0960%" y="149" width="0.0410%" height="15" fill="rgb(245,58,50)" fg:x="21551405272" fg:w="16328768"/><text x="54.3460%" y="159.50"></text></g><g><title>[unknown] (12,326,207 samples, 0.03%)</title><rect x="54.1061%" y="133" width="0.0309%" height="15" fill="rgb(244,68,36)" fg:x="21555407833" fg:w="12326207"/><text x="54.3561%" y="143.50"></text></g><g><title>[unknown] (4,124,057 samples, 0.01%)</title><rect x="54.1267%" y="117" width="0.0104%" height="15" fill="rgb(232,229,15)" fg:x="21563609983" fg:w="4124057"/><text x="54.3767%" y="127.50"></text></g><g><title>[unknown] (4,124,057 samples, 0.01%)</title><rect x="54.1267%" y="101" width="0.0104%" height="15" fill="rgb(254,30,23)" fg:x="21563609983" fg:w="4124057"/><text x="54.3767%" y="111.50"></text></g><g><title>[unknown] (4,124,057 samples, 0.01%)</title><rect x="54.1267%" y="85" width="0.0104%" height="15" fill="rgb(235,160,14)" fg:x="21563609983" fg:w="4124057"/><text x="54.3767%" y="95.50"></text></g><g><title>&lt;lb_apis::del_pol_cb::DelegatingPolicyCallbacks as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (857,560,066 samples, 2.15%)</title><rect x="51.9948%" y="293" width="2.1526%" height="15" fill="rgb(212,155,44)" fg:x="20714289352" fg:w="857560066"/><text x="52.2448%" y="303.50">&lt;..</text></g><g><title>_ZN7lb_apis10del_pol_cb13update_picker17h65016aa5f354d11bE.llvm.6945639425234485707 (184,385,770 samples, 0.46%)</title><rect x="53.6845%" y="277" width="0.4628%" height="15" fill="rgb(226,2,50)" fg:x="21387463648" fg:w="184385770"/><text x="53.9345%" y="287.50"></text></g><g><title>grpc::client::load_balancing::child_manager_cb::ChildManagerCallbacks&lt;T&gt;::child_states (139,455,545 samples, 0.35%)</title><rect x="53.7973%" y="261" width="0.3500%" height="15" fill="rgb(234,177,6)" fg:x="21432393873" fg:w="139455545"/><text x="54.0473%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (139,455,545 samples, 0.35%)</title><rect x="53.7973%" y="245" width="0.3500%" height="15" fill="rgb(217,24,9)" fg:x="21432393873" fg:w="139455545"/><text x="54.0473%" y="255.50"></text></g><g><title>__GI___libc_malloc (4,115,378 samples, 0.01%)</title><rect x="54.1370%" y="229" width="0.0103%" height="15" fill="rgb(220,13,46)" fg:x="21567734040" fg:w="4115378"/><text x="54.3870%" y="239.50"></text></g><g><title>_int_malloc (4,115,378 samples, 0.01%)</title><rect x="54.1370%" y="213" width="0.0103%" height="15" fill="rgb(239,221,27)" fg:x="21567734040" fg:w="4115378"/><text x="54.3870%" y="223.50"></text></g><g><title>malloc_consolidate (4,115,378 samples, 0.01%)</title><rect x="54.1370%" y="197" width="0.0103%" height="15" fill="rgb(222,198,25)" fg:x="21567734040" fg:w="4115378"/><text x="54.3870%" y="207.50"></text></g><g><title>__GI___libc_free (12,314,032 samples, 0.03%)</title><rect x="54.1474%" y="293" width="0.0309%" height="15" fill="rgb(211,99,13)" fg:x="21571849418" fg:w="12314032"/><text x="54.3974%" y="303.50"></text></g><g><title>_int_free (12,314,032 samples, 0.03%)</title><rect x="54.1474%" y="277" width="0.0309%" height="15" fill="rgb(232,111,31)" fg:x="21571849418" fg:w="12314032"/><text x="54.3974%" y="287.50"></text></g><g><title>__GI___libc_malloc (32,288,771 samples, 0.08%)</title><rect x="54.1783%" y="293" width="0.0810%" height="15" fill="rgb(245,82,37)" fg:x="21584163450" fg:w="32288771"/><text x="54.4283%" y="303.50"></text></g><g><title>_int_malloc (32,288,771 samples, 0.08%)</title><rect x="54.1783%" y="277" width="0.0810%" height="15" fill="rgb(227,149,46)" fg:x="21584163450" fg:w="32288771"/><text x="54.4283%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned (4,066,326 samples, 0.01%)</title><rect x="54.2593%" y="245" width="0.0102%" height="15" fill="rgb(218,36,50)" fg:x="21616452221" fg:w="4066326"/><text x="54.5093%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8,155,711 samples, 0.02%)</title><rect x="54.2593%" y="261" width="0.0205%" height="15" fill="rgb(226,80,48)" fg:x="21616452221" fg:w="8155711"/><text x="54.5093%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,089,385 samples, 0.01%)</title><rect x="54.2695%" y="245" width="0.0103%" height="15" fill="rgb(238,224,15)" fg:x="21620518547" fg:w="4089385"/><text x="54.5195%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,234,647 samples, 0.02%)</title><rect x="54.3208%" y="229" width="0.0207%" height="15" fill="rgb(241,136,10)" fg:x="21640942931" fg:w="8234647"/><text x="54.5708%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (53,203,887 samples, 0.13%)</title><rect x="54.2593%" y="293" width="0.1335%" height="15" fill="rgb(208,32,45)" fg:x="21616452221" fg:w="53203887"/><text x="54.5093%" y="303.50"></text></g><g><title>core::fmt::write (53,203,887 samples, 0.13%)</title><rect x="54.2593%" y="277" width="0.1335%" height="15" fill="rgb(207,135,9)" fg:x="21616452221" fg:w="53203887"/><text x="54.5093%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (45,048,176 samples, 0.11%)</title><rect x="54.2798%" y="261" width="0.1131%" height="15" fill="rgb(206,86,44)" fg:x="21624607932" fg:w="45048176"/><text x="54.5298%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (45,048,176 samples, 0.11%)</title><rect x="54.2798%" y="245" width="0.1131%" height="15" fill="rgb(245,177,15)" fg:x="21624607932" fg:w="45048176"/><text x="54.5298%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (20,478,530 samples, 0.05%)</title><rect x="54.3415%" y="229" width="0.0514%" height="15" fill="rgb(206,64,50)" fg:x="21649177578" fg:w="20478530"/><text x="54.5915%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (16,454,328 samples, 0.04%)</title><rect x="54.3516%" y="213" width="0.0413%" height="15" fill="rgb(234,36,40)" fg:x="21653201780" fg:w="16454328"/><text x="54.6016%" y="223.50"></text></g><g><title>__GI___libc_malloc (16,454,328 samples, 0.04%)</title><rect x="54.3516%" y="197" width="0.0413%" height="15" fill="rgb(213,64,8)" fg:x="21653201780" fg:w="16454328"/><text x="54.6016%" y="207.50"></text></g><g><title>_int_malloc (12,323,599 samples, 0.03%)</title><rect x="54.3619%" y="181" width="0.0309%" height="15" fill="rgb(210,75,36)" fg:x="21657332509" fg:w="12323599"/><text x="54.6119%" y="191.50"></text></g><g><title>__GI___libc_malloc (28,255,833 samples, 0.07%)</title><rect x="54.4336%" y="261" width="0.0709%" height="15" fill="rgb(229,88,21)" fg:x="21685898887" fg:w="28255833"/><text x="54.6836%" y="271.50"></text></g><g><title>_int_malloc (28,255,833 samples, 0.07%)</title><rect x="54.4336%" y="245" width="0.0709%" height="15" fill="rgb(252,204,47)" fg:x="21685898887" fg:w="28255833"/><text x="54.6836%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (48,625,911 samples, 0.12%)</title><rect x="54.3929%" y="293" width="0.1221%" height="15" fill="rgb(208,77,27)" fg:x="21669656108" fg:w="48625911"/><text x="54.6429%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.7623550346864670336 (40,500,083 samples, 0.10%)</title><rect x="54.4133%" y="277" width="0.1017%" height="15" fill="rgb(221,76,26)" fg:x="21677781936" fg:w="40500083"/><text x="54.6633%" y="287.50"></text></g><g><title>__GI___libc_realloc (4,127,299 samples, 0.01%)</title><rect x="54.5046%" y="261" width="0.0104%" height="15" fill="rgb(225,139,18)" fg:x="21714154720" fg:w="4127299"/><text x="54.7546%" y="271.50"></text></g><g><title>_int_realloc (4,127,299 samples, 0.01%)</title><rect x="54.5046%" y="245" width="0.0104%" height="15" fill="rgb(230,137,11)" fg:x="21714154720" fg:w="4127299"/><text x="54.7546%" y="255.50"></text></g><g><title>__GI_memcpy (4,127,299 samples, 0.01%)</title><rect x="54.5046%" y="229" width="0.0104%" height="15" fill="rgb(212,28,1)" fg:x="21714154720" fg:w="4127299"/><text x="54.7546%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,127,299 samples, 0.01%)</title><rect x="54.5046%" y="213" width="0.0104%" height="15" fill="rgb(248,164,17)" fg:x="21714154720" fg:w="4127299"/><text x="54.7546%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,105,424 samples, 0.02%)</title><rect x="54.5251%" y="277" width="0.0203%" height="15" fill="rgb(222,171,42)" fg:x="21722350066" fg:w="8105424"/><text x="54.7751%" y="287.50"></text></g><g><title>_int_free (65,276,577 samples, 0.16%)</title><rect x="54.6479%" y="245" width="0.1639%" height="15" fill="rgb(243,84,45)" fg:x="21771269389" fg:w="65276577"/><text x="54.8979%" y="255.50"></text></g><g><title>__GI___libc_free (81,548,920 samples, 0.20%)</title><rect x="54.6273%" y="261" width="0.2047%" height="15" fill="rgb(252,49,23)" fg:x="21763067875" fg:w="81548920"/><text x="54.8773%" y="271.50"></text></g><g><title>_int_free_merge_chunk (8,070,829 samples, 0.02%)</title><rect x="54.8118%" y="245" width="0.0203%" height="15" fill="rgb(215,19,7)" fg:x="21836545966" fg:w="8070829"/><text x="55.0618%" y="255.50"></text></g><g><title>__rdl_dealloc (4,112,658 samples, 0.01%)</title><rect x="54.8320%" y="261" width="0.0103%" height="15" fill="rgb(238,81,41)" fg:x="21844616795" fg:w="4112658"/><text x="55.0820%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,277,019 samples, 0.05%)</title><rect x="54.8424%" y="245" width="0.0509%" height="15" fill="rgb(210,199,37)" fg:x="21848729453" fg:w="20277019"/><text x="55.0924%" y="255.50"></text></g><g><title>__GI___libc_free (4,103,492 samples, 0.01%)</title><rect x="54.8830%" y="229" width="0.0103%" height="15" fill="rgb(244,192,49)" fg:x="21864902980" fg:w="4103492"/><text x="55.1330%" y="239.50"></text></g><g><title>_int_free (4,103,492 samples, 0.01%)</title><rect x="54.8830%" y="213" width="0.0103%" height="15" fill="rgb(226,211,11)" fg:x="21864902980" fg:w="4103492"/><text x="55.1330%" y="223.50"></text></g><g><title>_ZN4core3ptr121drop_in_place$LT$grpc..client..load_balancing..child_manager_cb..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h3deee280ed9120c0E.llvm.17382535891996400411 (142,668,311 samples, 0.36%)</title><rect x="54.5455%" y="277" width="0.3581%" height="15" fill="rgb(236,162,54)" fg:x="21730455490" fg:w="142668311"/><text x="54.7955%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (24,394,348 samples, 0.06%)</title><rect x="54.8424%" y="261" width="0.0612%" height="15" fill="rgb(220,229,9)" fg:x="21848729453" fg:w="24394348"/><text x="55.0924%" y="271.50"></text></g><g><title>__GI___libc_free (4,117,329 samples, 0.01%)</title><rect x="54.8933%" y="245" width="0.0103%" height="15" fill="rgb(250,87,22)" fg:x="21869006472" fg:w="4117329"/><text x="55.1433%" y="255.50"></text></g><g><title>_int_free (8,141,662 samples, 0.02%)</title><rect x="54.9136%" y="261" width="0.0204%" height="15" fill="rgb(239,43,17)" fg:x="21877127527" fg:w="8141662"/><text x="55.1636%" y="271.50"></text></g><g><title>_int_free_maybe_consolidate (138,718,625 samples, 0.35%)</title><rect x="54.9341%" y="261" width="0.3482%" height="15" fill="rgb(231,177,25)" fg:x="21885269189" fg:w="138718625"/><text x="55.1841%" y="271.50"></text></g><g><title>malloc_consolidate (138,718,625 samples, 0.35%)</title><rect x="54.9341%" y="245" width="0.3482%" height="15" fill="rgb(219,179,1)" fg:x="21885269189" fg:w="138718625"/><text x="55.1841%" y="255.50"></text></g><g><title>unlink_chunk (53,296,624 samples, 0.13%)</title><rect x="55.1485%" y="229" width="0.1338%" height="15" fill="rgb(238,219,53)" fg:x="21970691190" fg:w="53296624"/><text x="55.3985%" y="239.50"></text></g><g><title>__GI___libc_free (154,932,823 samples, 0.39%)</title><rect x="54.9036%" y="277" width="0.3889%" height="15" fill="rgb(232,167,36)" fg:x="21873123801" fg:w="154932823"/><text x="55.1536%" y="287.50"></text></g><g><title>arena_for_chunk (4,068,810 samples, 0.01%)</title><rect x="55.2823%" y="261" width="0.0102%" height="15" fill="rgb(244,19,51)" fg:x="22023987814" fg:w="4068810"/><text x="55.5323%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16,218,963 samples, 0.04%)</title><rect x="55.2925%" y="277" width="0.0407%" height="15" fill="rgb(224,6,22)" fg:x="22028056624" fg:w="16218963"/><text x="55.5425%" y="287.50"></text></g><g><title>__GI___libc_free (12,269,335 samples, 0.03%)</title><rect x="55.3846%" y="261" width="0.0308%" height="15" fill="rgb(224,145,5)" fg:x="22064757100" fg:w="12269335"/><text x="55.6346%" y="271.50"></text></g><g><title>_int_free (8,138,458 samples, 0.02%)</title><rect x="55.3950%" y="245" width="0.0204%" height="15" fill="rgb(234,130,49)" fg:x="22068887977" fg:w="8138458"/><text x="55.6450%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (379,172,108 samples, 0.95%)</title><rect x="54.5149%" y="293" width="0.9518%" height="15" fill="rgb(254,6,2)" fg:x="21718282019" fg:w="379172108"/><text x="54.7649%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::del_pol_cb::WrappedControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (53,178,540 samples, 0.13%)</title><rect x="55.3332%" y="277" width="0.1335%" height="15" fill="rgb(208,96,46)" fg:x="22044275587" fg:w="53178540"/><text x="55.5832%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;grpc::client::name_resolution::Endpoint&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (20,427,692 samples, 0.05%)</title><rect x="55.4154%" y="261" width="0.0513%" height="15" fill="rgb(239,3,39)" fg:x="22077026435" fg:w="20427692"/><text x="55.6654%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::chi_pol_cb::ChildPolicyCallbacks as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::{{closure}}&gt; (4,133,812 samples, 0.01%)</title><rect x="55.4563%" y="245" width="0.0104%" height="15" fill="rgb(233,210,1)" fg:x="22093320315" fg:w="4133812"/><text x="55.7063%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicyCallbacks as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::_{{closure}} (8,168,399 samples, 0.02%)</title><rect x="55.5491%" y="229" width="0.0205%" height="15" fill="rgb(244,137,37)" fg:x="22130284686" fg:w="8168399"/><text x="55.7991%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,077,599 samples, 0.01%)</title><rect x="55.5594%" y="213" width="0.0102%" height="15" fill="rgb(240,136,2)" fg:x="22134375486" fg:w="4077599"/><text x="55.8094%" y="223.50"></text></g><g><title>__GI___libc_free (4,127,035 samples, 0.01%)</title><rect x="55.5800%" y="213" width="0.0104%" height="15" fill="rgb(239,18,37)" fg:x="22142584253" fg:w="4127035"/><text x="55.8300%" y="223.50"></text></g><g><title>_int_free (4,127,035 samples, 0.01%)</title><rect x="55.5800%" y="197" width="0.0104%" height="15" fill="rgb(218,185,22)" fg:x="22142584253" fg:w="4127035"/><text x="55.8300%" y="207.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (41,071,323 samples, 0.10%)</title><rect x="55.5078%" y="245" width="0.1031%" height="15" fill="rgb(225,218,4)" fg:x="22113826105" fg:w="41071323"/><text x="55.7578%" y="255.50"></text></g><g><title>grpc::client::load_balancing::child_manager_cb::Inner&lt;T&gt;::resolve_child_controller (16,444,343 samples, 0.04%)</title><rect x="55.5696%" y="229" width="0.0413%" height="15" fill="rgb(230,182,32)" fg:x="22138453085" fg:w="16444343"/><text x="55.8196%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8,186,140 samples, 0.02%)</title><rect x="55.5903%" y="213" width="0.0205%" height="15" fill="rgb(242,56,43)" fg:x="22146711288" fg:w="8186140"/><text x="55.8403%" y="223.50"></text></g><g><title>_int_free (60,743,596 samples, 0.15%)</title><rect x="56.4874%" y="197" width="0.1525%" height="15" fill="rgb(233,99,24)" fg:x="22504106453" fg:w="60743596"/><text x="56.7374%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (109,933,470 samples, 0.28%)</title><rect x="56.3742%" y="229" width="0.2759%" height="15" fill="rgb(234,209,42)" fg:x="22459002986" fg:w="109933470"/><text x="56.6242%" y="239.50"></text></g><g><title>__GI___libc_free (85,408,478 samples, 0.21%)</title><rect x="56.4358%" y="213" width="0.2144%" height="15" fill="rgb(227,7,12)" fg:x="22483527978" fg:w="85408478"/><text x="56.6858%" y="223.50"></text></g><g><title>arena_for_chunk (4,086,407 samples, 0.01%)</title><rect x="56.6399%" y="197" width="0.0103%" height="15" fill="rgb(245,203,43)" fg:x="22564850049" fg:w="4086407"/><text x="56.8899%" y="207.50"></text></g><g><title>__GI___libc_malloc (4,131,877 samples, 0.01%)</title><rect x="56.6501%" y="229" width="0.0104%" height="15" fill="rgb(238,205,33)" fg:x="22568936456" fg:w="4131877"/><text x="56.9001%" y="239.50"></text></g><g><title>tcache_get (4,131,877 samples, 0.01%)</title><rect x="56.6501%" y="213" width="0.0104%" height="15" fill="rgb(231,56,7)" fg:x="22568936456" fg:w="4131877"/><text x="56.9001%" y="223.50"></text></g><g><title>tcache_get_n (4,131,877 samples, 0.01%)</title><rect x="56.6501%" y="197" width="0.0104%" height="15" fill="rgb(244,186,29)" fg:x="22568936456" fg:w="4131877"/><text x="56.9001%" y="207.50"></text></g><g><title>__GI___libc_free (4,048,009 samples, 0.01%)</title><rect x="56.6605%" y="213" width="0.0102%" height="15" fill="rgb(234,111,31)" fg:x="22573068333" fg:w="4048009"/><text x="56.9105%" y="223.50"></text></g><g><title>_int_free_maybe_consolidate (4,048,009 samples, 0.01%)</title><rect x="56.6605%" y="197" width="0.0102%" height="15" fill="rgb(241,149,10)" fg:x="22573068333" fg:w="4048009"/><text x="56.9105%" y="207.50"></text></g><g><title>malloc_consolidate (4,048,009 samples, 0.01%)</title><rect x="56.6605%" y="181" width="0.0102%" height="15" fill="rgb(249,206,44)" fg:x="22573068333" fg:w="4048009"/><text x="56.9105%" y="191.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (28,793,023 samples, 0.07%)</title><rect x="56.6605%" y="229" width="0.0723%" height="15" fill="rgb(251,153,30)" fg:x="22573068333" fg:w="28793023"/><text x="56.9105%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_cb::RRPickerPicker&gt; (24,745,014 samples, 0.06%)</title><rect x="56.6707%" y="213" width="0.0621%" height="15" fill="rgb(239,152,38)" fg:x="22577116342" fg:w="24745014"/><text x="56.9207%" y="223.50"></text></g><g><title>free_perturb (16,299,637 samples, 0.04%)</title><rect x="66.0173%" y="165" width="0.0409%" height="15" fill="rgb(249,139,47)" fg:x="26300748373" fg:w="16299637"/><text x="66.2673%" y="175.50"></text></g><g><title>_int_free (1,528,736,629 samples, 3.84%)</title><rect x="62.2310%" y="181" width="3.8373%" height="15" fill="rgb(244,64,35)" fg:x="24792315486" fg:w="1528736629"/><text x="62.4810%" y="191.50">_int..</text></g><g><title>tcache_put (4,004,105 samples, 0.01%)</title><rect x="66.0583%" y="165" width="0.0101%" height="15" fill="rgb(216,46,15)" fg:x="26317048010" fg:w="4004105"/><text x="66.3083%" y="175.50"></text></g><g><title>__GI___libc_free (2,135,438,677 samples, 5.36%)</title><rect x="60.8935%" y="197" width="5.3602%" height="15" fill="rgb(250,74,19)" fg:x="24259433826" fg:w="2135438677"/><text x="61.1435%" y="207.50">__GI___..</text></g><g><title>arena_for_chunk (73,820,388 samples, 0.19%)</title><rect x="66.0683%" y="181" width="0.1853%" height="15" fill="rgb(249,42,33)" fg:x="26321052115" fg:w="73820388"/><text x="66.3183%" y="191.50"></text></g><g><title>__rdl_dealloc (176,343,816 samples, 0.44%)</title><rect x="66.2536%" y="197" width="0.4426%" height="15" fill="rgb(242,149,17)" fg:x="26394872503" fg:w="176343816"/><text x="66.5036%" y="207.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (3,985,666,789 samples, 10.00%)</title><rect x="56.7328%" y="229" width="10.0044%" height="15" fill="rgb(244,29,21)" fg:x="22601861356" fg:w="3985666789"/><text x="56.9828%" y="239.50">alloc::vec::in..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3,985,666,789 samples, 10.00%)</title><rect x="56.7328%" y="213" width="10.0044%" height="15" fill="rgb(220,130,37)" fg:x="22601861356" fg:w="3985666789"/><text x="56.9828%" y="223.50">&lt;alloc::vec::i..</text></g><g><title>__rust_dealloc (16,311,826 samples, 0.04%)</title><rect x="66.6962%" y="197" width="0.0409%" height="15" fill="rgb(211,67,2)" fg:x="26571216319" fg:w="16311826"/><text x="66.9462%" y="207.50"></text></g><g><title>[unknown] (4,098,572 samples, 0.01%)</title><rect x="85.6011%" y="133" width="0.0103%" height="15" fill="rgb(235,68,52)" fg:x="34102744583" fg:w="4098572"/><text x="85.8511%" y="143.50"></text></g><g><title>[unknown] (4,098,572 samples, 0.01%)</title><rect x="85.6011%" y="117" width="0.0103%" height="15" fill="rgb(246,142,3)" fg:x="34102744583" fg:w="4098572"/><text x="85.8511%" y="127.50"></text></g><g><title>[unknown] (4,098,572 samples, 0.01%)</title><rect x="85.6011%" y="101" width="0.0103%" height="15" fill="rgb(241,25,7)" fg:x="34102744583" fg:w="4098572"/><text x="85.8511%" y="111.50"></text></g><g><title>alloc_perturb (45,148,303 samples, 0.11%)</title><rect x="85.6114%" y="133" width="0.1133%" height="15" fill="rgb(242,119,39)" fg:x="34106843155" fg:w="45148303"/><text x="85.8614%" y="143.50"></text></g><g><title>checked_request2size (65,592,189 samples, 0.16%)</title><rect x="85.7247%" y="133" width="0.1646%" height="15" fill="rgb(241,98,45)" fg:x="34151991458" fg:w="65592189"/><text x="85.9747%" y="143.50"></text></g><g><title>_int_malloc (2,600,764,269 samples, 6.53%)</title><rect x="80.2880%" y="149" width="6.5282%" height="15" fill="rgb(254,28,30)" fg:x="31986064605" fg:w="2600764269"/><text x="80.5380%" y="159.50">_int_mall..</text></g><g><title>unlink_chunk (369,245,227 samples, 0.93%)</title><rect x="85.8893%" y="133" width="0.9268%" height="15" fill="rgb(241,142,54)" fg:x="34217583647" fg:w="369245227"/><text x="86.1393%" y="143.50"></text></g><g><title>arena_for_chunk (12,341,011 samples, 0.03%)</title><rect x="86.8162%" y="149" width="0.0310%" height="15" fill="rgb(222,85,15)" fg:x="34586828874" fg:w="12341011"/><text x="87.0662%" y="159.50"></text></g><g><title>__GI___libc_malloc (3,354,574,305 samples, 8.42%)</title><rect x="78.5195%" y="165" width="8.4203%" height="15" fill="rgb(210,85,47)" fg:x="31281485792" fg:w="3354574305"/><text x="78.7695%" y="175.50">__GI___libc_..</text></g><g><title>checked_request2size (36,890,212 samples, 0.09%)</title><rect x="86.8472%" y="149" width="0.0926%" height="15" fill="rgb(224,206,25)" fg:x="34599169885" fg:w="36890212"/><text x="87.0972%" y="159.50"></text></g><g><title>__memcpy_avx_unaligned (352,134,307 samples, 0.88%)</title><rect x="86.9398%" y="165" width="0.8839%" height="15" fill="rgb(243,201,19)" fg:x="34636060097" fg:w="352134307"/><text x="87.1898%" y="175.50"></text></g><g><title>__memcpy_avx_unaligned_erms (307,709,467 samples, 0.77%)</title><rect x="87.8236%" y="165" width="0.7724%" height="15" fill="rgb(236,59,4)" fg:x="34988194404" fg:w="307709467"/><text x="88.0736%" y="175.50"></text></g><g><title>__rdl_alloc (97,946,143 samples, 0.25%)</title><rect x="88.5960%" y="165" width="0.2459%" height="15" fill="rgb(254,179,45)" fg:x="35295903871" fg:w="97946143"/><text x="88.8460%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5,289,272,414 samples, 13.28%)</title><rect x="75.9358%" y="181" width="13.2766%" height="15" fill="rgb(226,14,10)" fg:x="30252163257" fg:w="5289272414"/><text x="76.1858%" y="191.50">&lt;alloc::string::Stri..</text></g><g><title>__rust_alloc (147,585,657 samples, 0.37%)</title><rect x="88.8419%" y="165" width="0.3705%" height="15" fill="rgb(244,27,41)" fg:x="35393850014" fg:w="147585657"/><text x="89.0919%" y="175.50"></text></g><g><title>alloc_perturb (32,772,854 samples, 0.08%)</title><rect x="91.5883%" y="149" width="0.0823%" height="15" fill="rgb(235,35,32)" fg:x="36487998586" fg:w="32772854"/><text x="91.8383%" y="159.50"></text></g><g><title>_int_malloc (950,294,712 samples, 2.39%)</title><rect x="89.7475%" y="165" width="2.3853%" height="15" fill="rgb(218,68,31)" fg:x="35754659075" fg:w="950294712"/><text x="89.9975%" y="175.50">_i..</text></g><g><title>unlink_chunk (184,182,347 samples, 0.46%)</title><rect x="91.6706%" y="149" width="0.4623%" height="15" fill="rgb(207,120,37)" fg:x="36520771440" fg:w="184182347"/><text x="91.9206%" y="159.50"></text></g><g><title>__GI___libc_malloc (1,167,619,470 samples, 2.93%)</title><rect x="89.2123%" y="181" width="2.9308%" height="15" fill="rgb(227,98,0)" fg:x="35541435671" fg:w="1167619470"/><text x="89.4623%" y="191.50">__..</text></g><g><title>arena_for_chunk (4,101,354 samples, 0.01%)</title><rect x="92.1329%" y="165" width="0.0103%" height="15" fill="rgb(207,7,3)" fg:x="36704953787" fg:w="4101354"/><text x="92.3829%" y="175.50"></text></g><g><title>__rdl_alloc (53,492,724 samples, 0.13%)</title><rect x="92.1432%" y="181" width="0.1343%" height="15" fill="rgb(206,98,19)" fg:x="36709055141" fg:w="53492724"/><text x="92.3932%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8,985,976,218 samples, 22.56%)</title><rect x="69.8248%" y="197" width="22.5556%" height="15" fill="rgb(217,5,26)" fg:x="27817587538" fg:w="8985976218"/><text x="70.0748%" y="207.50">&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone..</text></g><g><title>__rust_alloc (41,015,891 samples, 0.10%)</title><rect x="92.2774%" y="181" width="0.1030%" height="15" fill="rgb(235,190,38)" fg:x="36762547865" fg:w="41015891"/><text x="92.5274%" y="191.50"></text></g><g><title>malloc_consolidate (2,572,175,184 samples, 6.46%)</title><rect x="93.4980%" y="165" width="6.4564%" height="15" fill="rgb(247,86,24)" fg:x="37248802070" fg:w="2572175184"/><text x="93.7480%" y="175.50">malloc_c..</text></g><g><title>unlink_chunk (962,997,576 samples, 2.42%)</title><rect x="97.5372%" y="149" width="2.4172%" height="15" fill="rgb(205,101,16)" fg:x="38857979678" fg:w="962997576"/><text x="97.7872%" y="159.50">un..</text></g><g><title>_ZN7lb_apis10del_pol_cb13update_picker17h65016aa5f354d11bE.llvm.6945639425234485707 (17,670,130,066 samples, 44.35%)</title><rect x="55.6109%" y="245" width="44.3537%" height="15" fill="rgb(246,168,33)" fg:x="22154897428" fg:w="17670130066"/><text x="55.8609%" y="255.50">_ZN7lb_apis10del_pol_cb13update_picker17h65016aa5f354d11bE.llvm.694563942..</text></g><g><title>grpc::client::load_balancing::child_manager_cb::ChildManagerCallbacks&lt;T&gt;::child_states (13,237,499,349 samples, 33.23%)</title><rect x="66.7372%" y="229" width="33.2274%" height="15" fill="rgb(231,114,1)" fg:x="26587528145" fg:w="13237499349"/><text x="66.9872%" y="239.50">grpc::client::load_balancing::child_manager_cb::ChildM..</text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13,237,499,349 samples, 33.23%)</title><rect x="66.7372%" y="213" width="33.2274%" height="15" fill="rgb(207,184,53)" fg:x="26587528145" fg:w="13237499349"/><text x="66.9872%" y="223.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::Spe..</text></g><g><title>__GI___libc_malloc (3,021,463,738 samples, 7.58%)</title><rect x="92.3804%" y="197" width="7.5842%" height="15" fill="rgb(224,95,51)" fg:x="36803563756" fg:w="3021463738"/><text x="92.6304%" y="207.50">__GI___lib..</text></g><g><title>_int_malloc (3,021,463,738 samples, 7.58%)</title><rect x="92.3804%" y="181" width="7.5842%" height="15" fill="rgb(212,188,45)" fg:x="36803563756" fg:w="3021463738"/><text x="92.6304%" y="191.50">_int_malloc</text></g><g><title>unlink_chunk (4,050,240 samples, 0.01%)</title><rect x="99.9544%" y="165" width="0.0102%" height="15" fill="rgb(223,154,38)" fg:x="39820977254" fg:w="4050240"/><text x="100.2044%" y="175.50"></text></g><g><title>_int_free_maybe_consolidate (3,989,327 samples, 0.01%)</title><rect x="99.9646%" y="229" width="0.0100%" height="15" fill="rgb(251,22,52)" fg:x="39825027494" fg:w="3989327"/><text x="100.2146%" y="239.50"></text></g><g><title>malloc_consolidate (3,989,327 samples, 0.01%)</title><rect x="99.9646%" y="213" width="0.0100%" height="15" fill="rgb(229,209,22)" fg:x="39825027494" fg:w="3989327"/><text x="100.2146%" y="223.50"></text></g><g><title>__libc_start_main_impl (39,808,598,400 samples, 99.92%)</title><rect x="0.0616%" y="453" width="99.9233%" height="15" fill="rgb(234,138,34)" fg:x="24532910" fg:w="39808598400"/><text x="0.3116%" y="463.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (39,808,598,400 samples, 99.92%)</title><rect x="0.0616%" y="437" width="99.9233%" height="15" fill="rgb(212,95,11)" fg:x="24532910" fg:w="39808598400"/><text x="0.3116%" y="447.50">__libc_start_call_main</text></g><g><title>main (39,808,598,400 samples, 99.92%)</title><rect x="0.0616%" y="421" width="99.9233%" height="15" fill="rgb(240,179,47)" fg:x="24532910" fg:w="39808598400"/><text x="0.3116%" y="431.50">main</text></g><g><title>std::rt::lang_start_internal (39,808,598,400 samples, 99.92%)</title><rect x="0.0616%" y="405" width="99.9233%" height="15" fill="rgb(240,163,11)" fg:x="24532910" fg:w="39808598400"/><text x="0.3116%" y="415.50">std::rt::lang_start_internal</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.7334364125656633705 (39,808,598,400 samples, 99.92%)</title><rect x="0.0616%" y="389" width="99.9233%" height="15" fill="rgb(236,37,12)" fg:x="24532910" fg:w="39808598400"/><text x="0.3116%" y="399.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.7334364125656633705</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (39,808,598,400 samples, 99.92%)</title><rect x="0.0616%" y="373" width="99.9233%" height="15" fill="rgb(232,164,16)" fg:x="24532910" fg:w="39808598400"/><text x="0.3116%" y="383.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lb_apis::main (39,808,598,400 samples, 99.92%)</title><rect x="0.0616%" y="357" width="99.9233%" height="15" fill="rgb(244,205,15)" fg:x="24532910" fg:w="39808598400"/><text x="0.3116%" y="367.50">lb_apis::main</text></g><g><title>bencher::run_tests_console (39,808,598,400 samples, 99.92%)</title><rect x="0.0616%" y="341" width="99.9233%" height="15" fill="rgb(223,117,47)" fg:x="24532910" fg:w="39808598400"/><text x="0.3116%" y="351.50">bencher::run_tests_console</text></g><g><title>bencher::Bencher::auto_bench (39,808,598,400 samples, 99.92%)</title><rect x="0.0616%" y="325" width="99.9233%" height="15" fill="rgb(244,107,35)" fg:x="24532910" fg:w="39808598400"/><text x="0.3116%" y="335.50">bencher::Bencher::auto_bench</text></g><g><title>lb_apis::callbacks (19,147,610,482 samples, 48.06%)</title><rect x="51.9226%" y="309" width="48.0623%" height="15" fill="rgb(205,140,8)" fg:x="20685520828" fg:w="19147610482"/><text x="52.1726%" y="319.50">lb_apis::callbacks</text></g><g><title>bencher::Bencher::iter (17,735,677,183 samples, 44.52%)</title><rect x="55.4667%" y="293" width="44.5182%" height="15" fill="rgb(228,84,46)" fg:x="22097454127" fg:w="17735677183"/><text x="55.7167%" y="303.50">bencher::Bencher::iter</text></g><g><title>lb_apis::StubChannelControllerCallbacks::send_update (17,731,609,790 samples, 44.51%)</title><rect x="55.4769%" y="277" width="44.5080%" height="15" fill="rgb(254,188,9)" fg:x="22101521520" fg:w="17731609790"/><text x="55.7269%" y="287.50">lb_apis::StubChannelControllerCallbacks::send_update</text></g><g><title>&lt;lb_apis::del_pol_cb::WrappedControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (17,723,406,793 samples, 44.49%)</title><rect x="55.4975%" y="261" width="44.4874%" height="15" fill="rgb(206,112,54)" fg:x="22109724517" fg:w="17723406793"/><text x="55.7475%" y="271.50">&lt;lb_apis::del_pol_cb::WrappedControllerCallbacks as grpc::client::load_ba..</text></g><g><title>__GI___libc_free (8,103,816 samples, 0.02%)</title><rect x="99.9646%" y="245" width="0.0203%" height="15" fill="rgb(216,84,49)" fg:x="39825027494" fg:w="8103816"/><text x="100.2146%" y="255.50"></text></g><g><title>_int_free_merge_chunk (4,114,489 samples, 0.01%)</title><rect x="99.9746%" y="229" width="0.0103%" height="15" fill="rgb(214,194,35)" fg:x="39829016821" fg:w="4114489"/><text x="100.2246%" y="239.50"></text></g><g><title>_start (39,809,480,195 samples, 99.93%)</title><rect x="0.0616%" y="469" width="99.9255%" height="15" fill="rgb(249,28,3)" fg:x="24532909" fg:w="39809480195"/><text x="0.3116%" y="479.50">_start</text></g><g><title>all (39,839,149,033 samples, 100%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="39839149033"/><text x="0.2500%" y="511.50"></text></g><g><title>lb_apis-6320936 (39,839,149,033 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(245,217,50)" fg:x="0" fg:w="39839149033"/><text x="0.2500%" y="495.50">lb_apis-6320936</text></g></svg></svg>