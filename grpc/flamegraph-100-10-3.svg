<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="566" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="549.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="549.00"> </text><svg id="frames" x="10" width="1180" total_samples="52048798738"><g><title>[unknown] (12,119,650 samples, 0.02%)</title><rect x="0.0000%" y="485" width="0.0233%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="12119650"/><text x="0.2500%" y="495.50"></text></g><g><title>_int_malloc (7,960,974 samples, 0.02%)</title><rect x="0.0080%" y="469" width="0.0153%" height="15" fill="rgb(217,0,24)" fg:x="4158676" fg:w="7960974"/><text x="0.2580%" y="479.50"></text></g><g><title>[unknown] (7,960,974 samples, 0.02%)</title><rect x="0.0080%" y="453" width="0.0153%" height="15" fill="rgb(221,193,54)" fg:x="4158676" fg:w="7960974"/><text x="0.2580%" y="463.50"></text></g><g><title>__GI___libc_malloc (44,976,405 samples, 0.09%)</title><rect x="0.2243%" y="245" width="0.0864%" height="15" fill="rgb(248,212,6)" fg:x="116761661" fg:w="44976405"/><text x="0.4743%" y="255.50"></text></g><g><title>_int_malloc (40,815,247 samples, 0.08%)</title><rect x="0.2323%" y="229" width="0.0784%" height="15" fill="rgb(208,68,35)" fg:x="120922819" fg:w="40815247"/><text x="0.4823%" y="239.50"></text></g><g><title>unlink_chunk (8,240,352 samples, 0.02%)</title><rect x="0.2949%" y="213" width="0.0158%" height="15" fill="rgb(232,128,0)" fg:x="153497714" fg:w="8240352"/><text x="0.5449%" y="223.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (73,966,969 samples, 0.14%)</title><rect x="0.1926%" y="261" width="0.1421%" height="15" fill="rgb(207,160,47)" fg:x="100228321" fg:w="73966969"/><text x="0.4426%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12,457,224 samples, 0.02%)</title><rect x="0.3107%" y="245" width="0.0239%" height="15" fill="rgb(228,23,34)" fg:x="161738066" fg:w="12457224"/><text x="0.5607%" y="255.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (12,457,224 samples, 0.02%)</title><rect x="0.3107%" y="229" width="0.0239%" height="15" fill="rgb(218,30,26)" fg:x="161738066" fg:w="12457224"/><text x="0.5607%" y="239.50"></text></g><g><title>__GI___libc_realloc (12,457,224 samples, 0.02%)</title><rect x="0.3107%" y="213" width="0.0239%" height="15" fill="rgb(220,122,19)" fg:x="161738066" fg:w="12457224"/><text x="0.5607%" y="223.50"></text></g><g><title>_int_realloc (12,457,224 samples, 0.02%)</title><rect x="0.3107%" y="197" width="0.0239%" height="15" fill="rgb(250,228,42)" fg:x="161738066" fg:w="12457224"/><text x="0.5607%" y="207.50"></text></g><g><title>_int_malloc (12,457,224 samples, 0.02%)</title><rect x="0.3107%" y="181" width="0.0239%" height="15" fill="rgb(240,193,28)" fg:x="161738066" fg:w="12457224"/><text x="0.5607%" y="191.50"></text></g><g><title>malloc_consolidate (12,457,224 samples, 0.02%)</title><rect x="0.3107%" y="165" width="0.0239%" height="15" fill="rgb(216,20,37)" fg:x="161738066" fg:w="12457224"/><text x="0.5607%" y="175.50"></text></g><g><title>__GI___libc_realloc (24,559,877 samples, 0.05%)</title><rect x="0.3347%" y="229" width="0.0472%" height="15" fill="rgb(206,188,39)" fg:x="174195290" fg:w="24559877"/><text x="0.5847%" y="239.50"></text></g><g><title>_int_realloc (24,559,877 samples, 0.05%)</title><rect x="0.3347%" y="213" width="0.0472%" height="15" fill="rgb(217,207,13)" fg:x="174195290" fg:w="24559877"/><text x="0.5847%" y="223.50"></text></g><g><title>_int_malloc (20,409,391 samples, 0.04%)</title><rect x="0.3427%" y="197" width="0.0392%" height="15" fill="rgb(231,73,38)" fg:x="178345776" fg:w="20409391"/><text x="0.5927%" y="207.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (115,070,678 samples, 0.22%)</title><rect x="0.1687%" y="277" width="0.2211%" height="15" fill="rgb(225,20,46)" fg:x="87823553" fg:w="115070678"/><text x="0.4187%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (28,698,941 samples, 0.06%)</title><rect x="0.3347%" y="261" width="0.0551%" height="15" fill="rgb(210,31,41)" fg:x="174195290" fg:w="28698941"/><text x="0.5847%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (28,698,941 samples, 0.06%)</title><rect x="0.3347%" y="245" width="0.0551%" height="15" fill="rgb(221,200,47)" fg:x="174195290" fg:w="28698941"/><text x="0.5847%" y="255.50"></text></g><g><title>_int_free (28,806,407 samples, 0.06%)</title><rect x="0.3898%" y="261" width="0.0553%" height="15" fill="rgb(226,26,5)" fg:x="202894231" fg:w="28806407"/><text x="0.6398%" y="271.50"></text></g><g><title>__GI___libc_free (32,957,547 samples, 0.06%)</title><rect x="0.3898%" y="277" width="0.0633%" height="15" fill="rgb(249,33,26)" fg:x="202894231" fg:w="32957547"/><text x="0.6398%" y="287.50"></text></g><g><title>__GI___libc_malloc (9,910,826 samples, 0.02%)</title><rect x="0.5858%" y="245" width="0.0190%" height="15" fill="rgb(235,183,28)" fg:x="304886145" fg:w="9910826"/><text x="0.8358%" y="255.50"></text></g><g><title>_int_malloc (9,910,826 samples, 0.02%)</title><rect x="0.5858%" y="229" width="0.0190%" height="15" fill="rgb(221,5,38)" fg:x="304886145" fg:w="9910826"/><text x="0.8358%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h368aaacc3eb2e184E.llvm.9464877178135716140 (62,455,054 samples, 0.12%)</title><rect x="0.5088%" y="261" width="0.1200%" height="15" fill="rgb(247,18,42)" fg:x="264807845" fg:w="62455054"/><text x="0.7588%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,465,928 samples, 0.02%)</title><rect x="0.6048%" y="245" width="0.0240%" height="15" fill="rgb(241,131,45)" fg:x="314796971" fg:w="12465928"/><text x="0.8548%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (95,159,141 samples, 0.18%)</title><rect x="0.4611%" y="277" width="0.1828%" height="15" fill="rgb(249,31,29)" fg:x="240008022" fg:w="95159141"/><text x="0.7111%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7,904,264 samples, 0.02%)</title><rect x="0.6288%" y="261" width="0.0152%" height="15" fill="rgb(225,111,53)" fg:x="327262899" fg:w="7904264"/><text x="0.8788%" y="271.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (259,790,662 samples, 0.50%)</title><rect x="0.1528%" y="293" width="0.4991%" height="15" fill="rgb(238,160,17)" fg:x="79535276" fg:w="259790662"/><text x="0.4028%" y="303.50"></text></g><g><title>alloc_perturb (8,185,079 samples, 0.02%)</title><rect x="0.8544%" y="213" width="0.0157%" height="15" fill="rgb(214,148,48)" fg:x="444720856" fg:w="8185079"/><text x="1.1044%" y="223.50"></text></g><g><title>__GI___libc_malloc (40,154,841 samples, 0.08%)</title><rect x="0.8009%" y="245" width="0.0771%" height="15" fill="rgb(232,36,49)" fg:x="416863205" fg:w="40154841"/><text x="1.0509%" y="255.50"></text></g><g><title>_int_malloc (27,741,516 samples, 0.05%)</title><rect x="0.8248%" y="229" width="0.0533%" height="15" fill="rgb(209,103,24)" fg:x="429276530" fg:w="27741516"/><text x="1.0748%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned (12,401,484 samples, 0.02%)</title><rect x="0.8781%" y="245" width="0.0238%" height="15" fill="rgb(229,88,8)" fg:x="457018046" fg:w="12401484"/><text x="1.1281%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (81,978,500 samples, 0.16%)</title><rect x="0.7531%" y="261" width="0.1575%" height="15" fill="rgb(213,181,19)" fg:x="391968242" fg:w="81978500"/><text x="1.0031%" y="271.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h5e4397d94e40bc48E.llvm.6231558932131486975 (135,003,327 samples, 0.26%)</title><rect x="0.6592%" y="293" width="0.2594%" height="15" fill="rgb(254,191,54)" fg:x="343089115" fg:w="135003327"/><text x="0.9092%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (130,825,333 samples, 0.25%)</title><rect x="0.6672%" y="277" width="0.2514%" height="15" fill="rgb(241,83,37)" fg:x="347267109" fg:w="130825333"/><text x="0.9172%" y="287.50"></text></g><g><title>__GI___libc_malloc (8,274,615 samples, 0.02%)</title><rect x="0.9185%" y="293" width="0.0159%" height="15" fill="rgb(233,36,39)" fg:x="478092442" fg:w="8274615"/><text x="1.1685%" y="303.50"></text></g><g><title>_int_malloc (8,274,615 samples, 0.02%)</title><rect x="0.9185%" y="277" width="0.0159%" height="15" fill="rgb(226,3,54)" fg:x="478092442" fg:w="8274615"/><text x="1.1685%" y="287.50"></text></g><g><title>grpc::client::load_balancing::LbState::initial (8,257,883 samples, 0.02%)</title><rect x="0.9344%" y="293" width="0.0159%" height="15" fill="rgb(245,192,40)" fg:x="486367057" fg:w="8257883"/><text x="1.1844%" y="303.50"></text></g><g><title>__GI___libc_malloc (8,257,883 samples, 0.02%)</title><rect x="0.9344%" y="277" width="0.0159%" height="15" fill="rgb(238,167,29)" fg:x="486367057" fg:w="8257883"/><text x="1.1844%" y="287.50"></text></g><g><title>tcache_get (8,257,883 samples, 0.02%)</title><rect x="0.9344%" y="261" width="0.0159%" height="15" fill="rgb(232,182,51)" fg:x="486367057" fg:w="8257883"/><text x="1.1844%" y="271.50"></text></g><g><title>tcache_get_n (8,257,883 samples, 0.02%)</title><rect x="0.9344%" y="245" width="0.0159%" height="15" fill="rgb(231,60,39)" fg:x="486367057" fg:w="8257883"/><text x="1.1844%" y="255.50"></text></g><g><title>__GI___libc_malloc (29,038,779 samples, 0.06%)</title><rect x="1.0857%" y="245" width="0.0558%" height="15" fill="rgb(208,69,12)" fg:x="565101384" fg:w="29038779"/><text x="1.3357%" y="255.50"></text></g><g><title>_int_malloc (29,038,779 samples, 0.06%)</title><rect x="1.0857%" y="229" width="0.0558%" height="15" fill="rgb(235,93,37)" fg:x="565101384" fg:w="29038779"/><text x="1.3357%" y="239.50"></text></g><g><title>malloc_consolidate (29,038,779 samples, 0.06%)</title><rect x="1.0857%" y="213" width="0.0558%" height="15" fill="rgb(213,116,39)" fg:x="565101384" fg:w="29038779"/><text x="1.3357%" y="223.50"></text></g><g><title>unlink_chunk (16,637,534 samples, 0.03%)</title><rect x="1.1095%" y="197" width="0.0320%" height="15" fill="rgb(222,207,29)" fg:x="577502629" fg:w="16637534"/><text x="1.3595%" y="207.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h03e3fa1e86f88544E.llvm.9464877178135716140 (86,918,314 samples, 0.17%)</title><rect x="1.0300%" y="261" width="0.1670%" height="15" fill="rgb(206,96,30)" fg:x="536100233" fg:w="86918314"/><text x="1.2800%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (28,878,384 samples, 0.06%)</title><rect x="1.1415%" y="245" width="0.0555%" height="15" fill="rgb(218,138,4)" fg:x="594140163" fg:w="28878384"/><text x="1.3915%" y="255.50"></text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (157,393,747 samples, 0.30%)</title><rect x="0.9503%" y="293" width="0.3024%" height="15" fill="rgb(250,191,14)" fg:x="494624940" fg:w="157393747"/><text x="1.2003%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (140,818,005 samples, 0.27%)</title><rect x="0.9822%" y="277" width="0.2705%" height="15" fill="rgb(239,60,40)" fg:x="511200682" fg:w="140818005"/><text x="1.2322%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29,000,140 samples, 0.06%)</title><rect x="1.1970%" y="261" width="0.0557%" height="15" fill="rgb(206,27,48)" fg:x="623018547" fg:w="29000140"/><text x="1.4470%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (611,639,432 samples, 1.18%)</title><rect x="0.1368%" y="309" width="1.1751%" height="15" fill="rgb(225,35,8)" fg:x="71220126" fg:w="611639432"/><text x="0.3868%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (30,840,871 samples, 0.06%)</title><rect x="1.2527%" y="293" width="0.0593%" height="15" fill="rgb(250,213,24)" fg:x="652018687" fg:w="30840871"/><text x="1.5027%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (30,840,871 samples, 0.06%)</title><rect x="1.2527%" y="277" width="0.0593%" height="15" fill="rgb(247,123,22)" fg:x="652018687" fg:w="30840871"/><text x="1.5027%" y="287.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (26,673,347 samples, 0.05%)</title><rect x="1.2607%" y="261" width="0.0512%" height="15" fill="rgb(231,138,38)" fg:x="656186211" fg:w="26673347"/><text x="1.5107%" y="271.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h4884cc1a4d2303d3E.llvm.3660540333688232871 (26,673,347 samples, 0.05%)</title><rect x="1.2607%" y="245" width="0.0512%" height="15" fill="rgb(231,145,46)" fg:x="656186211" fg:w="26673347"/><text x="1.5107%" y="255.50"></text></g><g><title>__GI___libc_malloc (70,491,401 samples, 0.14%)</title><rect x="1.3200%" y="309" width="0.1354%" height="15" fill="rgb(251,118,11)" fg:x="687022156" fg:w="70491401"/><text x="1.5700%" y="319.50"></text></g><g><title>_int_malloc (58,022,257 samples, 0.11%)</title><rect x="1.3439%" y="293" width="0.1115%" height="15" fill="rgb(217,147,25)" fg:x="699491300" fg:w="58022257"/><text x="1.5939%" y="303.50"></text></g><g><title>unlink_chunk (8,312,838 samples, 0.02%)</title><rect x="1.4394%" y="277" width="0.0160%" height="15" fill="rgb(247,81,37)" fg:x="749200719" fg:w="8312838"/><text x="1.6894%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8,250,144 samples, 0.02%)</title><rect x="1.5326%" y="277" width="0.0159%" height="15" fill="rgb(209,12,38)" fg:x="797700727" fg:w="8250144"/><text x="1.7826%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned (8,308,543 samples, 0.02%)</title><rect x="1.5961%" y="245" width="0.0160%" height="15" fill="rgb(227,1,9)" fg:x="830766523" fg:w="8308543"/><text x="1.8461%" y="255.50"></text></g><g><title>__GI___libc_malloc (49,752,137 samples, 0.10%)</title><rect x="1.6281%" y="213" width="0.0956%" height="15" fill="rgb(248,47,43)" fg:x="847413971" fg:w="49752137"/><text x="1.8781%" y="223.50"></text></g><g><title>_int_malloc (37,326,360 samples, 0.07%)</title><rect x="1.6520%" y="197" width="0.0717%" height="15" fill="rgb(221,10,30)" fg:x="859839748" fg:w="37326360"/><text x="1.9020%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (82,906,253 samples, 0.16%)</title><rect x="1.5803%" y="261" width="0.1593%" height="15" fill="rgb(210,229,1)" fg:x="822510476" fg:w="82906253"/><text x="1.8303%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (66,341,663 samples, 0.13%)</title><rect x="1.6121%" y="245" width="0.1275%" height="15" fill="rgb(222,148,37)" fg:x="839075066" fg:w="66341663"/><text x="1.8621%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (58,002,758 samples, 0.11%)</title><rect x="1.6281%" y="229" width="0.1114%" height="15" fill="rgb(234,67,33)" fg:x="847413971" fg:w="58002758"/><text x="1.8781%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (180,973,030 samples, 0.35%)</title><rect x="1.4554%" y="309" width="0.3477%" height="15" fill="rgb(247,98,35)" fg:x="757513557" fg:w="180973030"/><text x="1.7054%" y="319.50"></text></g><g><title>core::fmt::write (169,594,129 samples, 0.33%)</title><rect x="1.4773%" y="293" width="0.3258%" height="15" fill="rgb(247,138,52)" fg:x="768892458" fg:w="169594129"/><text x="1.7273%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (132,535,716 samples, 0.25%)</title><rect x="1.5485%" y="277" width="0.2546%" height="15" fill="rgb(213,79,30)" fg:x="805950871" fg:w="132535716"/><text x="1.7985%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral (33,069,858 samples, 0.06%)</title><rect x="1.7396%" y="261" width="0.0635%" height="15" fill="rgb(246,177,23)" fg:x="905416729" fg:w="33069858"/><text x="1.9896%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (24,768,283 samples, 0.05%)</title><rect x="1.7555%" y="245" width="0.0476%" height="15" fill="rgb(230,62,27)" fg:x="913718304" fg:w="24768283"/><text x="2.0055%" y="255.50"></text></g><g><title>__GI_memcpy (8,302,489 samples, 0.02%)</title><rect x="1.8191%" y="245" width="0.0160%" height="15" fill="rgb(216,154,8)" fg:x="946796399" fg:w="8302489"/><text x="2.0691%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,302,489 samples, 0.02%)</title><rect x="1.8191%" y="229" width="0.0160%" height="15" fill="rgb(244,35,45)" fg:x="946796399" fg:w="8302489"/><text x="2.0691%" y="239.50"></text></g><g><title>_int_free_merge_chunk (8,295,849 samples, 0.02%)</title><rect x="1.8350%" y="245" width="0.0159%" height="15" fill="rgb(251,115,12)" fg:x="955098888" fg:w="8295849"/><text x="2.0850%" y="255.50"></text></g><g><title>__GI___libc_realloc (96,239,273 samples, 0.18%)</title><rect x="1.8031%" y="277" width="0.1849%" height="15" fill="rgb(240,54,50)" fg:x="938486587" fg:w="96239273"/><text x="2.0531%" y="287.50"></text></g><g><title>_int_realloc (96,239,273 samples, 0.18%)</title><rect x="1.8031%" y="261" width="0.1849%" height="15" fill="rgb(233,84,52)" fg:x="938486587" fg:w="96239273"/><text x="2.0531%" y="271.50"></text></g><g><title>_int_malloc (71,331,123 samples, 0.14%)</title><rect x="1.8509%" y="245" width="0.1370%" height="15" fill="rgb(207,117,47)" fg:x="963394737" fg:w="71331123"/><text x="2.1009%" y="255.50"></text></g><g><title>malloc_consolidate (71,331,123 samples, 0.14%)</title><rect x="1.8509%" y="229" width="0.1370%" height="15" fill="rgb(249,43,39)" fg:x="963394737" fg:w="71331123"/><text x="2.1009%" y="239.50"></text></g><g><title>unlink_chunk (16,450,009 samples, 0.03%)</title><rect x="1.9564%" y="213" width="0.0316%" height="15" fill="rgb(209,38,44)" fg:x="1018275851" fg:w="16450009"/><text x="2.2064%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (104,060,798 samples, 0.20%)</title><rect x="1.8031%" y="309" width="0.1999%" height="15" fill="rgb(236,212,23)" fg:x="938486587" fg:w="104060798"/><text x="2.0531%" y="319.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (104,060,798 samples, 0.20%)</title><rect x="1.8031%" y="293" width="0.1999%" height="15" fill="rgb(242,79,21)" fg:x="938486587" fg:w="104060798"/><text x="2.0531%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::SubchannelUpdate as core::default::Default&gt;::default (12,459,605 samples, 0.02%)</title><rect x="3.0898%" y="293" width="0.0239%" height="15" fill="rgb(211,96,35)" fg:x="1608192660" fg:w="12459605"/><text x="3.3398%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (128,157,807 samples, 0.25%)</title><rect x="9.9048%" y="261" width="0.2462%" height="15" fill="rgb(253,215,40)" fg:x="5155303787" fg:w="128157807"/><text x="10.1548%" y="271.50"></text></g><g><title>__GI___libc_malloc (53,936,001 samples, 0.10%)</title><rect x="10.1510%" y="261" width="0.1036%" height="15" fill="rgb(211,81,21)" fg:x="5283461594" fg:w="53936001"/><text x="10.4010%" y="271.50"></text></g><g><title>tcache_get (24,897,686 samples, 0.05%)</title><rect x="10.2068%" y="245" width="0.0478%" height="15" fill="rgb(208,190,38)" fg:x="5312499909" fg:w="24897686"/><text x="10.4568%" y="255.50"></text></g><g><title>tcache_get_n (24,897,686 samples, 0.05%)</title><rect x="10.2068%" y="229" width="0.0478%" height="15" fill="rgb(235,213,38)" fg:x="5312499909" fg:w="24897686"/><text x="10.4568%" y="239.50"></text></g><g><title>__rdl_alloc (12,411,597 samples, 0.02%)</title><rect x="10.2546%" y="261" width="0.0238%" height="15" fill="rgb(237,122,38)" fg:x="5337397595" fg:w="12411597"/><text x="10.5046%" y="271.50"></text></g><g><title>__rust_alloc (16,621,888 samples, 0.03%)</title><rect x="10.2784%" y="261" width="0.0319%" height="15" fill="rgb(244,218,35)" fg:x="5349809192" fg:w="16621888"/><text x="10.5284%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (664,363,235 samples, 1.28%)</title><rect x="10.3104%" y="261" width="1.2764%" height="15" fill="rgb(240,68,47)" fg:x="5366431080" fg:w="664363235"/><text x="10.5604%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (62,322,194 samples, 0.12%)</title><rect x="11.4671%" y="245" width="0.1197%" height="15" fill="rgb(210,16,53)" fg:x="5968472121" fg:w="62322194"/><text x="11.7171%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (3,884,076,562 samples, 7.46%)</title><rect x="4.1643%" y="277" width="7.4624%" height="15" fill="rgb(235,124,12)" fg:x="2167459219" fg:w="3884076562"/><text x="4.4143%" y="287.50">&lt;lb_apis::..</text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::iter (20,741,466 samples, 0.04%)</title><rect x="11.5868%" y="261" width="0.0399%" height="15" fill="rgb(224,169,11)" fg:x="6030794315" fg:w="20741466"/><text x="11.8368%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (195,175,383 samples, 0.37%)</title><rect x="11.6267%" y="277" width="0.3750%" height="15" fill="rgb(250,166,2)" fg:x="6051535781" fg:w="195175383"/><text x="11.8767%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (33,154,804 samples, 0.06%)</title><rect x="11.9379%" y="261" width="0.0637%" height="15" fill="rgb(242,216,29)" fg:x="6213556360" fg:w="33154804"/><text x="12.1879%" y="271.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23,839,086 samples, 0.05%)</title><rect x="12.3930%" y="261" width="0.0458%" height="15" fill="rgb(230,116,27)" fg:x="6450385743" fg:w="23839086"/><text x="12.6430%" y="271.50"></text></g><g><title>__GI___libc_free (78,890,569 samples, 0.15%)</title><rect x="12.4388%" y="261" width="0.1516%" height="15" fill="rgb(228,99,48)" fg:x="6474224829" fg:w="78890569"/><text x="12.6888%" y="271.50"></text></g><g><title>_int_free (58,089,799 samples, 0.11%)</title><rect x="12.4787%" y="245" width="0.1116%" height="15" fill="rgb(253,11,6)" fg:x="6495025599" fg:w="58089799"/><text x="12.7287%" y="255.50"></text></g><g><title>__rust_dealloc (16,609,738 samples, 0.03%)</title><rect x="12.5903%" y="261" width="0.0319%" height="15" fill="rgb(247,143,39)" fg:x="6553115398" fg:w="16609738"/><text x="12.8403%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (5,106,948,185 samples, 9.81%)</title><rect x="3.1137%" y="293" width="9.8118%" height="15" fill="rgb(236,97,10)" fg:x="1620652265" fg:w="5106948185"/><text x="3.3637%" y="303.50">&lt;grpc::client:..</text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (480,889,286 samples, 0.92%)</title><rect x="12.0016%" y="277" width="0.9239%" height="15" fill="rgb(233,208,19)" fg:x="6246711164" fg:w="480889286"/><text x="12.2516%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (157,875,314 samples, 0.30%)</title><rect x="12.6222%" y="261" width="0.3033%" height="15" fill="rgb(216,164,2)" fg:x="6569725136" fg:w="157875314"/><text x="12.8722%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (190,900,565 samples, 0.37%)</title><rect x="12.9256%" y="293" width="0.3668%" height="15" fill="rgb(220,129,5)" fg:x="6727600450" fg:w="190900565"/><text x="13.1756%" y="303.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (145,409,423 samples, 0.28%)</title><rect x="13.2923%" y="293" width="0.2794%" height="15" fill="rgb(242,17,10)" fg:x="6918501015" fg:w="145409423"/><text x="13.5423%" y="303.50"></text></g><g><title>_ZN4rand4rngs7adapter9reseeding29ReseedingCore$LT$R$C$Rsdr$GT$19reseed_and_generate17hf58726b656a9d423E.llvm.9640716567772130773 (8,308,632 samples, 0.02%)</title><rect x="13.5796%" y="293" width="0.0160%" height="15" fill="rgb(242,107,0)" fg:x="7068031908" fg:w="8308632"/><text x="13.8296%" y="303.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (8,308,632 samples, 0.02%)</title><rect x="13.5796%" y="277" width="0.0160%" height="15" fill="rgb(251,28,31)" fg:x="7068031908" fg:w="8308632"/><text x="13.8296%" y="287.50"></text></g><g><title>getrandom::imp::getrandom_inner (8,308,632 samples, 0.02%)</title><rect x="13.5796%" y="261" width="0.0160%" height="15" fill="rgb(233,223,10)" fg:x="7068031908" fg:w="8308632"/><text x="13.8296%" y="271.50"></text></g><g><title>syscall (8,308,632 samples, 0.02%)</title><rect x="13.5796%" y="245" width="0.0160%" height="15" fill="rgb(215,21,27)" fg:x="7068031908" fg:w="8308632"/><text x="13.8296%" y="255.50"></text></g><g><title>[unknown] (8,308,632 samples, 0.02%)</title><rect x="13.5796%" y="229" width="0.0160%" height="15" fill="rgb(232,23,21)" fg:x="7068031908" fg:w="8308632"/><text x="13.8296%" y="239.50"></text></g><g><title>[unknown] (8,308,632 samples, 0.02%)</title><rect x="13.5796%" y="213" width="0.0160%" height="15" fill="rgb(244,5,23)" fg:x="7068031908" fg:w="8308632"/><text x="13.8296%" y="223.50"></text></g><g><title>[unknown] (8,308,632 samples, 0.02%)</title><rect x="13.5796%" y="197" width="0.0160%" height="15" fill="rgb(226,81,46)" fg:x="7068031908" fg:w="8308632"/><text x="13.8296%" y="207.50"></text></g><g><title>__GI___libc_malloc (41,602,425 samples, 0.08%)</title><rect x="27.0088%" y="261" width="0.0799%" height="15" fill="rgb(247,70,30)" fg:x="14057751665" fg:w="41602425"/><text x="27.2588%" y="271.50"></text></g><g><title>tcache_get (24,946,472 samples, 0.05%)</title><rect x="27.0408%" y="245" width="0.0479%" height="15" fill="rgb(212,68,19)" fg:x="14074407618" fg:w="24946472"/><text x="27.2908%" y="255.50"></text></g><g><title>tcache_get_n (24,946,472 samples, 0.05%)</title><rect x="27.0408%" y="229" width="0.0479%" height="15" fill="rgb(240,187,13)" fg:x="14074407618" fg:w="24946472"/><text x="27.2908%" y="239.50"></text></g><g><title>__rdl_alloc (8,287,913 samples, 0.02%)</title><rect x="27.0887%" y="261" width="0.0159%" height="15" fill="rgb(223,113,26)" fg:x="14099354090" fg:w="8287913"/><text x="27.3387%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (32,628,349 samples, 0.06%)</title><rect x="28.3097%" y="181" width="0.0627%" height="15" fill="rgb(206,192,2)" fg:x="14734869049" fg:w="32628349"/><text x="28.5597%" y="191.50"></text></g><g><title>__GI_memcpy (621,824,900 samples, 1.19%)</title><rect x="28.2700%" y="197" width="1.1947%" height="15" fill="rgb(241,108,4)" fg:x="14714191236" fg:w="621824900"/><text x="28.5200%" y="207.50"></text></g><g><title>__memcpy_avx_unaligned_erms (568,518,738 samples, 1.09%)</title><rect x="28.3724%" y="181" width="1.0923%" height="15" fill="rgb(247,173,49)" fg:x="14767497398" fg:w="568518738"/><text x="28.6224%" y="191.50"></text></g><g><title>_int_free (66,462,454 samples, 0.13%)</title><rect x="29.4647%" y="197" width="0.1277%" height="15" fill="rgb(224,114,35)" fg:x="15336016136" fg:w="66462454"/><text x="29.7147%" y="207.50"></text></g><g><title>_int_free_merge_chunk (207,652,294 samples, 0.40%)</title><rect x="29.5924%" y="197" width="0.3990%" height="15" fill="rgb(245,159,27)" fg:x="15402478590" fg:w="207652294"/><text x="29.8424%" y="207.50"></text></g><g><title>_int_free_create_chunk (137,106,402 samples, 0.26%)</title><rect x="29.7279%" y="181" width="0.2634%" height="15" fill="rgb(245,172,44)" fg:x="15473024482" fg:w="137106402"/><text x="29.9779%" y="191.50"></text></g><g><title>unlink_chunk (37,365,465 samples, 0.07%)</title><rect x="29.9195%" y="165" width="0.0718%" height="15" fill="rgb(236,23,11)" fg:x="15572765419" fg:w="37365465"/><text x="30.1695%" y="175.50"></text></g><g><title>alloc_perturb (12,458,017 samples, 0.02%)</title><rect x="31.0674%" y="181" width="0.0239%" height="15" fill="rgb(205,117,38)" fg:x="16170227910" fg:w="12458017"/><text x="31.3174%" y="191.50"></text></g><g><title>malloc_consolidate (29,089,376 samples, 0.06%)</title><rect x="31.0914%" y="181" width="0.0559%" height="15" fill="rgb(237,72,25)" fg:x="16182685927" fg:w="29089376"/><text x="31.3414%" y="191.50"></text></g><g><title>_int_realloc (1,734,274,798 samples, 3.33%)</title><rect x="27.9908%" y="213" width="3.3320%" height="15" fill="rgb(244,70,9)" fg:x="14568881077" fg:w="1734274798"/><text x="28.2408%" y="223.50">_in..</text></g><g><title>_int_malloc (693,024,991 samples, 1.33%)</title><rect x="29.9913%" y="197" width="1.3315%" height="15" fill="rgb(217,125,39)" fg:x="15610130884" fg:w="693024991"/><text x="30.2413%" y="207.50"></text></g><g><title>unlink_chunk (91,380,572 samples, 0.18%)</title><rect x="31.1473%" y="181" width="0.1756%" height="15" fill="rgb(235,36,10)" fg:x="16211775303" fg:w="91380572"/><text x="31.3973%" y="191.50"></text></g><g><title>checked_request2size (8,323,371 samples, 0.02%)</title><rect x="31.3228%" y="213" width="0.0160%" height="15" fill="rgb(251,123,47)" fg:x="16303155875" fg:w="8323371"/><text x="31.5728%" y="223.50"></text></g><g><title>__GI___libc_realloc (1,913,205,207 samples, 3.68%)</title><rect x="27.6710%" y="229" width="3.6758%" height="15" fill="rgb(221,13,13)" fg:x="14402432825" fg:w="1913205207"/><text x="27.9210%" y="239.50">__GI..</text></g><g><title>__rdl_realloc (24,955,206 samples, 0.05%)</title><rect x="31.3468%" y="229" width="0.0479%" height="15" fill="rgb(238,131,9)" fg:x="16315638032" fg:w="24955206"/><text x="31.5968%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,035,211,385 samples, 13.52%)</title><rect x="17.8941%" y="277" width="13.5166%" height="15" fill="rgb(211,50,8)" fg:x="9313684238" fg:w="7035211385"/><text x="18.1441%" y="287.50">&lt;alloc::vec::Vec&lt;T&gt; ..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,241,253,620 samples, 4.31%)</title><rect x="27.1046%" y="261" width="4.3061%" height="15" fill="rgb(245,182,24)" fg:x="14107642003" fg:w="2241253620"/><text x="27.3546%" y="271.50">alloc..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (2,075,529,994 samples, 3.99%)</title><rect x="27.4230%" y="245" width="3.9877%" height="15" fill="rgb(242,14,37)" fg:x="14273365629" fg:w="2075529994"/><text x="27.6730%" y="255.50">_ZN5..</text></g><g><title>__rust_realloc (8,302,385 samples, 0.02%)</title><rect x="31.3948%" y="229" width="0.0160%" height="15" fill="rgb(246,228,12)" fg:x="16340593238" fg:w="8302385"/><text x="31.6448%" y="239.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (62,274,920 samples, 0.12%)</title><rect x="31.4107%" y="277" width="0.1196%" height="15" fill="rgb(213,55,15)" fg:x="16348895623" fg:w="62274920"/><text x="31.6607%" y="287.50"></text></g><g><title>_int_free (45,683,916 samples, 0.09%)</title><rect x="31.5543%" y="261" width="0.0878%" height="15" fill="rgb(209,9,3)" fg:x="16423643151" fg:w="45683916"/><text x="31.8043%" y="271.50"></text></g><g><title>__GI___libc_free (120,493,359 samples, 0.23%)</title><rect x="31.5304%" y="277" width="0.2315%" height="15" fill="rgb(230,59,30)" fg:x="16411170543" fg:w="120493359"/><text x="31.7804%" y="287.50"></text></g><g><title>_int_free_merge_chunk (62,336,835 samples, 0.12%)</title><rect x="31.6421%" y="261" width="0.1198%" height="15" fill="rgb(209,121,21)" fg:x="16469327067" fg:w="62336835"/><text x="31.8921%" y="271.50"></text></g><g><title>_int_free_create_chunk (41,560,308 samples, 0.08%)</title><rect x="31.6820%" y="245" width="0.0798%" height="15" fill="rgb(220,109,13)" fg:x="16490103594" fg:w="41560308"/><text x="31.9320%" y="255.50"></text></g><g><title>unlink_chunk (20,792,589 samples, 0.04%)</title><rect x="31.7219%" y="229" width="0.0399%" height="15" fill="rgb(232,18,1)" fg:x="16510871313" fg:w="20792589"/><text x="31.9719%" y="239.50"></text></g><g><title>malloc_consolidate (70,764,062 samples, 0.14%)</title><rect x="32.5048%" y="245" width="0.1360%" height="15" fill="rgb(215,41,42)" fg:x="16918347194" fg:w="70764062"/><text x="32.7548%" y="255.50"></text></g><g><title>_int_malloc (465,839,361 samples, 0.90%)</title><rect x="31.8097%" y="261" width="0.8950%" height="15" fill="rgb(224,123,36)" fg:x="16556544660" fg:w="465839361"/><text x="32.0597%" y="271.50"></text></g><g><title>unlink_chunk (33,272,765 samples, 0.06%)</title><rect x="32.6407%" y="245" width="0.0639%" height="15" fill="rgb(240,125,3)" fg:x="16989111256" fg:w="33272765"/><text x="32.8907%" y="255.50"></text></g><g><title>__GI___libc_malloc (499,034,525 samples, 0.96%)</title><rect x="31.7619%" y="277" width="0.9588%" height="15" fill="rgb(205,98,50)" fg:x="16531663902" fg:w="499034525"/><text x="32.0119%" y="287.50"></text></g><g><title>tcache_get (8,314,406 samples, 0.02%)</title><rect x="32.7047%" y="261" width="0.0160%" height="15" fill="rgb(205,185,37)" fg:x="17022384021" fg:w="8314406"/><text x="32.9547%" y="271.50"></text></g><g><title>tcache_get_n (8,314,406 samples, 0.02%)</title><rect x="32.7047%" y="245" width="0.0160%" height="15" fill="rgb(238,207,15)" fg:x="17022384021" fg:w="8314406"/><text x="32.9547%" y="255.50"></text></g><g><title>__rust_alloc (24,894,045 samples, 0.05%)</title><rect x="32.7286%" y="277" width="0.0478%" height="15" fill="rgb(213,199,42)" fg:x="17034842734" fg:w="24894045"/><text x="32.9786%" y="287.50"></text></g><g><title>_int_free (24,926,795 samples, 0.05%)</title><rect x="32.8482%" y="245" width="0.0479%" height="15" fill="rgb(235,201,11)" fg:x="17097090182" fg:w="24926795"/><text x="33.0982%" y="255.50"></text></g><g><title>__GI___libc_free (66,418,305 samples, 0.13%)</title><rect x="32.8402%" y="261" width="0.1276%" height="15" fill="rgb(207,46,11)" fg:x="17092951675" fg:w="66418305"/><text x="33.0902%" y="271.50"></text></g><g><title>_int_free_merge_chunk (37,353,003 samples, 0.07%)</title><rect x="32.8961%" y="245" width="0.0718%" height="15" fill="rgb(241,35,35)" fg:x="17122016977" fg:w="37353003"/><text x="33.1461%" y="255.50"></text></g><g><title>_int_free_create_chunk (24,901,959 samples, 0.05%)</title><rect x="32.9200%" y="229" width="0.0478%" height="15" fill="rgb(243,32,47)" fg:x="17134468021" fg:w="24901959"/><text x="33.1700%" y="239.50"></text></g><g><title>unlink_chunk (8,285,289 samples, 0.02%)</title><rect x="32.9519%" y="213" width="0.0159%" height="15" fill="rgb(247,202,23)" fg:x="17151084691" fg:w="8285289"/><text x="33.2019%" y="223.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h4a9920109eef0ea0E.llvm.6231558932131486975 (13,827,425,284 samples, 26.57%)</title><rect x="13.5956%" y="293" width="26.5663%" height="15" fill="rgb(219,102,11)" fg:x="7076340540" fg:w="13827425284"/><text x="13.8456%" y="303.50">_ZN7lb_apis15del_pol_batched16DelegatingPol..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3,839,869,553 samples, 7.38%)</title><rect x="32.7844%" y="277" width="7.3774%" height="15" fill="rgb(243,110,44)" fg:x="17063896271" fg:w="3839869553"/><text x="33.0344%" y="287.50">alloc::syn..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::RRPickerPicker&gt; (3,744,395,844 samples, 7.19%)</title><rect x="32.9679%" y="261" width="7.1940%" height="15" fill="rgb(222,74,54)" fg:x="17159369980" fg:w="3744395844"/><text x="33.2179%" y="271.50">core::ptr:..</text></g><g><title>__GI___libc_free (16,595,014 samples, 0.03%)</title><rect x="40.1619%" y="293" width="0.0319%" height="15" fill="rgb(216,99,12)" fg:x="20903765824" fg:w="16595014"/><text x="40.4119%" y="303.50"></text></g><g><title>_int_free (12,436,457 samples, 0.02%)</title><rect x="40.1699%" y="277" width="0.0239%" height="15" fill="rgb(226,22,26)" fg:x="20907924381" fg:w="12436457"/><text x="40.4199%" y="287.50"></text></g><g><title>__GI___libc_malloc (50,218,153 samples, 0.10%)</title><rect x="41.2302%" y="245" width="0.0965%" height="15" fill="rgb(217,163,10)" fg:x="21459846848" fg:w="50218153"/><text x="41.4802%" y="255.50"></text></g><g><title>tcache_get (33,244,750 samples, 0.06%)</title><rect x="41.2629%" y="229" width="0.0639%" height="15" fill="rgb(213,25,53)" fg:x="21476820251" fg:w="33244750"/><text x="41.5129%" y="239.50"></text></g><g><title>tcache_get_n (33,244,750 samples, 0.06%)</title><rect x="41.2629%" y="213" width="0.0639%" height="15" fill="rgb(252,105,26)" fg:x="21476820251" fg:w="33244750"/><text x="41.5129%" y="223.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc6f2942aea7926dbE.llvm.10499638702280511522 (99,988,407 samples, 0.19%)</title><rect x="41.1743%" y="261" width="0.1921%" height="15" fill="rgb(220,39,43)" fg:x="21430750149" fg:w="99988407"/><text x="41.4243%" y="271.50"></text></g><g><title>__memset_avx2_unaligned (20,673,555 samples, 0.04%)</title><rect x="41.3267%" y="245" width="0.0397%" height="15" fill="rgb(229,68,48)" fg:x="21510065001" fg:w="20673555"/><text x="41.5767%" y="255.50"></text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::set (718,357,136 samples, 1.38%)</title><rect x="40.1937%" y="293" width="1.3802%" height="15" fill="rgb(252,8,32)" fg:x="20920360838" fg:w="718357136"/><text x="40.4437%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (573,047,312 samples, 1.10%)</title><rect x="40.4729%" y="277" width="1.1010%" height="15" fill="rgb(223,20,43)" fg:x="21065670662" fg:w="573047312"/><text x="40.7229%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (107,979,418 samples, 0.21%)</title><rect x="41.3664%" y="261" width="0.2075%" height="15" fill="rgb(229,81,49)" fg:x="21530738556" fg:w="107979418"/><text x="41.6164%" y="271.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h84d5f1dc9f8d71ffE.llvm.9108475612636169829 (24,897,812 samples, 0.05%)</title><rect x="41.5261%" y="245" width="0.0478%" height="15" fill="rgb(236,28,36)" fg:x="21613820162" fg:w="24897812"/><text x="41.7761%" y="255.50"></text></g><g><title>rand_chacha::guts::refill_wide (16,576,773 samples, 0.03%)</title><rect x="41.7816%" y="277" width="0.0318%" height="15" fill="rgb(249,185,26)" fg:x="21746809313" fg:w="16576773"/><text x="42.0316%" y="287.50"></text></g><g><title>rand::rng::Rng::gen_range (199,464,965 samples, 0.38%)</title><rect x="41.5739%" y="293" width="0.3832%" height="15" fill="rgb(249,174,33)" fg:x="21638717974" fg:w="199464965"/><text x="41.8239%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (74,796,853 samples, 0.14%)</title><rect x="41.8134%" y="277" width="0.1437%" height="15" fill="rgb(233,201,37)" fg:x="21763386086" fg:w="74796853"/><text x="42.0634%" y="287.50"></text></g><g><title>bencher::Bencher::iter (20,845,013,506 samples, 40.05%)</title><rect x="2.0030%" y="309" width="40.0490%" height="15" fill="rgb(221,78,26)" fg:x="1042547385" fg:w="20845013506"/><text x="2.2530%" y="319.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (49,377,952 samples, 0.09%)</title><rect x="41.9571%" y="293" width="0.0949%" height="15" fill="rgb(250,127,30)" fg:x="21838182939" fg:w="49377952"/><text x="42.2071%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,476,743 samples, 0.02%)</title><rect x="42.0520%" y="293" width="0.0240%" height="15" fill="rgb(230,49,44)" fg:x="21887560891" fg:w="12476743"/><text x="42.3020%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53,868,232 samples, 0.10%)</title><rect x="42.0760%" y="277" width="0.1035%" height="15" fill="rgb(229,67,23)" fg:x="21900037634" fg:w="53868232"/><text x="42.3260%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (33,205,181 samples, 0.06%)</title><rect x="42.1157%" y="261" width="0.0638%" height="15" fill="rgb(249,83,47)" fg:x="21920700685" fg:w="33205181"/><text x="42.3657%" y="271.50"></text></g><g><title>_int_free (19,785,019 samples, 0.04%)</title><rect x="42.1874%" y="261" width="0.0380%" height="15" fill="rgb(215,43,3)" fg:x="21958025894" fg:w="19785019"/><text x="42.4374%" y="271.50"></text></g><g><title>lb_apis::batched (21,969,790,944 samples, 42.21%)</title><rect x="0.0313%" y="325" width="42.2100%" height="15" fill="rgb(238,154,13)" fg:x="16284163" fg:w="21969790944"/><text x="0.2813%" y="335.50">lb_apis::batched</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::DelegatingPolicy&gt; (98,514,216 samples, 0.19%)</title><rect x="42.0520%" y="309" width="0.1893%" height="15" fill="rgb(219,56,2)" fg:x="21887560891" fg:w="98514216"/><text x="42.3020%" y="319.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h6fd88c756eedc8fdE.llvm.13391218907786022700 (86,037,473 samples, 0.17%)</title><rect x="42.0760%" y="293" width="0.1653%" height="15" fill="rgb(233,0,4)" fg:x="21900037634" fg:w="86037473"/><text x="42.3260%" y="303.50"></text></g><g><title>__GI___libc_free (32,169,241 samples, 0.06%)</title><rect x="42.1795%" y="277" width="0.0618%" height="15" fill="rgb(235,30,7)" fg:x="21953905866" fg:w="32169241"/><text x="42.4295%" y="287.50"></text></g><g><title>_int_free_merge_chunk (8,264,194 samples, 0.02%)</title><rect x="42.2254%" y="261" width="0.0159%" height="15" fill="rgb(250,79,13)" fg:x="21977810913" fg:w="8264194"/><text x="42.4754%" y="271.50"></text></g><g><title>[unknown] (8,131,870 samples, 0.02%)</title><rect x="42.4893%" y="229" width="0.0156%" height="15" fill="rgb(211,146,34)" fg:x="22115178953" fg:w="8131870"/><text x="42.7393%" y="239.50"></text></g><g><title>[unknown] (8,131,870 samples, 0.02%)</title><rect x="42.4893%" y="213" width="0.0156%" height="15" fill="rgb(228,22,38)" fg:x="22115178953" fg:w="8131870"/><text x="42.7393%" y="223.50"></text></g><g><title>[unknown] (8,131,870 samples, 0.02%)</title><rect x="42.4893%" y="197" width="0.0156%" height="15" fill="rgb(235,168,5)" fg:x="22115178953" fg:w="8131870"/><text x="42.7393%" y="207.50"></text></g><g><title>[unknown] (8,131,870 samples, 0.02%)</title><rect x="42.4893%" y="181" width="0.0156%" height="15" fill="rgb(221,155,16)" fg:x="22115178953" fg:w="8131870"/><text x="42.7393%" y="191.50"></text></g><g><title>[unknown] (8,131,870 samples, 0.02%)</title><rect x="42.4893%" y="165" width="0.0156%" height="15" fill="rgb(215,215,53)" fg:x="22115178953" fg:w="8131870"/><text x="42.7393%" y="175.50"></text></g><g><title>__GI___libc_malloc (41,139,769 samples, 0.08%)</title><rect x="42.4339%" y="261" width="0.0790%" height="15" fill="rgb(223,4,10)" fg:x="22086347064" fg:w="41139769"/><text x="42.6839%" y="271.50"></text></g><g><title>_int_malloc (41,139,769 samples, 0.08%)</title><rect x="42.4339%" y="245" width="0.0790%" height="15" fill="rgb(234,103,6)" fg:x="22086347064" fg:w="41139769"/><text x="42.6839%" y="255.50"></text></g><g><title>&lt;lb_apis::StubChannelControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel (94,334,887 samples, 0.18%)</title><rect x="42.3713%" y="277" width="0.1812%" height="15" fill="rgb(227,97,0)" fg:x="22053749572" fg:w="94334887"/><text x="42.6213%" y="287.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (12,495,044 samples, 0.02%)</title><rect x="42.5285%" y="261" width="0.0240%" height="15" fill="rgb(234,150,53)" fg:x="22135589415" fg:w="12495044"/><text x="42.7785%" y="271.50"></text></g><g><title>__GI___libc_free (7,935,862 samples, 0.02%)</title><rect x="42.5525%" y="277" width="0.0152%" height="15" fill="rgb(228,201,54)" fg:x="22148084459" fg:w="7935862"/><text x="42.8025%" y="287.50"></text></g><g><title>__rdl_dealloc (8,328,528 samples, 0.02%)</title><rect x="42.5678%" y="277" width="0.0160%" height="15" fill="rgb(222,22,37)" fg:x="22156020321" fg:w="8328528"/><text x="42.8178%" y="287.50"></text></g><g><title>__GI___libc_malloc (12,049,723 samples, 0.02%)</title><rect x="42.6070%" y="245" width="0.0232%" height="15" fill="rgb(237,53,32)" fg:x="22176450197" fg:w="12049723"/><text x="42.8570%" y="255.50"></text></g><g><title>_int_malloc (12,049,723 samples, 0.02%)</title><rect x="42.6070%" y="229" width="0.0232%" height="15" fill="rgb(233,25,53)" fg:x="22176450197" fg:w="12049723"/><text x="42.8570%" y="239.50"></text></g><g><title>[unknown] (8,234,958 samples, 0.02%)</title><rect x="42.6144%" y="213" width="0.0158%" height="15" fill="rgb(210,40,34)" fg:x="22180264962" fg:w="8234958"/><text x="42.8644%" y="223.50"></text></g><g><title>[unknown] (8,234,958 samples, 0.02%)</title><rect x="42.6144%" y="197" width="0.0158%" height="15" fill="rgb(241,220,44)" fg:x="22180264962" fg:w="8234958"/><text x="42.8644%" y="207.50"></text></g><g><title>[unknown] (8,234,958 samples, 0.02%)</title><rect x="42.6144%" y="181" width="0.0158%" height="15" fill="rgb(235,28,35)" fg:x="22180264962" fg:w="8234958"/><text x="42.8644%" y="191.50"></text></g><g><title>[unknown] (8,234,958 samples, 0.02%)</title><rect x="42.6144%" y="165" width="0.0158%" height="15" fill="rgb(210,56,17)" fg:x="22180264962" fg:w="8234958"/><text x="42.8644%" y="175.50"></text></g><g><title>[unknown] (8,234,958 samples, 0.02%)</title><rect x="42.6144%" y="149" width="0.0158%" height="15" fill="rgb(224,130,29)" fg:x="22180264962" fg:w="8234958"/><text x="42.8644%" y="159.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h368aaacc3eb2e184E.llvm.9464877178135716140 (27,704,445 samples, 0.05%)</title><rect x="42.5915%" y="261" width="0.0532%" height="15" fill="rgb(235,212,8)" fg:x="22168359295" fg:w="27704445"/><text x="42.8415%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (7,563,820 samples, 0.01%)</title><rect x="42.6302%" y="245" width="0.0145%" height="15" fill="rgb(223,33,50)" fg:x="22188499920" fg:w="7563820"/><text x="42.8802%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (206,752,702 samples, 0.40%)</title><rect x="42.2788%" y="293" width="0.3972%" height="15" fill="rgb(219,149,13)" fg:x="22005591200" fg:w="206752702"/><text x="42.5288%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (47,995,053 samples, 0.09%)</title><rect x="42.5838%" y="277" width="0.0922%" height="15" fill="rgb(250,156,29)" fg:x="22164348849" fg:w="47995053"/><text x="42.8338%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,280,162 samples, 0.03%)</title><rect x="42.6447%" y="261" width="0.0313%" height="15" fill="rgb(216,193,19)" fg:x="22196063740" fg:w="16280162"/><text x="42.8947%" y="271.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicyBuilder as grpc::client::load_balancing::LbPolicyBuilderCallbacks&gt;::build (12,336,627 samples, 0.02%)</title><rect x="42.6760%" y="293" width="0.0237%" height="15" fill="rgb(216,135,14)" fg:x="22212343902" fg:w="12336627"/><text x="42.9260%" y="303.50"></text></g><g><title>__GI___libc_malloc (8,348,680 samples, 0.02%)</title><rect x="42.6837%" y="277" width="0.0160%" height="15" fill="rgb(241,47,5)" fg:x="22216331849" fg:w="8348680"/><text x="42.9337%" y="287.50"></text></g><g><title>__GI___libc_malloc (63,994,024 samples, 0.12%)</title><rect x="42.7228%" y="245" width="0.1230%" height="15" fill="rgb(233,42,35)" fg:x="22236713966" fg:w="63994024"/><text x="42.9728%" y="255.50"></text></g><g><title>_int_malloc (60,029,569 samples, 0.12%)</title><rect x="42.7304%" y="229" width="0.1153%" height="15" fill="rgb(231,13,6)" fg:x="22240678421" fg:w="60029569"/><text x="42.9804%" y="239.50"></text></g><g><title>[unknown] (15,943,840 samples, 0.03%)</title><rect x="42.8151%" y="213" width="0.0306%" height="15" fill="rgb(207,181,40)" fg:x="22284764150" fg:w="15943840"/><text x="43.0651%" y="223.50"></text></g><g><title>[unknown] (12,010,372 samples, 0.02%)</title><rect x="42.8227%" y="197" width="0.0231%" height="15" fill="rgb(254,173,49)" fg:x="22288697618" fg:w="12010372"/><text x="43.0727%" y="207.50"></text></g><g><title>[unknown] (12,010,372 samples, 0.02%)</title><rect x="42.8227%" y="181" width="0.0231%" height="15" fill="rgb(221,1,38)" fg:x="22288697618" fg:w="12010372"/><text x="43.0727%" y="191.50"></text></g><g><title>[unknown] (12,010,372 samples, 0.02%)</title><rect x="42.8227%" y="165" width="0.0231%" height="15" fill="rgb(206,124,46)" fg:x="22288697618" fg:w="12010372"/><text x="43.0727%" y="175.50"></text></g><g><title>[unknown] (12,010,372 samples, 0.02%)</title><rect x="42.8227%" y="149" width="0.0231%" height="15" fill="rgb(249,21,11)" fg:x="22288697618" fg:w="12010372"/><text x="43.0727%" y="159.50"></text></g><g><title>[unknown] (8,055,558 samples, 0.02%)</title><rect x="42.8303%" y="133" width="0.0155%" height="15" fill="rgb(222,201,40)" fg:x="22292652432" fg:w="8055558"/><text x="43.0803%" y="143.50"></text></g><g><title>[unknown] (8,055,558 samples, 0.02%)</title><rect x="42.8303%" y="117" width="0.0155%" height="15" fill="rgb(235,61,29)" fg:x="22292652432" fg:w="8055558"/><text x="43.0803%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (79,777,256 samples, 0.15%)</title><rect x="42.7077%" y="277" width="0.1533%" height="15" fill="rgb(219,207,3)" fg:x="22228834578" fg:w="79777256"/><text x="42.9577%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (75,630,163 samples, 0.15%)</title><rect x="42.7156%" y="261" width="0.1453%" height="15" fill="rgb(222,56,46)" fg:x="22232981671" fg:w="75630163"/><text x="42.9656%" y="271.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h164f6ec20c46bb4bE.llvm.2902323996697549742 (95,884,443 samples, 0.18%)</title><rect x="42.6997%" y="293" width="0.1842%" height="15" fill="rgb(239,76,54)" fg:x="22224680529" fg:w="95884443"/><text x="42.9497%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11,953,138 samples, 0.02%)</title><rect x="42.8610%" y="277" width="0.0230%" height="15" fill="rgb(231,124,27)" fg:x="22308611834" fg:w="11953138"/><text x="43.1110%" y="287.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (11,953,138 samples, 0.02%)</title><rect x="42.8610%" y="261" width="0.0230%" height="15" fill="rgb(249,195,6)" fg:x="22308611834" fg:w="11953138"/><text x="43.1110%" y="271.50"></text></g><g><title>__GI___libc_realloc (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="245" width="0.0153%" height="15" fill="rgb(237,174,47)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="255.50"></text></g><g><title>_int_realloc (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="229" width="0.0153%" height="15" fill="rgb(206,201,31)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="239.50"></text></g><g><title>_int_malloc (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="213" width="0.0153%" height="15" fill="rgb(231,57,52)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="223.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="197" width="0.0153%" height="15" fill="rgb(248,177,22)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="207.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="181" width="0.0153%" height="15" fill="rgb(215,211,37)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="191.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="165" width="0.0153%" height="15" fill="rgb(241,128,51)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="175.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="149" width="0.0153%" height="15" fill="rgb(227,165,31)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="159.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="133" width="0.0153%" height="15" fill="rgb(228,167,24)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="143.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="117" width="0.0153%" height="15" fill="rgb(228,143,12)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="127.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="101" width="0.0153%" height="15" fill="rgb(249,149,8)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="111.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="85" width="0.0153%" height="15" fill="rgb(243,35,44)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="95.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="69" width="0.0153%" height="15" fill="rgb(246,89,9)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="79.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="53" width="0.0153%" height="15" fill="rgb(233,213,13)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="63.50"></text></g><g><title>[unknown] (7,988,880 samples, 0.02%)</title><rect x="42.8686%" y="37" width="0.0153%" height="15" fill="rgb(233,141,41)" fg:x="22312576092" fg:w="7988880"/><text x="43.1186%" y="47.50"></text></g><g><title>__GI___libc_malloc (8,173,353 samples, 0.02%)</title><rect x="42.8839%" y="293" width="0.0157%" height="15" fill="rgb(239,167,4)" fg:x="22320564972" fg:w="8173353"/><text x="43.1339%" y="303.50"></text></g><g><title>_int_malloc (8,173,353 samples, 0.02%)</title><rect x="42.8839%" y="277" width="0.0157%" height="15" fill="rgb(209,217,16)" fg:x="22320564972" fg:w="8173353"/><text x="43.1339%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (351,318,050 samples, 0.67%)</title><rect x="42.2708%" y="309" width="0.6750%" height="15" fill="rgb(219,88,35)" fg:x="22001429091" fg:w="351318050"/><text x="42.5208%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (15,765,129 samples, 0.03%)</title><rect x="42.9155%" y="293" width="0.0303%" height="15" fill="rgb(220,193,23)" fg:x="22336982012" fg:w="15765129"/><text x="43.1655%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15,765,129 samples, 0.03%)</title><rect x="42.9155%" y="277" width="0.0303%" height="15" fill="rgb(230,90,52)" fg:x="22336982012" fg:w="15765129"/><text x="43.1655%" y="287.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (11,993,374 samples, 0.02%)</title><rect x="42.9227%" y="261" width="0.0230%" height="15" fill="rgb(252,106,19)" fg:x="22340753767" fg:w="11993374"/><text x="43.1727%" y="271.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h4884cc1a4d2303d3E.llvm.3660540333688232871 (11,993,374 samples, 0.02%)</title><rect x="42.9227%" y="245" width="0.0230%" height="15" fill="rgb(206,74,20)" fg:x="22340753767" fg:w="11993374"/><text x="43.1727%" y="255.50"></text></g><g><title>__GI___libc_malloc (24,243,183 samples, 0.05%)</title><rect x="42.9458%" y="309" width="0.0466%" height="15" fill="rgb(230,138,44)" fg:x="22352747141" fg:w="24243183"/><text x="43.1958%" y="319.50"></text></g><g><title>_int_malloc (24,243,183 samples, 0.05%)</title><rect x="42.9458%" y="293" width="0.0466%" height="15" fill="rgb(235,182,43)" fg:x="22352747141" fg:w="24243183"/><text x="43.1958%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15,983,592 samples, 0.03%)</title><rect x="43.0592%" y="245" width="0.0307%" height="15" fill="rgb(242,16,51)" fg:x="22411812109" fg:w="15983592"/><text x="43.3092%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (116,957,324 samples, 0.22%)</title><rect x="43.0217%" y="261" width="0.2247%" height="15" fill="rgb(248,9,4)" fg:x="22392252669" fg:w="116957324"/><text x="43.2717%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (81,414,292 samples, 0.16%)</title><rect x="43.0899%" y="245" width="0.1564%" height="15" fill="rgb(210,31,22)" fg:x="22427795701" fg:w="81414292"/><text x="43.3399%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (65,581,450 samples, 0.13%)</title><rect x="43.1204%" y="229" width="0.1260%" height="15" fill="rgb(239,54,39)" fg:x="22443628543" fg:w="65581450"/><text x="43.3704%" y="239.50"></text></g><g><title>__GI___libc_malloc (53,843,070 samples, 0.10%)</title><rect x="43.1429%" y="213" width="0.1034%" height="15" fill="rgb(230,99,41)" fg:x="22455366923" fg:w="53843070"/><text x="43.3929%" y="223.50"></text></g><g><title>_int_malloc (46,114,294 samples, 0.09%)</title><rect x="43.1578%" y="197" width="0.0886%" height="15" fill="rgb(253,106,12)" fg:x="22463095699" fg:w="46114294"/><text x="43.4078%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (143,317,471 samples, 0.28%)</title><rect x="42.9923%" y="309" width="0.2754%" height="15" fill="rgb(213,46,41)" fg:x="22376990324" fg:w="143317471"/><text x="43.2423%" y="319.50"></text></g><g><title>core::fmt::write (139,878,994 samples, 0.27%)</title><rect x="42.9989%" y="293" width="0.2687%" height="15" fill="rgb(215,133,35)" fg:x="22380428801" fg:w="139878994"/><text x="43.2489%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (131,646,004 samples, 0.25%)</title><rect x="43.0148%" y="277" width="0.2529%" height="15" fill="rgb(213,28,5)" fg:x="22388661791" fg:w="131646004"/><text x="43.2648%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral (11,097,802 samples, 0.02%)</title><rect x="43.2464%" y="261" width="0.0213%" height="15" fill="rgb(215,77,49)" fg:x="22509209993" fg:w="11097802"/><text x="43.4964%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (7,611,986 samples, 0.01%)</title><rect x="43.2531%" y="245" width="0.0146%" height="15" fill="rgb(248,100,22)" fg:x="22512695809" fg:w="7611986"/><text x="43.5031%" y="255.50"></text></g><g><title>__GI_memcpy (7,897,519 samples, 0.02%)</title><rect x="43.2903%" y="245" width="0.0152%" height="15" fill="rgb(208,67,9)" fg:x="22532061016" fg:w="7897519"/><text x="43.5403%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,897,519 samples, 0.02%)</title><rect x="43.2903%" y="229" width="0.0152%" height="15" fill="rgb(219,133,21)" fg:x="22532061016" fg:w="7897519"/><text x="43.5403%" y="239.50"></text></g><g><title>[unknown] (39,003,924 samples, 0.07%)</title><rect x="43.3364%" y="229" width="0.0749%" height="15" fill="rgb(246,46,29)" fg:x="22556095179" fg:w="39003924"/><text x="43.5864%" y="239.50"></text></g><g><title>[unknown] (31,358,953 samples, 0.06%)</title><rect x="43.3511%" y="213" width="0.0602%" height="15" fill="rgb(246,185,52)" fg:x="22563740150" fg:w="31358953"/><text x="43.6011%" y="223.50"></text></g><g><title>[unknown] (31,358,953 samples, 0.06%)</title><rect x="43.3511%" y="197" width="0.0602%" height="15" fill="rgb(252,136,11)" fg:x="22563740150" fg:w="31358953"/><text x="43.6011%" y="207.50"></text></g><g><title>[unknown] (31,358,953 samples, 0.06%)</title><rect x="43.3511%" y="181" width="0.0602%" height="15" fill="rgb(219,138,53)" fg:x="22563740150" fg:w="31358953"/><text x="43.6011%" y="191.50"></text></g><g><title>[unknown] (23,319,379 samples, 0.04%)</title><rect x="43.3666%" y="165" width="0.0448%" height="15" fill="rgb(211,51,23)" fg:x="22571779724" fg:w="23319379"/><text x="43.6166%" y="175.50"></text></g><g><title>[unknown] (23,319,379 samples, 0.04%)</title><rect x="43.3666%" y="149" width="0.0448%" height="15" fill="rgb(247,221,28)" fg:x="22571779724" fg:w="23319379"/><text x="43.6166%" y="159.50"></text></g><g><title>[unknown] (11,666,425 samples, 0.02%)</title><rect x="43.3890%" y="133" width="0.0224%" height="15" fill="rgb(251,222,45)" fg:x="22583432678" fg:w="11666425"/><text x="43.6390%" y="143.50"></text></g><g><title>[unknown] (11,666,425 samples, 0.02%)</title><rect x="43.3890%" y="117" width="0.0224%" height="15" fill="rgb(217,162,53)" fg:x="22583432678" fg:w="11666425"/><text x="43.6390%" y="127.50"></text></g><g><title>[unknown] (11,666,425 samples, 0.02%)</title><rect x="43.3890%" y="101" width="0.0224%" height="15" fill="rgb(229,93,14)" fg:x="22583432678" fg:w="11666425"/><text x="43.6390%" y="111.50"></text></g><g><title>[unknown] (7,703,527 samples, 0.01%)</title><rect x="43.3966%" y="85" width="0.0148%" height="15" fill="rgb(209,67,49)" fg:x="22587395576" fg:w="7703527"/><text x="43.6466%" y="95.50"></text></g><g><title>[unknown] (7,703,527 samples, 0.01%)</title><rect x="43.3966%" y="69" width="0.0148%" height="15" fill="rgb(213,87,29)" fg:x="22587395576" fg:w="7703527"/><text x="43.6466%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (78,905,564 samples, 0.15%)</title><rect x="43.2677%" y="309" width="0.1516%" height="15" fill="rgb(205,151,52)" fg:x="22520307795" fg:w="78905564"/><text x="43.5177%" y="319.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (78,905,564 samples, 0.15%)</title><rect x="43.2677%" y="293" width="0.1516%" height="15" fill="rgb(253,215,39)" fg:x="22520307795" fg:w="78905564"/><text x="43.5177%" y="303.50"></text></g><g><title>__GI___libc_realloc (75,147,802 samples, 0.14%)</title><rect x="43.2749%" y="277" width="0.1444%" height="15" fill="rgb(221,220,41)" fg:x="22524065557" fg:w="75147802"/><text x="43.5249%" y="287.50"></text></g><g><title>_int_realloc (71,151,227 samples, 0.14%)</title><rect x="43.2826%" y="261" width="0.1367%" height="15" fill="rgb(218,133,21)" fg:x="22528062132" fg:w="71151227"/><text x="43.5326%" y="271.50"></text></g><g><title>_int_malloc (55,164,006 samples, 0.11%)</title><rect x="43.3133%" y="245" width="0.1060%" height="15" fill="rgb(221,193,43)" fg:x="22544049353" fg:w="55164006"/><text x="43.5633%" y="255.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (16,420,195 samples, 0.03%)</title><rect x="43.4588%" y="293" width="0.0315%" height="15" fill="rgb(240,128,52)" fg:x="22619787215" fg:w="16420195"/><text x="43.7088%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,019,290,969 samples, 5.80%)</title><rect x="47.2835%" y="229" width="5.8009%" height="15" fill="rgb(253,114,12)" fg:x="24610513946" fg:w="3019290969"/><text x="47.5335%" y="239.50">&lt;core::..</text></g><g><title>&lt;lb_apis::StubChannelControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (36,989,333 samples, 0.07%)</title><rect x="53.0844%" y="229" width="0.0711%" height="15" fill="rgb(215,223,47)" fg:x="27629804915" fg:w="36989333"/><text x="53.3344%" y="239.50"></text></g><g><title>__GI___libc_free (12,239,150 samples, 0.02%)</title><rect x="53.1555%" y="229" width="0.0235%" height="15" fill="rgb(248,225,23)" fg:x="27666794248" fg:w="12239150"/><text x="53.4055%" y="239.50"></text></g><g><title>_int_free (12,239,150 samples, 0.02%)</title><rect x="53.1555%" y="213" width="0.0235%" height="15" fill="rgb(250,108,0)" fg:x="27666794248" fg:w="12239150"/><text x="53.4055%" y="223.50"></text></g><g><title>_int_malloc (110,469,274 samples, 0.21%)</title><rect x="53.1950%" y="213" width="0.2122%" height="15" fill="rgb(228,208,7)" fg:x="27687341262" fg:w="110469274"/><text x="53.4450%" y="223.50"></text></g><g><title>unlink_chunk (49,163,820 samples, 0.09%)</title><rect x="53.3128%" y="197" width="0.0945%" height="15" fill="rgb(244,45,10)" fg:x="27748646716" fg:w="49163820"/><text x="53.5628%" y="207.50"></text></g><g><title>__GI___libc_malloc (122,861,185 samples, 0.24%)</title><rect x="53.1790%" y="229" width="0.2360%" height="15" fill="rgb(207,125,25)" fg:x="27679033398" fg:w="122861185"/><text x="53.4290%" y="239.50"></text></g><g><title>__rust_alloc (7,871,799 samples, 0.02%)</title><rect x="53.4151%" y="229" width="0.0151%" height="15" fill="rgb(210,195,18)" fg:x="27801894583" fg:w="7871799"/><text x="53.6651%" y="239.50"></text></g><g><title>_int_free (12,345,261 samples, 0.02%)</title><rect x="53.4771%" y="197" width="0.0237%" height="15" fill="rgb(249,80,12)" fg:x="27834202214" fg:w="12345261"/><text x="53.7271%" y="207.50"></text></g><g><title>_int_free_create_chunk (16,495,502 samples, 0.03%)</title><rect x="53.5242%" y="181" width="0.0317%" height="15" fill="rgb(221,65,9)" fg:x="27858678168" fg:w="16495502"/><text x="53.7742%" y="191.50"></text></g><g><title>__GI___libc_free (49,084,767 samples, 0.09%)</title><rect x="53.4693%" y="213" width="0.0943%" height="15" fill="rgb(235,49,36)" fg:x="27830138217" fg:w="49084767"/><text x="53.7193%" y="223.50"></text></g><g><title>_int_free_merge_chunk (32,675,509 samples, 0.06%)</title><rect x="53.5008%" y="197" width="0.0628%" height="15" fill="rgb(225,32,20)" fg:x="27846547475" fg:w="32675509"/><text x="53.7508%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2,190,215,064 samples, 4.21%)</title><rect x="53.4302%" y="229" width="4.2080%" height="15" fill="rgb(215,141,46)" fg:x="27809766382" fg:w="2190215064"/><text x="53.6802%" y="239.50">alloc..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_cb::RRPickerPicker&gt; (2,120,758,462 samples, 4.07%)</title><rect x="53.5636%" y="213" width="4.0746%" height="15" fill="rgb(250,160,47)" fg:x="27879222984" fg:w="2120758462"/><text x="53.8136%" y="223.50">core..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,973,777,793 samples, 9.56%)</title><rect x="57.6619%" y="213" width="9.5560%" height="15" fill="rgb(216,222,40)" fg:x="30012324613" fg:w="4973777793"/><text x="57.9119%" y="223.50">&lt;alloc::vec::i..</text></g><g><title>_ZN4core3ptr320drop_in_place$LT$core..iter..adapters..flatten..Flatten$LT$core..iter..adapters..map..Map$LT$alloc..vec..into_iter..IntoIter$LT$std..sync..mutex..MutexGuard$LT$grpc..client..load_balancing..LbState$GT$$GT$$C$lb_apis..del_pol_cb..DelegatingPolicy..new..$u7b$$u7b$closure$u7d$$u7d$..$u7b$$u7b$closure$u7d$$u7d$$GT$$GT$$GT$17h1dd0109f24be7a92E.llvm.4780643635171514031 (16,399,838 samples, 0.03%)</title><rect x="67.2179%" y="213" width="0.0315%" height="15" fill="rgb(234,217,39)" fg:x="34986102406" fg:w="16399838"/><text x="67.4679%" y="223.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,234,675 samples, 0.02%)</title><rect x="67.2336%" y="197" width="0.0158%" height="15" fill="rgb(207,178,40)" fg:x="34994267569" fg:w="8234675"/><text x="67.4836%" y="207.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h582e6995221ab373E.llvm.2902323996697549742 (11,613,396,668 samples, 22.31%)</title><rect x="44.9447%" y="245" width="22.3125%" height="15" fill="rgb(221,136,13)" fg:x="23393169705" fg:w="11613396668"/><text x="45.1947%" y="255.50">_ZN4core3ops8function6FnOnce9call_o..</text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (5,006,584,927 samples, 9.62%)</title><rect x="57.6382%" y="229" width="9.6190%" height="15" fill="rgb(249,199,10)" fg:x="29999981446" fg:w="5006584927"/><text x="57.8882%" y="239.50">alloc::vec::in..</text></g><g><title>__GI___libc_free (20,741,890 samples, 0.04%)</title><rect x="67.2572%" y="245" width="0.0399%" height="15" fill="rgb(249,222,13)" fg:x="35006566373" fg:w="20741890"/><text x="67.5072%" y="255.50"></text></g><g><title>_int_free (20,741,890 samples, 0.04%)</title><rect x="67.2572%" y="229" width="0.0399%" height="15" fill="rgb(244,185,38)" fg:x="35006566373" fg:w="20741890"/><text x="67.5072%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (11,830,974,051 samples, 22.73%)</title><rect x="44.6450%" y="261" width="22.7305%" height="15" fill="rgb(236,202,9)" fg:x="23237174728" fg:w="11830974051"/><text x="44.8950%" y="271.50">&lt;grpc::client::load_balancing::child..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (40,840,516 samples, 0.08%)</title><rect x="67.2971%" y="245" width="0.0785%" height="15" fill="rgb(250,229,37)" fg:x="35027308263" fg:w="40840516"/><text x="67.5471%" y="255.50"></text></g><g><title>__GI___libc_malloc (8,262,738 samples, 0.02%)</title><rect x="67.3755%" y="261" width="0.0159%" height="15" fill="rgb(206,174,23)" fg:x="35068148779" fg:w="8262738"/><text x="67.6255%" y="271.50"></text></g><g><title>lb_apis::StubChannelControllerCallbacks::send_update (12,460,105,295 samples, 23.94%)</title><rect x="43.4904%" y="293" width="23.9393%" height="15" fill="rgb(211,33,43)" fg:x="22636207410" fg:w="12460105295"/><text x="43.7404%" y="303.50">lb_apis::StubChannelControllerCallback..</text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::_{{closure}} (12,325,920,966 samples, 23.68%)</title><rect x="43.7482%" y="277" width="23.6815%" height="15" fill="rgb(245,58,50)" fg:x="22770391739" fg:w="12325920966"/><text x="43.9982%" y="287.50">&lt;lb_apis::chi_pol_cb::ChildPolicy as g..</text></g><g><title>core::hash::BuildHasher::hash_one (19,901,188 samples, 0.04%)</title><rect x="67.3914%" y="261" width="0.0382%" height="15" fill="rgb(244,68,36)" fg:x="35076411517" fg:w="19901188"/><text x="67.6414%" y="271.50"></text></g><g><title>rand::rng::Rng::gen_range (32,763,669 samples, 0.06%)</title><rect x="67.4296%" y="293" width="0.0629%" height="15" fill="rgb(232,229,15)" fg:x="35096312705" fg:w="32763669"/><text x="67.6796%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (8,164,109 samples, 0.02%)</title><rect x="67.4769%" y="277" width="0.0157%" height="15" fill="rgb(254,30,23)" fg:x="35120912265" fg:w="8164109"/><text x="67.7269%" y="287.50"></text></g><g><title>lb_apis::callbacks (13,151,309,009 samples, 25.27%)</title><rect x="42.2413%" y="325" width="25.2673%" height="15" fill="rgb(235,160,14)" fg:x="21986075107" fg:w="13151309009"/><text x="42.4913%" y="335.50">lb_apis::callbacks</text></g><g><title>bencher::Bencher::iter (12,538,170,757 samples, 24.09%)</title><rect x="43.4193%" y="309" width="24.0893%" height="15" fill="rgb(212,155,44)" fg:x="22599213359" fg:w="12538170757"/><text x="43.6693%" y="319.50">bencher::Bencher::iter</text></g><g><title>__GI___libc_malloc (33,188,637 samples, 0.06%)</title><rect x="67.5644%" y="245" width="0.0638%" height="15" fill="rgb(226,2,50)" fg:x="35166443284" fg:w="33188637"/><text x="67.8144%" y="255.50"></text></g><g><title>_int_malloc (29,038,392 samples, 0.06%)</title><rect x="67.5723%" y="229" width="0.0558%" height="15" fill="rgb(234,177,6)" fg:x="35170593529" fg:w="29038392"/><text x="67.8223%" y="239.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (45,659,821 samples, 0.09%)</title><rect x="67.5484%" y="261" width="0.0877%" height="15" fill="rgb(217,24,9)" fg:x="35158125806" fg:w="45659821"/><text x="67.7984%" y="271.50"></text></g><g><title>__GI___libc_realloc (16,626,146 samples, 0.03%)</title><rect x="67.6361%" y="229" width="0.0319%" height="15" fill="rgb(220,13,46)" fg:x="35203785627" fg:w="16626146"/><text x="67.8861%" y="239.50"></text></g><g><title>_int_realloc (16,626,146 samples, 0.03%)</title><rect x="67.6361%" y="213" width="0.0319%" height="15" fill="rgb(239,221,27)" fg:x="35203785627" fg:w="16626146"/><text x="67.8861%" y="223.50"></text></g><g><title>_int_malloc (16,626,146 samples, 0.03%)</title><rect x="67.6361%" y="197" width="0.0319%" height="15" fill="rgb(222,198,25)" fg:x="35203785627" fg:w="16626146"/><text x="67.8861%" y="207.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (74,701,920 samples, 0.14%)</title><rect x="67.5324%" y="277" width="0.1435%" height="15" fill="rgb(211,99,13)" fg:x="35149827605" fg:w="74701920"/><text x="67.7824%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (20,743,898 samples, 0.04%)</title><rect x="67.6361%" y="261" width="0.0399%" height="15" fill="rgb(232,111,31)" fg:x="35203785627" fg:w="20743898"/><text x="67.8861%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (20,743,898 samples, 0.04%)</title><rect x="67.6361%" y="245" width="0.0399%" height="15" fill="rgb(245,82,37)" fg:x="35203785627" fg:w="20743898"/><text x="67.8861%" y="255.50"></text></g><g><title>__GI___libc_free (16,588,081 samples, 0.03%)</title><rect x="67.6760%" y="277" width="0.0319%" height="15" fill="rgb(227,149,46)" fg:x="35224529525" fg:w="16588081"/><text x="67.9260%" y="287.50"></text></g><g><title>_int_free (16,588,081 samples, 0.03%)</title><rect x="67.6760%" y="261" width="0.0319%" height="15" fill="rgb(218,36,50)" fg:x="35224529525" fg:w="16588081"/><text x="67.9260%" y="271.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h368aaacc3eb2e184E.llvm.9464877178135716140 (33,191,875 samples, 0.06%)</title><rect x="67.7158%" y="261" width="0.0638%" height="15" fill="rgb(226,80,48)" fg:x="35245270587" fg:w="33191875"/><text x="67.9658%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,562,374 samples, 0.03%)</title><rect x="67.7478%" y="245" width="0.0318%" height="15" fill="rgb(238,224,15)" fg:x="35261900088" fg:w="16562374"/><text x="67.9978%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (49,820,234 samples, 0.10%)</title><rect x="67.7078%" y="277" width="0.0957%" height="15" fill="rgb(241,136,10)" fg:x="35241117606" fg:w="49820234"/><text x="67.9578%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,475,378 samples, 0.02%)</title><rect x="67.7796%" y="261" width="0.0240%" height="15" fill="rgb(208,32,45)" fg:x="35278462462" fg:w="12475378"/><text x="68.0296%" y="271.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (145,269,809 samples, 0.28%)</title><rect x="67.5324%" y="293" width="0.2791%" height="15" fill="rgb(207,135,9)" fg:x="35149827605" fg:w="145269809"/><text x="67.7824%" y="303.50"></text></g><g><title>__GI___libc_malloc (12,446,717 samples, 0.02%)</title><rect x="67.8355%" y="245" width="0.0239%" height="15" fill="rgb(206,86,44)" fg:x="35307553055" fg:w="12446717"/><text x="68.0855%" y="255.50"></text></g><g><title>_int_malloc (12,446,717 samples, 0.02%)</title><rect x="67.8355%" y="229" width="0.0239%" height="15" fill="rgb(245,177,15)" fg:x="35307553055" fg:w="12446717"/><text x="68.0855%" y="239.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h731624bbe989dabeE.llvm.4780643635171514031 (33,203,314 samples, 0.06%)</title><rect x="67.8195%" y="293" width="0.0638%" height="15" fill="rgb(206,64,50)" fg:x="35299253378" fg:w="33203314"/><text x="68.0695%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (33,203,314 samples, 0.06%)</title><rect x="67.8195%" y="277" width="0.0638%" height="15" fill="rgb(234,36,40)" fg:x="35299253378" fg:w="33203314"/><text x="68.0695%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (29,050,020 samples, 0.06%)</title><rect x="67.8275%" y="261" width="0.0558%" height="15" fill="rgb(213,64,8)" fg:x="35303406672" fg:w="29050020"/><text x="68.0775%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,303,196 samples, 0.02%)</title><rect x="67.8674%" y="245" width="0.0160%" height="15" fill="rgb(210,75,36)" fg:x="35324153496" fg:w="8303196"/><text x="68.1174%" y="255.50"></text></g><g><title>__GI___libc_malloc (33,152,469 samples, 0.06%)</title><rect x="67.9551%" y="245" width="0.0637%" height="15" fill="rgb(229,88,21)" fg:x="35369816817" fg:w="33152469"/><text x="68.2051%" y="255.50"></text></g><g><title>_int_malloc (33,152,469 samples, 0.06%)</title><rect x="67.9551%" y="229" width="0.0637%" height="15" fill="rgb(252,204,47)" fg:x="35369816817" fg:w="33152469"/><text x="68.2051%" y="239.50"></text></g><g><title>malloc_consolidate (29,013,222 samples, 0.06%)</title><rect x="67.9631%" y="213" width="0.0557%" height="15" fill="rgb(208,77,27)" fg:x="35373956064" fg:w="29013222"/><text x="68.2131%" y="223.50"></text></g><g><title>unlink_chunk (12,441,591 samples, 0.02%)</title><rect x="67.9949%" y="197" width="0.0239%" height="15" fill="rgb(221,76,26)" fg:x="35390527695" fg:w="12441591"/><text x="68.2449%" y="207.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h03e3fa1e86f88544E.llvm.9464877178135716140 (62,189,838 samples, 0.12%)</title><rect x="67.9233%" y="261" width="0.1195%" height="15" fill="rgb(225,139,18)" fg:x="35353237305" fg:w="62189838"/><text x="68.1733%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,457,857 samples, 0.02%)</title><rect x="68.0188%" y="245" width="0.0239%" height="15" fill="rgb(230,137,11)" fg:x="35402969286" fg:w="12457857"/><text x="68.2688%" y="255.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17he69976d13d8f5112E.llvm.2957088687967014999 (87,122,386 samples, 0.17%)</title><rect x="67.8833%" y="293" width="0.1674%" height="15" fill="rgb(212,28,1)" fg:x="35332456692" fg:w="87122386"/><text x="68.1333%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (82,960,552 samples, 0.16%)</title><rect x="67.8913%" y="277" width="0.1594%" height="15" fill="rgb(248,164,17)" fg:x="35336618526" fg:w="82960552"/><text x="68.1413%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (294,679,086 samples, 0.57%)</title><rect x="67.5245%" y="309" width="0.5662%" height="15" fill="rgb(222,171,42)" fg:x="35145674171" fg:w="294679086"/><text x="67.7745%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (20,774,179 samples, 0.04%)</title><rect x="68.0507%" y="293" width="0.0399%" height="15" fill="rgb(243,84,45)" fg:x="35419579078" fg:w="20774179"/><text x="68.3007%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,774,179 samples, 0.04%)</title><rect x="68.0507%" y="277" width="0.0399%" height="15" fill="rgb(252,49,23)" fg:x="35419579078" fg:w="20774179"/><text x="68.3007%" y="287.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (12,486,518 samples, 0.02%)</title><rect x="68.0666%" y="261" width="0.0240%" height="15" fill="rgb(215,19,7)" fg:x="35427866739" fg:w="12486518"/><text x="68.3166%" y="271.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h4884cc1a4d2303d3E.llvm.3660540333688232871 (12,486,518 samples, 0.02%)</title><rect x="68.0666%" y="245" width="0.0240%" height="15" fill="rgb(238,81,41)" fg:x="35427866739" fg:w="12486518"/><text x="68.3166%" y="255.50"></text></g><g><title>__GI___libc_malloc (33,255,292 samples, 0.06%)</title><rect x="68.0906%" y="309" width="0.0639%" height="15" fill="rgb(210,199,37)" fg:x="35440353257" fg:w="33255292"/><text x="68.3406%" y="319.50"></text></g><g><title>_int_malloc (24,931,496 samples, 0.05%)</title><rect x="68.1066%" y="293" width="0.0479%" height="15" fill="rgb(244,192,49)" fg:x="35448677053" fg:w="24931496"/><text x="68.3566%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (8,306,492 samples, 0.02%)</title><rect x="68.1705%" y="277" width="0.0160%" height="15" fill="rgb(226,211,11)" fg:x="35481917688" fg:w="8306492"/><text x="68.4205%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24,863,075 samples, 0.05%)</title><rect x="68.2025%" y="261" width="0.0478%" height="15" fill="rgb(236,162,54)" fg:x="35498563819" fg:w="24863075"/><text x="68.4525%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (24,863,075 samples, 0.05%)</title><rect x="68.2025%" y="245" width="0.0478%" height="15" fill="rgb(220,229,9)" fg:x="35498563819" fg:w="24863075"/><text x="68.4525%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (20,705,390 samples, 0.04%)</title><rect x="68.2105%" y="229" width="0.0398%" height="15" fill="rgb(250,87,22)" fg:x="35502721504" fg:w="20705390"/><text x="68.4605%" y="239.50"></text></g><g><title>__GI___libc_malloc (16,551,852 samples, 0.03%)</title><rect x="68.2184%" y="213" width="0.0318%" height="15" fill="rgb(239,43,17)" fg:x="35506875042" fg:w="16551852"/><text x="68.4684%" y="223.50"></text></g><g><title>_int_malloc (8,264,423 samples, 0.02%)</title><rect x="68.2344%" y="197" width="0.0159%" height="15" fill="rgb(231,177,25)" fg:x="35515162471" fg:w="8264423"/><text x="68.4844%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (66,433,791 samples, 0.13%)</title><rect x="68.1545%" y="309" width="0.1276%" height="15" fill="rgb(219,179,1)" fg:x="35473608549" fg:w="66433791"/><text x="68.4045%" y="319.50"></text></g><g><title>core::fmt::write (62,276,720 samples, 0.12%)</title><rect x="68.1625%" y="293" width="0.1197%" height="15" fill="rgb(238,219,53)" fg:x="35477765620" fg:w="62276720"/><text x="68.4125%" y="303.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (49,818,160 samples, 0.10%)</title><rect x="68.1864%" y="277" width="0.0957%" height="15" fill="rgb(232,167,36)" fg:x="35490224180" fg:w="49818160"/><text x="68.4364%" y="287.50"></text></g><g><title>core::fmt::Formatter::pad_integral (16,615,446 samples, 0.03%)</title><rect x="68.2502%" y="261" width="0.0319%" height="15" fill="rgb(244,19,51)" fg:x="35523426894" fg:w="16615446"/><text x="68.5002%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (8,300,618 samples, 0.02%)</title><rect x="68.2662%" y="245" width="0.0159%" height="15" fill="rgb(224,6,22)" fg:x="35531741722" fg:w="8300618"/><text x="68.5162%" y="255.50"></text></g><g><title>__GI___libc_malloc (8,329,357 samples, 0.02%)</title><rect x="68.2901%" y="277" width="0.0160%" height="15" fill="rgb(224,145,5)" fg:x="35544198210" fg:w="8329357"/><text x="68.5401%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (74,722,197 samples, 0.14%)</title><rect x="68.2822%" y="309" width="0.1436%" height="15" fill="rgb(234,130,49)" fg:x="35540042340" fg:w="74722197"/><text x="68.5322%" y="319.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (70,566,327 samples, 0.14%)</title><rect x="68.2901%" y="293" width="0.1356%" height="15" fill="rgb(254,6,2)" fg:x="35544198210" fg:w="70566327"/><text x="68.5401%" y="303.50"></text></g><g><title>__GI___libc_realloc (62,236,970 samples, 0.12%)</title><rect x="68.3061%" y="277" width="0.1196%" height="15" fill="rgb(208,96,46)" fg:x="35552527567" fg:w="62236970"/><text x="68.5561%" y="287.50"></text></g><g><title>_int_realloc (62,236,970 samples, 0.12%)</title><rect x="68.3061%" y="261" width="0.1196%" height="15" fill="rgb(239,3,39)" fg:x="35552527567" fg:w="62236970"/><text x="68.5561%" y="271.50"></text></g><g><title>_int_malloc (58,083,737 samples, 0.11%)</title><rect x="68.3141%" y="245" width="0.1116%" height="15" fill="rgb(233,210,1)" fg:x="35556680800" fg:w="58083737"/><text x="68.5641%" y="255.50"></text></g><g><title>malloc_consolidate (41,544,442 samples, 0.08%)</title><rect x="68.3459%" y="229" width="0.0798%" height="15" fill="rgb(244,137,37)" fg:x="35573220095" fg:w="41544442"/><text x="68.5959%" y="239.50"></text></g><g><title>unlink_chunk (12,433,926 samples, 0.02%)</title><rect x="68.4018%" y="213" width="0.0239%" height="15" fill="rgb(240,136,2)" fg:x="35602330611" fg:w="12433926"/><text x="68.6518%" y="223.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (83,057,569 samples, 0.16%)</title><rect x="70.9166%" y="261" width="0.1596%" height="15" fill="rgb(239,18,37)" fg:x="36911216943" fg:w="83057569"/><text x="71.1666%" y="271.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (1,072,036,033 samples, 2.06%)</title><rect x="69.2560%" y="277" width="2.0597%" height="15" fill="rgb(218,185,22)" fg:x="36046901910" fg:w="1072036033"/><text x="69.5060%" y="287.50">&lt;..</text></g><g><title>core::hash::BuildHasher::hash_one (112,190,292 samples, 0.22%)</title><rect x="71.1001%" y="261" width="0.2155%" height="15" fill="rgb(225,218,4)" fg:x="37006747651" fg:w="112190292"/><text x="71.3501%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (16,594,183 samples, 0.03%)</title><rect x="71.2838%" y="245" width="0.0319%" height="15" fill="rgb(230,182,32)" fg:x="37102343760" fg:w="16594183"/><text x="71.5338%" y="255.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,478,846 samples, 0.02%)</title><rect x="71.3635%" y="261" width="0.0240%" height="15" fill="rgb(242,56,43)" fg:x="37143824226" fg:w="12478846"/><text x="71.6135%" y="271.50"></text></g><g><title>__GI___libc_free (20,759,396 samples, 0.04%)</title><rect x="71.3874%" y="261" width="0.0399%" height="15" fill="rgb(233,99,24)" fg:x="37156303072" fg:w="20759396"/><text x="71.6374%" y="271.50"></text></g><g><title>_int_free (12,461,833 samples, 0.02%)</title><rect x="71.4034%" y="245" width="0.0239%" height="15" fill="rgb(234,209,42)" fg:x="37164600635" fg:w="12461833"/><text x="71.6534%" y="255.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17he69976d13d8f5112E.llvm.2957088687967014999 (120,445,103 samples, 0.23%)</title><rect x="71.3156%" y="277" width="0.2314%" height="15" fill="rgb(227,7,12)" fg:x="37118937943" fg:w="120445103"/><text x="71.5656%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (58,166,309 samples, 0.11%)</title><rect x="71.4353%" y="261" width="0.1118%" height="15" fill="rgb(245,203,43)" fg:x="37181216737" fg:w="58166309"/><text x="71.6853%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (1,450,218,836 samples, 2.79%)</title><rect x="68.8646%" y="293" width="2.7863%" height="15" fill="rgb(238,205,33)" fg:x="35843189328" fg:w="1450218836"/><text x="69.1146%" y="303.50">&lt;g..</text></g><g><title>core::hash::BuildHasher::hash_one (54,025,118 samples, 0.10%)</title><rect x="71.5471%" y="277" width="0.1038%" height="15" fill="rgb(231,56,7)" fg:x="37239383046" fg:w="54025118"/><text x="71.7971%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,300,691 samples, 0.02%)</title><rect x="71.6349%" y="261" width="0.0159%" height="15" fill="rgb(244,186,29)" fg:x="37285107473" fg:w="8300691"/><text x="71.8849%" y="271.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (41,611,055 samples, 0.08%)</title><rect x="71.6509%" y="293" width="0.0799%" height="15" fill="rgb(234,111,31)" fg:x="37293408164" fg:w="41611055"/><text x="71.9009%" y="303.50"></text></g><g><title>__GI___libc_malloc (41,577,894 samples, 0.08%)</title><rect x="85.7941%" y="261" width="0.0799%" height="15" fill="rgb(241,149,10)" fg:x="44654816681" fg:w="41577894"/><text x="86.0441%" y="271.50"></text></g><g><title>tcache_get (24,952,261 samples, 0.05%)</title><rect x="85.8261%" y="245" width="0.0479%" height="15" fill="rgb(249,206,44)" fg:x="44671442314" fg:w="24952261"/><text x="86.0761%" y="255.50"></text></g><g><title>tcache_get_n (24,952,261 samples, 0.05%)</title><rect x="85.8261%" y="229" width="0.0479%" height="15" fill="rgb(251,153,30)" fg:x="44671442314" fg:w="24952261"/><text x="86.0761%" y="239.50"></text></g><g><title>__rust_alloc (8,297,255 samples, 0.02%)</title><rect x="85.8740%" y="261" width="0.0159%" height="15" fill="rgb(239,152,38)" fg:x="44696394575" fg:w="8297255"/><text x="86.1240%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (20,787,405 samples, 0.04%)</title><rect x="87.0870%" y="181" width="0.0399%" height="15" fill="rgb(249,139,47)" fg:x="45327752963" fg:w="20787405"/><text x="87.3370%" y="191.50"></text></g><g><title>__GI_memcpy (589,791,911 samples, 1.13%)</title><rect x="87.0312%" y="197" width="1.1332%" height="15" fill="rgb(244,64,35)" fg:x="45298702203" fg:w="589791911"/><text x="87.2812%" y="207.50"></text></g><g><title>__memcpy_avx_unaligned_erms (539,953,746 samples, 1.04%)</title><rect x="87.1270%" y="181" width="1.0374%" height="15" fill="rgb(216,46,15)" fg:x="45348540368" fg:w="539953746"/><text x="87.3770%" y="191.50"></text></g><g><title>_int_free (90,695,217 samples, 0.17%)</title><rect x="88.1644%" y="197" width="0.1743%" height="15" fill="rgb(250,74,19)" fg:x="45888494114" fg:w="90695217"/><text x="88.4144%" y="207.50"></text></g><g><title>_int_free_merge_chunk (253,465,659 samples, 0.49%)</title><rect x="88.3386%" y="197" width="0.4870%" height="15" fill="rgb(249,42,33)" fg:x="45979189331" fg:w="253465659"/><text x="88.5886%" y="207.50"></text></g><g><title>_int_free_create_chunk (166,252,763 samples, 0.32%)</title><rect x="88.5062%" y="181" width="0.3194%" height="15" fill="rgb(242,149,17)" fg:x="46066402227" fg:w="166252763"/><text x="88.7562%" y="191.50"></text></g><g><title>unlink_chunk (79,029,042 samples, 0.15%)</title><rect x="88.6738%" y="165" width="0.1518%" height="15" fill="rgb(244,29,21)" fg:x="46153625948" fg:w="79029042"/><text x="88.9238%" y="175.50"></text></g><g><title>_int_malloc (710,699,946 samples, 1.37%)</title><rect x="88.8256%" y="197" width="1.3654%" height="15" fill="rgb(220,130,37)" fg:x="46232654990" fg:w="710699946"/><text x="89.0756%" y="207.50"></text></g><g><title>unlink_chunk (116,408,333 samples, 0.22%)</title><rect x="89.9674%" y="181" width="0.2237%" height="15" fill="rgb(211,67,2)" fg:x="46826946603" fg:w="116408333"/><text x="90.2174%" y="191.50"></text></g><g><title>_int_realloc (1,802,581,097 samples, 3.46%)</title><rect x="86.7358%" y="213" width="3.4633%" height="15" fill="rgb(235,68,52)" fg:x="45144924006" fg:w="1802581097"/><text x="86.9858%" y="223.50">_in..</text></g><g><title>checked_request2size (12,487,641 samples, 0.02%)</title><rect x="90.2070%" y="213" width="0.0240%" height="15" fill="rgb(246,142,3)" fg:x="46951660641" fg:w="12487641"/><text x="90.4570%" y="223.50"></text></g><g><title>__GI___libc_realloc (2,006,211,613 samples, 3.85%)</title><rect x="86.3845%" y="229" width="3.8545%" height="15" fill="rgb(241,25,7)" fg:x="44962073323" fg:w="2006211613"/><text x="86.6345%" y="239.50">__GI..</text></g><g><title>__rdl_realloc (41,588,728 samples, 0.08%)</title><rect x="90.2389%" y="229" width="0.0799%" height="15" fill="rgb(242,119,39)" fg:x="46968284936" fg:w="41588728"/><text x="90.4889%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,237,332,735 samples, 13.90%)</title><rect x="76.4379%" y="277" width="13.9049%" height="15" fill="rgb(241,98,45)" fg:x="39784998445" fg:w="7237332735"/><text x="76.6879%" y="287.50">&lt;alloc::vec::Vec&lt;T&gt; a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,317,639,350 samples, 4.45%)</title><rect x="85.8900%" y="261" width="4.4528%" height="15" fill="rgb(254,28,30)" fg:x="44704691830" fg:w="2317639350"/><text x="86.1400%" y="271.50">alloc..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (2,180,785,518 samples, 4.19%)</title><rect x="86.1529%" y="245" width="4.1899%" height="15" fill="rgb(241,142,54)" fg:x="44841545662" fg:w="2180785518"/><text x="86.4029%" y="255.50">_ZN5a..</text></g><g><title>__rust_realloc (12,457,516 samples, 0.02%)</title><rect x="90.3188%" y="229" width="0.0239%" height="15" fill="rgb(222,85,15)" fg:x="47009873664" fg:w="12457516"/><text x="90.5688%" y="239.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (45,694,690 samples, 0.09%)</title><rect x="90.3428%" y="277" width="0.0878%" height="15" fill="rgb(210,85,47)" fg:x="47022331180" fg:w="45694690"/><text x="90.5928%" y="287.50"></text></g><g><title>_int_free (54,015,293 samples, 0.10%)</title><rect x="90.5104%" y="261" width="0.1038%" height="15" fill="rgb(224,206,25)" fg:x="47109601182" fg:w="54015293"/><text x="90.7604%" y="271.50"></text></g><g><title>tcache_put (8,300,342 samples, 0.02%)</title><rect x="90.5983%" y="245" width="0.0159%" height="15" fill="rgb(243,201,19)" fg:x="47155316133" fg:w="8300342"/><text x="90.8483%" y="255.50"></text></g><g><title>__GI___libc_free (157,941,466 samples, 0.30%)</title><rect x="90.4306%" y="277" width="0.3034%" height="15" fill="rgb(236,59,4)" fg:x="47068025870" fg:w="157941466"/><text x="90.6806%" y="287.50"></text></g><g><title>_int_free_merge_chunk (62,350,861 samples, 0.12%)</title><rect x="90.6142%" y="261" width="0.1198%" height="15" fill="rgb(254,179,45)" fg:x="47163616475" fg:w="62350861"/><text x="90.8642%" y="271.50"></text></g><g><title>_int_free_create_chunk (49,895,824 samples, 0.10%)</title><rect x="90.6382%" y="245" width="0.0959%" height="15" fill="rgb(226,14,10)" fg:x="47176071512" fg:w="49895824"/><text x="90.8882%" y="255.50"></text></g><g><title>unlink_chunk (29,084,197 samples, 0.06%)</title><rect x="90.6781%" y="229" width="0.0559%" height="15" fill="rgb(244,27,41)" fg:x="47196883139" fg:w="29084197"/><text x="90.9281%" y="239.50"></text></g><g><title>checked_request2size (8,302,022 samples, 0.02%)</title><rect x="91.2369%" y="245" width="0.0160%" height="15" fill="rgb(235,35,32)" fg:x="47487689483" fg:w="8302022"/><text x="91.4869%" y="255.50"></text></g><g><title>malloc_consolidate (141,230,317 samples, 0.27%)</title><rect x="91.2528%" y="245" width="0.2713%" height="15" fill="rgb(218,68,31)" fg:x="47495991505" fg:w="141230317"/><text x="91.5028%" y="255.50"></text></g><g><title>__GI___libc_malloc (440,353,144 samples, 0.85%)</title><rect x="90.7340%" y="277" width="0.8460%" height="15" fill="rgb(207,120,37)" fg:x="47225967336" fg:w="440353144"/><text x="90.9840%" y="287.50"></text></g><g><title>_int_malloc (394,671,542 samples, 0.76%)</title><rect x="90.8218%" y="261" width="0.7583%" height="15" fill="rgb(227,98,0)" fg:x="47271648938" fg:w="394671542"/><text x="91.0718%" y="271.50"></text></g><g><title>unlink_chunk (29,098,658 samples, 0.06%)</title><rect x="91.5242%" y="245" width="0.0559%" height="15" fill="rgb(207,7,3)" fg:x="47637221822" fg:w="29098658"/><text x="91.7742%" y="255.50"></text></g><g><title>__rust_alloc (8,314,001 samples, 0.02%)</title><rect x="91.5960%" y="277" width="0.0160%" height="15" fill="rgb(206,98,19)" fg:x="47674626358" fg:w="8314001"/><text x="91.8460%" y="287.50"></text></g><g><title>_int_free (20,386,459 samples, 0.04%)</title><rect x="91.6837%" y="245" width="0.0392%" height="15" fill="rgb(217,5,26)" fg:x="47720275584" fg:w="20386459"/><text x="91.9337%" y="255.50"></text></g><g><title>__GI___libc_free (66,114,462 samples, 0.13%)</title><rect x="91.6598%" y="261" width="0.1270%" height="15" fill="rgb(235,190,38)" fg:x="47707849361" fg:w="66114462"/><text x="91.9098%" y="271.50"></text></g><g><title>_int_free_merge_chunk (33,301,780 samples, 0.06%)</title><rect x="91.7229%" y="245" width="0.0640%" height="15" fill="rgb(247,86,24)" fg:x="47740662043" fg:w="33301780"/><text x="91.9729%" y="255.50"></text></g><g><title>_int_free_create_chunk (16,665,307 samples, 0.03%)</title><rect x="91.7549%" y="229" width="0.0320%" height="15" fill="rgb(205,101,16)" fg:x="47757298516" fg:w="16665307"/><text x="92.0049%" y="239.50"></text></g><g><title>unlink_chunk (8,346,637 samples, 0.02%)</title><rect x="91.7708%" y="213" width="0.0160%" height="15" fill="rgb(246,168,33)" fg:x="47765617186" fg:w="8346637"/><text x="92.0208%" y="223.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h9f7b29ce195bd27dE.llvm.4780643635171514031 (14,604,700,445 samples, 28.06%)</title><rect x="71.7308%" y="293" width="28.0596%" height="15" fill="rgb(231,114,1)" fg:x="37335019219" fg:w="14604700445"/><text x="71.9808%" y="303.50">_ZN7lb_apis14del_pol_single16DelegatingPolicy..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4,252,644,103 samples, 8.17%)</title><rect x="91.6199%" y="277" width="8.1705%" height="15" fill="rgb(207,184,53)" fg:x="47687075561" fg:w="4252644103"/><text x="91.8699%" y="287.50">alloc::sync..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::RRPickerPicker&gt; (4,165,755,841 samples, 8.00%)</title><rect x="91.7869%" y="261" width="8.0036%" height="15" fill="rgb(224,95,51)" fg:x="47773963823" fg:w="4165755841"/><text x="92.0369%" y="271.50">core::ptr::..</text></g><g><title>rand::rng::Rng::gen_range (37,403,687 samples, 0.07%)</title><rect x="99.7904%" y="293" width="0.0719%" height="15" fill="rgb(212,188,45)" fg:x="51939719664" fg:w="37403687"/><text x="100.0404%" y="303.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (12,474,749 samples, 0.02%)</title><rect x="99.8383%" y="277" width="0.0240%" height="15" fill="rgb(223,154,38)" fg:x="51964648602" fg:w="12474749"/><text x="100.0883%" y="287.50"></text></g><g><title>bencher::Bencher::iter (16,391,380,219 samples, 31.49%)</title><rect x="68.4257%" y="309" width="31.4923%" height="15" fill="rgb(251,22,52)" fg:x="35614764537" fg:w="16391380219"/><text x="68.6757%" y="319.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (24,865,196 samples, 0.05%)</title><rect x="99.8703%" y="293" width="0.0478%" height="15" fill="rgb(229,209,22)" fg:x="51981279560" fg:w="24865196"/><text x="100.1203%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,263,348 samples, 0.02%)</title><rect x="99.9181%" y="293" width="0.0159%" height="15" fill="rgb(234,138,34)" fg:x="52006144756" fg:w="8263348"/><text x="100.1681%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,448,350 samples, 0.02%)</title><rect x="99.9339%" y="277" width="0.0239%" height="15" fill="rgb(212,95,11)" fg:x="52014408104" fg:w="12448350"/><text x="100.1839%" y="287.50"></text></g><g><title>__GI___libc_free (16,604,301 samples, 0.03%)</title><rect x="99.9578%" y="277" width="0.0319%" height="15" fill="rgb(240,179,47)" fg:x="52026856454" fg:w="16604301"/><text x="100.2078%" y="287.50"></text></g><g><title>_int_free (8,303,460 samples, 0.02%)</title><rect x="99.9738%" y="261" width="0.0160%" height="15" fill="rgb(240,163,11)" fg:x="52035157295" fg:w="8303460"/><text x="100.2238%" y="271.50"></text></g><g><title>__libc_start_main_impl (52,035,476,526 samples, 99.97%)</title><rect x="0.0233%" y="469" width="99.9744%" height="15" fill="rgb(236,37,12)" fg:x="12119651" fg:w="52035476526"/><text x="0.2733%" y="479.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (52,035,476,526 samples, 99.97%)</title><rect x="0.0233%" y="453" width="99.9744%" height="15" fill="rgb(232,164,16)" fg:x="12119651" fg:w="52035476526"/><text x="0.2733%" y="463.50">__libc_start_call_main</text></g><g><title>main (52,035,476,526 samples, 99.97%)</title><rect x="0.0233%" y="437" width="99.9744%" height="15" fill="rgb(244,205,15)" fg:x="12119651" fg:w="52035476526"/><text x="0.2733%" y="447.50">main</text></g><g><title>std::rt::lang_start_internal (52,035,476,526 samples, 99.97%)</title><rect x="0.0233%" y="421" width="99.9744%" height="15" fill="rgb(223,117,47)" fg:x="12119651" fg:w="52035476526"/><text x="0.2733%" y="431.50">std::rt::lang_start_internal</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha3c3a5ccd7c12df4E.llvm.4008388692433172374 (52,035,476,526 samples, 99.97%)</title><rect x="0.0233%" y="405" width="99.9744%" height="15" fill="rgb(244,107,35)" fg:x="12119651" fg:w="52035476526"/><text x="0.2733%" y="415.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha3c3a5ccd7c12df4E.llvm.4008388692433172374</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (52,035,476,526 samples, 99.97%)</title><rect x="0.0233%" y="389" width="99.9744%" height="15" fill="rgb(205,140,8)" fg:x="12119651" fg:w="52035476526"/><text x="0.2733%" y="399.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lb_apis::main (52,035,476,526 samples, 99.97%)</title><rect x="0.0233%" y="373" width="99.9744%" height="15" fill="rgb(228,84,46)" fg:x="12119651" fg:w="52035476526"/><text x="0.2733%" y="383.50">lb_apis::main</text></g><g><title>bencher::run_tests_console (52,035,476,526 samples, 99.97%)</title><rect x="0.0233%" y="357" width="99.9744%" height="15" fill="rgb(254,188,9)" fg:x="12119651" fg:w="52035476526"/><text x="0.2733%" y="367.50">bencher::run_tests_console</text></g><g><title>bencher::Bencher::auto_bench (52,035,476,526 samples, 99.97%)</title><rect x="0.0233%" y="341" width="99.9744%" height="15" fill="rgb(206,112,54)" fg:x="12119651" fg:w="52035476526"/><text x="0.2733%" y="351.50">bencher::Bencher::auto_bench</text></g><g><title>lb_apis::single (16,910,212,061 samples, 32.49%)</title><rect x="67.5085%" y="325" width="32.4891%" height="15" fill="rgb(216,84,49)" fg:x="35137384116" fg:w="16910212061"/><text x="67.7585%" y="335.50">lb_apis::single</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::DelegatingPolicy&gt; (41,451,421 samples, 0.08%)</title><rect x="99.9181%" y="309" width="0.0796%" height="15" fill="rgb(214,194,35)" fg:x="52006144756" fg:w="41451421"/><text x="100.1681%" y="319.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h6fd88c756eedc8fdE.llvm.13391218907786022700 (33,188,073 samples, 0.06%)</title><rect x="99.9339%" y="293" width="0.0638%" height="15" fill="rgb(249,28,3)" fg:x="52014408104" fg:w="33188073"/><text x="100.1839%" y="303.50"></text></g><g><title>all (52,048,798,738 samples, 100%)</title><rect x="0.0000%" y="517" width="100.0000%" height="15" fill="rgb(222,56,52)" fg:x="0" fg:w="52048798738"/><text x="0.2500%" y="527.50"></text></g><g><title>lb_apis-7aa6005 (52,048,798,738 samples, 100.00%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(245,217,50)" fg:x="0" fg:w="52048798738"/><text x="0.2500%" y="511.50">lb_apis-7aa6005</text></g><g><title>_start (52,036,679,088 samples, 99.98%)</title><rect x="0.0233%" y="485" width="99.9767%" height="15" fill="rgb(213,201,24)" fg:x="12119650" fg:w="52036679088"/><text x="0.2733%" y="495.50">_start</text></g></svg></svg>