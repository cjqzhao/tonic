<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="438" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="421.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="421.00"> </text><svg id="frames" x="10" width="1180" total_samples="64723410737"><g><title>__GI___libc_malloc (96,620,400 samples, 0.15%)</title><rect x="0.2286%" y="117" width="0.1493%" height="15" fill="rgb(227,0,7)" fg:x="147941800" fg:w="96620400"/><text x="0.4786%" y="127.50"></text></g><g><title>_int_malloc (92,384,154 samples, 0.14%)</title><rect x="0.2351%" y="101" width="0.1427%" height="15" fill="rgb(217,0,24)" fg:x="152178046" fg:w="92384154"/><text x="0.4851%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12,656,282 samples, 0.02%)</title><rect x="0.3844%" y="117" width="0.0196%" height="15" fill="rgb(221,193,54)" fg:x="248793517" fg:w="12656282"/><text x="0.6344%" y="127.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (12,656,282 samples, 0.02%)</title><rect x="0.3844%" y="101" width="0.0196%" height="15" fill="rgb(248,212,6)" fg:x="248793517" fg:w="12656282"/><text x="0.6344%" y="111.50"></text></g><g><title>__GI___libc_realloc (12,656,282 samples, 0.02%)</title><rect x="0.3844%" y="85" width="0.0196%" height="15" fill="rgb(208,68,35)" fg:x="248793517" fg:w="12656282"/><text x="0.6344%" y="95.50"></text></g><g><title>_int_realloc (12,656,282 samples, 0.02%)</title><rect x="0.3844%" y="69" width="0.0196%" height="15" fill="rgb(232,128,0)" fg:x="248793517" fg:w="12656282"/><text x="0.6344%" y="79.50"></text></g><g><title>_int_malloc (8,429,305 samples, 0.01%)</title><rect x="0.3909%" y="53" width="0.0130%" height="15" fill="rgb(207,160,47)" fg:x="253020494" fg:w="8429305"/><text x="0.6409%" y="63.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (159,736,567 samples, 0.25%)</title><rect x="0.1702%" y="133" width="0.2468%" height="15" fill="rgb(228,23,34)" fg:x="110139548" fg:w="159736567"/><text x="0.4202%" y="143.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (8,426,316 samples, 0.01%)</title><rect x="0.4039%" y="117" width="0.0130%" height="15" fill="rgb(218,30,26)" fg:x="261449799" fg:w="8426316"/><text x="0.6539%" y="127.50"></text></g><g><title>__GI___libc_realloc (21,030,447 samples, 0.03%)</title><rect x="0.4229%" y="101" width="0.0325%" height="15" fill="rgb(220,122,19)" fg:x="273739689" fg:w="21030447"/><text x="0.6729%" y="111.50"></text></g><g><title>_int_realloc (21,030,447 samples, 0.03%)</title><rect x="0.4229%" y="85" width="0.0325%" height="15" fill="rgb(250,228,42)" fg:x="273739689" fg:w="21030447"/><text x="0.6729%" y="95.50"></text></g><g><title>_int_malloc (16,826,705 samples, 0.03%)</title><rect x="0.4294%" y="69" width="0.0260%" height="15" fill="rgb(240,193,28)" fg:x="277943431" fg:w="16826705"/><text x="0.6794%" y="79.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (205,678,201 samples, 0.32%)</title><rect x="0.1442%" y="149" width="0.3178%" height="15" fill="rgb(216,20,37)" fg:x="93306969" fg:w="205678201"/><text x="0.3942%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (29,109,055 samples, 0.04%)</title><rect x="0.4170%" y="133" width="0.0450%" height="15" fill="rgb(206,188,39)" fg:x="269876115" fg:w="29109055"/><text x="0.6670%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (25,245,481 samples, 0.04%)</title><rect x="0.4229%" y="117" width="0.0390%" height="15" fill="rgb(217,207,13)" fg:x="273739689" fg:w="25245481"/><text x="0.6729%" y="127.50"></text></g><g><title>__GI___libc_free (29,473,774 samples, 0.05%)</title><rect x="0.4619%" y="149" width="0.0455%" height="15" fill="rgb(231,73,38)" fg:x="298985170" fg:w="29473774"/><text x="0.7119%" y="159.50"></text></g><g><title>_int_free (16,826,182 samples, 0.03%)</title><rect x="0.4815%" y="133" width="0.0260%" height="15" fill="rgb(225,20,46)" fg:x="311632762" fg:w="16826182"/><text x="0.7315%" y="143.50"></text></g><g><title>__rdl_dealloc (8,402,797 samples, 0.01%)</title><rect x="0.5075%" y="149" width="0.0130%" height="15" fill="rgb(210,31,41)" fg:x="328458944" fg:w="8402797"/><text x="0.7575%" y="159.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.7027266497679388191 (50,491,873 samples, 0.08%)</title><rect x="0.5725%" y="133" width="0.0780%" height="15" fill="rgb(221,200,47)" fg:x="370524286" fg:w="50491873"/><text x="0.8225%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,834,488 samples, 0.03%)</title><rect x="0.6245%" y="117" width="0.0260%" height="15" fill="rgb(226,26,5)" fg:x="404181671" fg:w="16834488"/><text x="0.8745%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (96,770,410 samples, 0.15%)</title><rect x="0.5270%" y="149" width="0.1495%" height="15" fill="rgb(249,33,26)" fg:x="341064256" fg:w="96770410"/><text x="0.7770%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,818,507 samples, 0.03%)</title><rect x="0.6505%" y="133" width="0.0260%" height="15" fill="rgb(235,183,28)" fg:x="421016159" fg:w="16818507"/><text x="0.9005%" y="143.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (395,009,602 samples, 0.61%)</title><rect x="0.0727%" y="165" width="0.6103%" height="15" fill="rgb(221,5,38)" fg:x="47048808" fg:w="395009602"/><text x="0.3227%" y="175.50"></text></g><g><title>alloc_perturb (8,426,584 samples, 0.01%)</title><rect x="0.8508%" y="85" width="0.0130%" height="15" fill="rgb(247,18,42)" fg:x="550640492" fg:w="8426584"/><text x="1.1008%" y="95.50"></text></g><g><title>__GI___libc_malloc (74,034,447 samples, 0.11%)</title><rect x="0.7559%" y="117" width="0.1144%" height="15" fill="rgb(241,131,45)" fg:x="489258877" fg:w="74034447"/><text x="1.0059%" y="127.50"></text></g><g><title>_int_malloc (61,388,136 samples, 0.09%)</title><rect x="0.7755%" y="101" width="0.0948%" height="15" fill="rgb(249,31,29)" fg:x="501905188" fg:w="61388136"/><text x="1.0255%" y="111.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16,813,862 samples, 0.03%)</title><rect x="0.8768%" y="117" width="0.0260%" height="15" fill="rgb(225,111,53)" fg:x="567521942" fg:w="16813862"/><text x="1.1268%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (103,415,901 samples, 0.16%)</title><rect x="0.7494%" y="133" width="0.1598%" height="15" fill="rgb(238,160,17)" fg:x="485045804" fg:w="103415901"/><text x="0.9994%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (154,824,681 samples, 0.24%)</title><rect x="0.6830%" y="149" width="0.2392%" height="15" fill="rgb(214,148,48)" fg:x="442058410" fg:w="154824681"/><text x="0.9330%" y="159.50"></text></g><g><title>__GI___libc_malloc (8,421,386 samples, 0.01%)</title><rect x="0.9092%" y="133" width="0.0130%" height="15" fill="rgb(232,36,49)" fg:x="588461705" fg:w="8421386"/><text x="1.1592%" y="143.50"></text></g><g><title>_int_malloc (8,421,386 samples, 0.01%)</title><rect x="0.9092%" y="117" width="0.0130%" height="15" fill="rgb(209,103,24)" fg:x="588461705" fg:w="8421386"/><text x="1.1592%" y="127.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h7d8f287740a6f638E.llvm.6127000297180534061 (171,676,147 samples, 0.27%)</title><rect x="0.6830%" y="165" width="0.2652%" height="15" fill="rgb(229,88,8)" fg:x="442058410" fg:w="171676147"/><text x="0.9330%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (16,851,466 samples, 0.03%)</title><rect x="0.9222%" y="149" width="0.0260%" height="15" fill="rgb(213,181,19)" fg:x="596883091" fg:w="16851466"/><text x="1.1722%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (8,406,015 samples, 0.01%)</title><rect x="0.9353%" y="133" width="0.0130%" height="15" fill="rgb(254,191,54)" fg:x="605328542" fg:w="8406015"/><text x="1.1853%" y="143.50"></text></g><g><title>__GI___libc_malloc (8,406,015 samples, 0.01%)</title><rect x="0.9353%" y="117" width="0.0130%" height="15" fill="rgb(241,83,37)" fg:x="605328542" fg:w="8406015"/><text x="1.1853%" y="127.50"></text></g><g><title>__GI___libc_malloc (25,219,709 samples, 0.04%)</title><rect x="1.0911%" y="117" width="0.0390%" height="15" fill="rgb(233,36,39)" fg:x="706222709" fg:w="25219709"/><text x="1.3411%" y="127.50"></text></g><g><title>_int_malloc (25,219,709 samples, 0.04%)</title><rect x="1.0911%" y="101" width="0.0390%" height="15" fill="rgb(226,3,54)" fg:x="706222709" fg:w="25219709"/><text x="1.3411%" y="111.50"></text></g><g><title>malloc_consolidate (25,219,709 samples, 0.04%)</title><rect x="1.0911%" y="85" width="0.0390%" height="15" fill="rgb(245,192,40)" fg:x="706222709" fg:w="25219709"/><text x="1.3411%" y="95.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.7027266497679388191 (92,483,099 samples, 0.14%)</title><rect x="1.0327%" y="133" width="0.1429%" height="15" fill="rgb(238,167,29)" fg:x="668422922" fg:w="92483099"/><text x="1.2827%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (29,463,603 samples, 0.05%)</title><rect x="1.1301%" y="117" width="0.0455%" height="15" fill="rgb(232,182,51)" fg:x="731442418" fg:w="29463603"/><text x="1.3801%" y="127.50"></text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (155,513,940 samples, 0.24%)</title><rect x="0.9548%" y="165" width="0.2403%" height="15" fill="rgb(231,60,39)" fg:x="617954001" fg:w="155513940"/><text x="1.2048%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (155,513,940 samples, 0.24%)</title><rect x="0.9548%" y="149" width="0.2403%" height="15" fill="rgb(208,69,12)" fg:x="617954001" fg:w="155513940"/><text x="1.2048%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,561,920 samples, 0.02%)</title><rect x="1.1756%" y="133" width="0.0194%" height="15" fill="rgb(235,93,37)" fg:x="760906021" fg:w="12561920"/><text x="1.4256%" y="143.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (755,582,493 samples, 1.17%)</title><rect x="0.0597%" y="181" width="1.1674%" height="15" fill="rgb(213,116,39)" fg:x="38614188" fg:w="755582493"/><text x="0.3097%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (20,728,740 samples, 0.03%)</title><rect x="1.1950%" y="165" width="0.0320%" height="15" fill="rgb(222,207,29)" fg:x="773467941" fg:w="20728740"/><text x="1.4450%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,728,740 samples, 0.03%)</title><rect x="1.1950%" y="149" width="0.0320%" height="15" fill="rgb(206,96,30)" fg:x="773467941" fg:w="20728740"/><text x="1.4450%" y="159.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (20,728,740 samples, 0.03%)</title><rect x="1.1950%" y="133" width="0.0320%" height="15" fill="rgb(218,138,4)" fg:x="773467941" fg:w="20728740"/><text x="1.4450%" y="143.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.7022287322672284463 (20,728,740 samples, 0.03%)</title><rect x="1.1950%" y="117" width="0.0320%" height="15" fill="rgb(250,191,14)" fg:x="773467941" fg:w="20728740"/><text x="1.4450%" y="127.50"></text></g><g><title>_int_malloc (13,520,568 samples, 0.02%)</title><rect x="1.2462%" y="165" width="0.0209%" height="15" fill="rgb(239,60,40)" fg:x="806575820" fg:w="13520568"/><text x="1.4962%" y="175.50"></text></g><g><title>__GI___libc_malloc (30,098,588 samples, 0.05%)</title><rect x="1.2271%" y="181" width="0.0465%" height="15" fill="rgb(206,27,48)" fg:x="794196681" fg:w="30098588"/><text x="1.4771%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12,654,900 samples, 0.02%)</title><rect x="1.3437%" y="149" width="0.0196%" height="15" fill="rgb(225,35,8)" fg:x="869701571" fg:w="12654900"/><text x="1.5937%" y="159.50"></text></g><g><title>__memcpy_avx_unaligned (8,428,894 samples, 0.01%)</title><rect x="1.3893%" y="117" width="0.0130%" height="15" fill="rgb(250,213,24)" fg:x="899202269" fg:w="8428894"/><text x="1.6393%" y="127.50"></text></g><g><title>__GI___libc_malloc (46,280,007 samples, 0.07%)</title><rect x="1.4414%" y="85" width="0.0715%" height="15" fill="rgb(247,123,22)" fg:x="932903998" fg:w="46280007"/><text x="1.6914%" y="95.50"></text></g><g><title>_int_malloc (29,419,091 samples, 0.05%)</title><rect x="1.4674%" y="69" width="0.0455%" height="15" fill="rgb(231,138,38)" fg:x="949764914" fg:w="29419091"/><text x="1.7174%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (96,829,053 samples, 0.15%)</title><rect x="1.3698%" y="133" width="0.1496%" height="15" fill="rgb(231,145,46)" fg:x="886562093" fg:w="96829053"/><text x="1.6198%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (71,551,395 samples, 0.11%)</title><rect x="1.4088%" y="117" width="0.1105%" height="15" fill="rgb(251,118,11)" fg:x="911839751" fg:w="71551395"/><text x="1.6588%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (54,691,555 samples, 0.08%)</title><rect x="1.4349%" y="101" width="0.0845%" height="15" fill="rgb(217,147,25)" fg:x="928699591" fg:w="54691555"/><text x="1.6849%" y="111.50"></text></g><g><title>alloc::fmt::format::format_inner (175,939,266 samples, 0.27%)</title><rect x="1.2866%" y="181" width="0.2718%" height="15" fill="rgb(247,81,37)" fg:x="832733556" fg:w="175939266"/><text x="1.5366%" y="191.50"></text></g><g><title>core::fmt::write (167,516,108 samples, 0.26%)</title><rect x="1.2996%" y="165" width="0.2588%" height="15" fill="rgb(209,12,38)" fg:x="841156714" fg:w="167516108"/><text x="1.5496%" y="175.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (126,316,351 samples, 0.20%)</title><rect x="1.3633%" y="149" width="0.1952%" height="15" fill="rgb(227,1,9)" fg:x="882356471" fg:w="126316351"/><text x="1.6133%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral (25,281,676 samples, 0.04%)</title><rect x="1.5194%" y="133" width="0.0391%" height="15" fill="rgb(248,47,43)" fg:x="983391146" fg:w="25281676"/><text x="1.7694%" y="143.50"></text></g><g><title>__GI_memcpy (8,459,923 samples, 0.01%)</title><rect x="1.5975%" y="117" width="0.0131%" height="15" fill="rgb(221,10,30)" fg:x="1033976738" fg:w="8459923"/><text x="1.8475%" y="127.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,459,923 samples, 0.01%)</title><rect x="1.5975%" y="101" width="0.0131%" height="15" fill="rgb(210,229,1)" fg:x="1033976738" fg:w="8459923"/><text x="1.8475%" y="111.50"></text></g><g><title>__GI___libc_realloc (155,061,946 samples, 0.24%)</title><rect x="1.5714%" y="149" width="0.2396%" height="15" fill="rgb(222,148,37)" fg:x="1017087778" fg:w="155061946"/><text x="1.8214%" y="159.50"></text></g><g><title>_int_realloc (146,613,063 samples, 0.23%)</title><rect x="1.5845%" y="133" width="0.2265%" height="15" fill="rgb(234,67,33)" fg:x="1025536661" fg:w="146613063"/><text x="1.8345%" y="143.50"></text></g><g><title>_int_malloc (125,493,617 samples, 0.19%)</title><rect x="1.6171%" y="117" width="0.1939%" height="15" fill="rgb(247,98,35)" fg:x="1046656107" fg:w="125493617"/><text x="1.8671%" y="127.50"></text></g><g><title>malloc_consolidate (100,496,531 samples, 0.16%)</title><rect x="1.6557%" y="101" width="0.1553%" height="15" fill="rgb(247,138,52)" fg:x="1071653193" fg:w="100496531"/><text x="1.9057%" y="111.50"></text></g><g><title>unlink_chunk (24,671,456 samples, 0.04%)</title><rect x="1.7729%" y="85" width="0.0381%" height="15" fill="rgb(213,79,30)" fg:x="1147478268" fg:w="24671456"/><text x="2.0229%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (171,772,828 samples, 0.27%)</title><rect x="1.5584%" y="181" width="0.2654%" height="15" fill="rgb(246,177,23)" fg:x="1008672822" fg:w="171772828"/><text x="1.8084%" y="191.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (167,581,106 samples, 0.26%)</title><rect x="1.5649%" y="165" width="0.2589%" height="15" fill="rgb(230,62,27)" fg:x="1012864544" fg:w="167581106"/><text x="1.8149%" y="175.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (227,715,419 samples, 0.35%)</title><rect x="8.5547%" y="133" width="0.3518%" height="15" fill="rgb(216,154,8)" fg:x="5536914066" fg:w="227715419"/><text x="8.8047%" y="143.50"></text></g><g><title>__GI___libc_malloc (67,434,088 samples, 0.10%)</title><rect x="8.9066%" y="133" width="0.1042%" height="15" fill="rgb(244,35,45)" fg:x="5764629485" fg:w="67434088"/><text x="9.1566%" y="143.50"></text></g><g><title>tcache_get (16,889,357 samples, 0.03%)</title><rect x="8.9847%" y="117" width="0.0261%" height="15" fill="rgb(251,115,12)" fg:x="5815174216" fg:w="16889357"/><text x="9.2347%" y="127.50"></text></g><g><title>tcache_get_n (16,889,357 samples, 0.03%)</title><rect x="8.9847%" y="101" width="0.0261%" height="15" fill="rgb(240,54,50)" fg:x="5815174216" fg:w="16889357"/><text x="9.2347%" y="111.50"></text></g><g><title>__rdl_alloc (12,655,532 samples, 0.02%)</title><rect x="9.0107%" y="133" width="0.0196%" height="15" fill="rgb(233,84,52)" fg:x="5832063573" fg:w="12655532"/><text x="9.2607%" y="143.50"></text></g><g><title>__rust_alloc (8,441,239 samples, 0.01%)</title><rect x="9.0303%" y="133" width="0.0130%" height="15" fill="rgb(207,117,47)" fg:x="5844719105" fg:w="8441239"/><text x="9.2803%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (674,806,845 samples, 1.04%)</title><rect x="9.0433%" y="133" width="1.0426%" height="15" fill="rgb(249,43,39)" fg:x="5853160344" fg:w="674806845"/><text x="9.2933%" y="143.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (109,634,897 samples, 0.17%)</title><rect x="9.9166%" y="117" width="0.1694%" height="15" fill="rgb(209,38,44)" fg:x="6418332292" fg:w="109634897"/><text x="10.1666%" y="127.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (4,334,718,128 samples, 6.70%)</title><rect x="3.4604%" y="149" width="6.6973%" height="15" fill="rgb(236,212,23)" fg:x="2239718525" fg:w="4334718128"/><text x="3.7104%" y="159.50">&lt;lb_apis:..</text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::iter (46,469,464 samples, 0.07%)</title><rect x="10.0859%" y="133" width="0.0718%" height="15" fill="rgb(242,79,21)" fg:x="6527967189" fg:w="46469464"/><text x="10.3359%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (223,590,754 samples, 0.35%)</title><rect x="10.1577%" y="149" width="0.3455%" height="15" fill="rgb(211,96,35)" fg:x="6574436653" fg:w="223590754"/><text x="10.4077%" y="159.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (25,303,854 samples, 0.04%)</title><rect x="10.4641%" y="133" width="0.0391%" height="15" fill="rgb(253,215,40)" fg:x="6772723553" fg:w="25303854"/><text x="10.7141%" y="143.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (71,548,488 samples, 0.11%)</title><rect x="10.7638%" y="133" width="0.1105%" height="15" fill="rgb(211,81,21)" fg:x="6966716920" fg:w="71548488"/><text x="11.0138%" y="143.50"></text></g><g><title>__GI___libc_free (101,194,239 samples, 0.16%)</title><rect x="10.8744%" y="133" width="0.1563%" height="15" fill="rgb(208,190,38)" fg:x="7038265408" fg:w="101194239"/><text x="11.1244%" y="143.50"></text></g><g><title>_int_free (67,562,401 samples, 0.10%)</title><rect x="10.9263%" y="117" width="0.1044%" height="15" fill="rgb(235,213,38)" fg:x="7071897246" fg:w="67562401"/><text x="11.1763%" y="127.50"></text></g><g><title>tcache_put (21,099,111 samples, 0.03%)</title><rect x="10.9981%" y="101" width="0.0326%" height="15" fill="rgb(237,122,38)" fg:x="7118360536" fg:w="21099111"/><text x="11.2481%" y="111.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (5,556,952,503 samples, 8.59%)</title><rect x="2.6643%" y="165" width="8.5857%" height="15" fill="rgb(244,218,35)" fg:x="1724438263" fg:w="5556952503"/><text x="2.9143%" y="175.50">&lt;grpc::clien..</text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (483,363,359 samples, 0.75%)</title><rect x="10.5032%" y="149" width="0.7468%" height="15" fill="rgb(240,68,47)" fg:x="6798027407" fg:w="483363359"/><text x="10.7532%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (137,708,013 samples, 0.21%)</title><rect x="11.0372%" y="133" width="0.2128%" height="15" fill="rgb(210,16,53)" fg:x="7143682753" fg:w="137708013"/><text x="11.2872%" y="143.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (218,706,061 samples, 0.34%)</title><rect x="11.2500%" y="165" width="0.3379%" height="15" fill="rgb(235,124,12)" fg:x="7281390766" fg:w="218706061"/><text x="11.5000%" y="175.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (101,320,327 samples, 0.16%)</title><rect x="11.5879%" y="165" width="0.1565%" height="15" fill="rgb(224,169,11)" fg:x="7500096827" fg:w="101320327"/><text x="11.8379%" y="175.50"></text></g><g><title>__GI___libc_malloc (21,083,206 samples, 0.03%)</title><rect x="22.6126%" y="133" width="0.0326%" height="15" fill="rgb(250,166,2)" fg:x="14635653619" fg:w="21083206"/><text x="22.8626%" y="143.50"></text></g><g><title>__memcpy_avx_unaligned (50,648,628 samples, 0.08%)</title><rect x="23.7458%" y="53" width="0.0783%" height="15" fill="rgb(242,216,29)" fg:x="15369108757" fg:w="50648628"/><text x="23.9958%" y="63.50"></text></g><g><title>__GI_memcpy (611,972,292 samples, 0.95%)</title><rect x="23.7197%" y="69" width="0.9455%" height="15" fill="rgb(230,116,27)" fg:x="15352200607" fg:w="611972292"/><text x="23.9697%" y="79.50"></text></g><g><title>__memcpy_avx_unaligned_erms (544,415,514 samples, 0.84%)</title><rect x="23.8241%" y="53" width="0.8411%" height="15" fill="rgb(228,99,48)" fg:x="15419757385" fg:w="544415514"/><text x="24.0741%" y="63.50"></text></g><g><title>_int_free (75,980,190 samples, 0.12%)</title><rect x="24.6652%" y="69" width="0.1174%" height="15" fill="rgb(253,11,6)" fg:x="15964172899" fg:w="75980190"/><text x="24.9152%" y="79.50"></text></g><g><title>_int_free_create_chunk (199,991,574 samples, 0.31%)</title><rect x="24.9260%" y="53" width="0.3090%" height="15" fill="rgb(247,143,39)" fg:x="16132939905" fg:w="199991574"/><text x="25.1760%" y="63.50"></text></g><g><title>unlink_chunk (75,883,706 samples, 0.12%)</title><rect x="25.1177%" y="37" width="0.1172%" height="15" fill="rgb(236,97,10)" fg:x="16257047773" fg:w="75883706"/><text x="25.3677%" y="47.50"></text></g><g><title>_int_free_merge_chunk (301,219,228 samples, 0.47%)</title><rect x="24.7826%" y="69" width="0.4654%" height="15" fill="rgb(233,208,19)" fg:x="16040153089" fg:w="301219228"/><text x="25.0326%" y="79.50"></text></g><g><title>alloc_perturb (16,912,414 samples, 0.03%)</title><rect x="26.2395%" y="53" width="0.0261%" height="15" fill="rgb(216,164,2)" fg:x="16983104541" fg:w="16912414"/><text x="26.4895%" y="63.50"></text></g><g><title>checked_request2size (8,408,786 samples, 0.01%)</title><rect x="26.2656%" y="53" width="0.0130%" height="15" fill="rgb(220,129,5)" fg:x="17000016955" fg:w="8408786"/><text x="26.5156%" y="63.50"></text></g><g><title>malloc_consolidate (46,453,459 samples, 0.07%)</title><rect x="26.2786%" y="53" width="0.0718%" height="15" fill="rgb(242,17,10)" fg:x="17008425741" fg:w="46453459"/><text x="26.5286%" y="63.50"></text></g><g><title>_int_realloc (1,934,805,960 samples, 2.99%)</title><rect x="23.5240%" y="85" width="2.9893%" height="15" fill="rgb(242,107,0)" fg:x="15225522498" fg:w="1934805960"/><text x="23.7740%" y="95.50">_in..</text></g><g><title>_int_malloc (818,956,141 samples, 1.27%)</title><rect x="25.2480%" y="69" width="1.2653%" height="15" fill="rgb(251,28,31)" fg:x="16341372317" fg:w="818956141"/><text x="25.4980%" y="79.50"></text></g><g><title>unlink_chunk (105,449,258 samples, 0.16%)</title><rect x="26.3504%" y="53" width="0.1629%" height="15" fill="rgb(233,223,10)" fg:x="17054879200" fg:w="105449258"/><text x="26.6004%" y="63.50"></text></g><g><title>__GI___libc_realloc (2,116,374,803 samples, 3.27%)</title><rect x="23.2695%" y="101" width="3.2699%" height="15" fill="rgb(215,21,27)" fg:x="15060839367" fg:w="2116374803"/><text x="23.5195%" y="111.50">__G..</text></g><g><title>musable (12,661,868 samples, 0.02%)</title><rect x="26.5199%" y="85" width="0.0196%" height="15" fill="rgb(232,23,21)" fg:x="17164552302" fg:w="12661868"/><text x="26.7699%" y="95.50"></text></g><g><title>__rdl_realloc (59,087,483 samples, 0.09%)</title><rect x="26.5394%" y="101" width="0.0913%" height="15" fill="rgb(244,5,23)" fg:x="17177214170" fg:w="59087483"/><text x="26.7894%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7,296,263,063 samples, 11.27%)</title><rect x="15.3773%" y="149" width="11.2730%" height="15" fill="rgb(226,81,46)" fg:x="9952711466" fg:w="7296263063"/><text x="15.6273%" y="159.50">&lt;alloc::vec::Vec&lt;..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,588,012,475 samples, 4.00%)</title><rect x="22.6517%" y="133" width="3.9986%" height="15" fill="rgb(247,70,30)" fg:x="14660962054" fg:w="2588012475"/><text x="22.9017%" y="143.50">allo..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (2,393,874,525 samples, 3.70%)</title><rect x="22.9517%" y="117" width="3.6986%" height="15" fill="rgb(212,68,19)" fg:x="14855100004" fg:w="2393874525"/><text x="23.2017%" y="127.50">_ZN5..</text></g><g><title>__rust_realloc (12,672,876 samples, 0.02%)</title><rect x="26.6307%" y="101" width="0.0196%" height="15" fill="rgb(240,187,13)" fg:x="17236301653" fg:w="12672876"/><text x="26.8807%" y="111.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (25,281,419 samples, 0.04%)</title><rect x="26.6503%" y="149" width="0.0391%" height="15" fill="rgb(223,113,26)" fg:x="17248974529" fg:w="25281419"/><text x="26.9003%" y="159.50"></text></g><g><title>_int_free (42,155,701 samples, 0.07%)</title><rect x="26.7220%" y="133" width="0.0651%" height="15" fill="rgb(206,192,2)" fg:x="17295364801" fg:w="42155701"/><text x="26.9720%" y="143.50"></text></g><g><title>_int_free_create_chunk (54,868,577 samples, 0.08%)</title><rect x="26.8197%" y="117" width="0.0848%" height="15" fill="rgb(241,108,4)" fg:x="17358633297" fg:w="54868577"/><text x="27.0697%" y="127.50"></text></g><g><title>unlink_chunk (29,554,103 samples, 0.05%)</title><rect x="26.8588%" y="101" width="0.0457%" height="15" fill="rgb(247,173,49)" fg:x="17383947771" fg:w="29554103"/><text x="27.1088%" y="111.50"></text></g><g><title>__GI___libc_free (143,465,752 samples, 0.22%)</title><rect x="26.6893%" y="149" width="0.2217%" height="15" fill="rgb(224,114,35)" fg:x="17274255948" fg:w="143465752"/><text x="26.9393%" y="159.50"></text></g><g><title>_int_free_merge_chunk (80,201,198 samples, 0.12%)</title><rect x="26.7871%" y="133" width="0.1239%" height="15" fill="rgb(245,159,27)" fg:x="17337520502" fg:w="80201198"/><text x="27.0371%" y="143.50"></text></g><g><title>malloc_consolidate (80,152,678 samples, 0.12%)</title><rect x="27.4457%" y="117" width="0.1238%" height="15" fill="rgb(245,172,44)" fg:x="17763779803" fg:w="80152678"/><text x="27.6957%" y="127.50"></text></g><g><title>_int_malloc (426,075,929 samples, 0.66%)</title><rect x="26.9698%" y="133" width="0.6583%" height="15" fill="rgb(236,23,11)" fg:x="17455761177" fg:w="426075929"/><text x="27.2198%" y="143.50"></text></g><g><title>unlink_chunk (37,904,625 samples, 0.06%)</title><rect x="27.5695%" y="117" width="0.0586%" height="15" fill="rgb(205,117,38)" fg:x="17843932481" fg:w="37904625"/><text x="27.8195%" y="127.50"></text></g><g><title>__GI___libc_malloc (468,349,308 samples, 0.72%)</title><rect x="26.9110%" y="149" width="0.7236%" height="15" fill="rgb(237,72,25)" fg:x="17417721700" fg:w="468349308"/><text x="27.1610%" y="159.50"></text></g><g><title>__rdl_alloc (12,640,534 samples, 0.02%)</title><rect x="27.6346%" y="149" width="0.0195%" height="15" fill="rgb(244,70,9)" fg:x="17886071008" fg:w="12640534"/><text x="27.8846%" y="159.50"></text></g><g><title>__rdl_dealloc (12,686,815 samples, 0.02%)</title><rect x="27.6542%" y="149" width="0.0196%" height="15" fill="rgb(217,125,39)" fg:x="17898711542" fg:w="12686815"/><text x="27.9042%" y="159.50"></text></g><g><title>__rust_alloc (21,092,786 samples, 0.03%)</title><rect x="27.6738%" y="149" width="0.0326%" height="15" fill="rgb(235,36,10)" fg:x="17911398357" fg:w="21092786"/><text x="27.9238%" y="159.50"></text></g><g><title>__rust_dealloc (12,647,043 samples, 0.02%)</title><rect x="27.7063%" y="149" width="0.0195%" height="15" fill="rgb(251,123,47)" fg:x="17932491143" fg:w="12647043"/><text x="27.9563%" y="159.50"></text></g><g><title>_int_free (16,890,319 samples, 0.03%)</title><rect x="27.7519%" y="117" width="0.0261%" height="15" fill="rgb(221,13,13)" fg:x="17961993099" fg:w="16890319"/><text x="28.0019%" y="127.50"></text></g><g><title>__GI___libc_free (38,020,093 samples, 0.06%)</title><rect x="27.7454%" y="133" width="0.0587%" height="15" fill="rgb(238,131,9)" fg:x="17957772883" fg:w="38020093"/><text x="27.9954%" y="143.50"></text></g><g><title>_int_free_merge_chunk (16,909,558 samples, 0.03%)</title><rect x="27.7780%" y="117" width="0.0261%" height="15" fill="rgb(211,50,8)" fg:x="17978883418" fg:w="16909558"/><text x="28.0280%" y="127.50"></text></g><g><title>_int_free_create_chunk (8,452,472 samples, 0.01%)</title><rect x="27.7911%" y="101" width="0.0131%" height="15" fill="rgb(245,182,24)" fg:x="17987340504" fg:w="8452472"/><text x="28.0411%" y="111.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h8e0f56f6ac8014d1E.llvm.6127000297180534061 (14,400,216,330 samples, 22.25%)</title><rect x="11.7510%" y="165" width="22.2489%" height="15" fill="rgb(242,14,37)" fg:x="7605649888" fg:w="14400216330"/><text x="12.0010%" y="175.50">_ZN7lb_apis15del_pol_batched16Deleg..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4,060,728,032 samples, 6.27%)</title><rect x="27.7259%" y="149" width="6.2740%" height="15" fill="rgb(246,228,12)" fg:x="17945138186" fg:w="4060728032"/><text x="27.9759%" y="159.50">alloc::s..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::RRPickerPicker&gt; (4,010,073,242 samples, 6.20%)</title><rect x="27.8041%" y="133" width="6.1957%" height="15" fill="rgb(213,55,15)" fg:x="17995792976" fg:w="4010073242"/><text x="28.0541%" y="143.50">core::pt..</text></g><g><title>__GI___libc_free (25,256,297 samples, 0.04%)</title><rect x="33.9999%" y="165" width="0.0390%" height="15" fill="rgb(209,9,3)" fg:x="22005866218" fg:w="25256297"/><text x="34.2499%" y="175.50"></text></g><g><title>_int_free (25,256,297 samples, 0.04%)</title><rect x="33.9999%" y="149" width="0.0390%" height="15" fill="rgb(230,59,30)" fg:x="22005866218" fg:w="25256297"/><text x="34.2499%" y="159.50"></text></g><g><title>__GI___libc_malloc (46,352,755 samples, 0.07%)</title><rect x="34.9324%" y="117" width="0.0716%" height="15" fill="rgb(209,121,21)" fg:x="22609446104" fg:w="46352755"/><text x="35.1824%" y="127.50"></text></g><g><title>tcache_get (12,641,505 samples, 0.02%)</title><rect x="34.9845%" y="101" width="0.0195%" height="15" fill="rgb(220,109,13)" fg:x="22643157354" fg:w="12641505"/><text x="35.2345%" y="111.50"></text></g><g><title>tcache_get_n (12,641,505 samples, 0.02%)</title><rect x="34.9845%" y="85" width="0.0195%" height="15" fill="rgb(232,18,1)" fg:x="22643157354" fg:w="12641505"/><text x="35.2345%" y="95.50"></text></g><g><title>__memset_avx2_unaligned (12,650,964 samples, 0.02%)</title><rect x="35.0040%" y="117" width="0.0195%" height="15" fill="rgb(215,41,42)" fg:x="22655798859" fg:w="12650964"/><text x="35.2540%" y="127.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h495a2cfee390e142E.llvm.2064171167310178009 (109,670,766 samples, 0.17%)</title><rect x="34.8672%" y="133" width="0.1694%" height="15" fill="rgb(224,123,36)" fg:x="22567221622" fg:w="109670766"/><text x="35.1172%" y="143.50"></text></g><g><title>__rust_alloc (8,442,565 samples, 0.01%)</title><rect x="35.0236%" y="117" width="0.0130%" height="15" fill="rgb(240,125,3)" fg:x="22668449823" fg:w="8442565"/><text x="35.2736%" y="127.50"></text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::set (759,782,995 samples, 1.17%)</title><rect x="34.0454%" y="165" width="1.1739%" height="15" fill="rgb(205,98,50)" fg:x="22035347443" fg:w="759782995"/><text x="34.2954%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (624,732,306 samples, 0.97%)</title><rect x="34.2541%" y="149" width="0.9652%" height="15" fill="rgb(205,185,37)" fg:x="22170398132" fg:w="624732306"/><text x="34.5041%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (118,238,050 samples, 0.18%)</title><rect x="35.0366%" y="133" width="0.1827%" height="15" fill="rgb(238,207,15)" fg:x="22676892388" fg:w="118238050"/><text x="35.2866%" y="143.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h9606873de48317d2E.llvm.247025227557853271 (12,663,887 samples, 0.02%)</title><rect x="35.1997%" y="117" width="0.0196%" height="15" fill="rgb(213,199,42)" fg:x="22782466551" fg:w="12663887"/><text x="35.4497%" y="127.50"></text></g><g><title>_ZN4rand4rngs7adapter9reseeding29ReseedingCore$LT$R$C$Rsdr$GT$19reseed_and_generate17hb4a9559b6e1e17f5E.llvm.12560045689611519714 (8,436,375 samples, 0.01%)</title><rect x="35.3366%" y="149" width="0.0130%" height="15" fill="rgb(235,201,11)" fg:x="22871084553" fg:w="8436375"/><text x="35.5866%" y="159.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (8,436,375 samples, 0.01%)</title><rect x="35.3366%" y="133" width="0.0130%" height="15" fill="rgb(207,46,11)" fg:x="22871084553" fg:w="8436375"/><text x="35.5866%" y="143.50"></text></g><g><title>getrandom::imp::getrandom_inner (8,436,375 samples, 0.01%)</title><rect x="35.3366%" y="117" width="0.0130%" height="15" fill="rgb(241,35,35)" fg:x="22871084553" fg:w="8436375"/><text x="35.5866%" y="127.50"></text></g><g><title>syscall (8,436,375 samples, 0.01%)</title><rect x="35.3366%" y="101" width="0.0130%" height="15" fill="rgb(243,32,47)" fg:x="22871084553" fg:w="8436375"/><text x="35.5866%" y="111.50"></text></g><g><title>[unknown] (8,436,375 samples, 0.01%)</title><rect x="35.3366%" y="85" width="0.0130%" height="15" fill="rgb(247,202,23)" fg:x="22871084553" fg:w="8436375"/><text x="35.5866%" y="95.50"></text></g><g><title>[unknown] (8,436,375 samples, 0.01%)</title><rect x="35.3366%" y="69" width="0.0130%" height="15" fill="rgb(219,102,11)" fg:x="22871084553" fg:w="8436375"/><text x="35.5866%" y="79.50"></text></g><g><title>rand::rng::Rng::gen_range (164,664,873 samples, 0.25%)</title><rect x="35.2193%" y="165" width="0.2544%" height="15" fill="rgb(243,110,44)" fg:x="22795130438" fg:w="164664873"/><text x="35.4693%" y="175.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (76,045,273 samples, 0.12%)</title><rect x="35.3562%" y="149" width="0.1175%" height="15" fill="rgb(222,74,54)" fg:x="22883750038" fg:w="76045273"/><text x="35.6062%" y="159.50"></text></g><g><title>bencher::Bencher::iter (21,842,592,499 samples, 33.75%)</title><rect x="1.8238%" y="181" width="33.7476%" height="15" fill="rgb(216,99,12)" fg:x="1180445650" fg:w="21842592499"/><text x="2.0738%" y="191.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (63,242,838 samples, 0.10%)</title><rect x="35.4737%" y="165" width="0.0977%" height="15" fill="rgb(226,22,26)" fg:x="22959795311" fg:w="63242838"/><text x="35.7237%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,874,557 samples, 0.03%)</title><rect x="35.5909%" y="149" width="0.0261%" height="15" fill="rgb(217,163,10)" fg:x="23035661790" fg:w="16874557"/><text x="35.8409%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8,433,501 samples, 0.01%)</title><rect x="35.6040%" y="133" width="0.0130%" height="15" fill="rgb(213,25,53)" fg:x="23044102846" fg:w="8433501"/><text x="35.8540%" y="143.50"></text></g><g><title>_int_free (34,415,334 samples, 0.05%)</title><rect x="35.6301%" y="133" width="0.0532%" height="15" fill="rgb(252,105,26)" fg:x="23060991297" fg:w="34415334"/><text x="35.8801%" y="143.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.13988653600275597160 (72,356,122 samples, 0.11%)</title><rect x="35.5779%" y="165" width="0.1118%" height="15" fill="rgb(220,39,43)" fg:x="23027249565" fg:w="72356122"/><text x="35.8279%" y="175.50"></text></g><g><title>__GI___libc_free (47,069,340 samples, 0.07%)</title><rect x="35.6170%" y="149" width="0.0727%" height="15" fill="rgb(229,68,48)" fg:x="23052536347" fg:w="47069340"/><text x="35.8670%" y="159.50"></text></g><g><title>lb_apis::batched (23,098,829,741 samples, 35.69%)</title><rect x="0.0077%" y="197" width="35.6885%" height="15" fill="rgb(252,8,32)" fg:x="4975195" fg:w="23098829741"/><text x="0.2577%" y="207.50">lb_apis::batched</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::DelegatingPolicy&gt; (80,766,787 samples, 0.12%)</title><rect x="35.5714%" y="181" width="0.1248%" height="15" fill="rgb(223,20,43)" fg:x="23023038149" fg:w="80766787"/><text x="35.8214%" y="191.50"></text></g><g><title>__GI___libc_malloc (33,781,504 samples, 0.05%)</title><rect x="35.8200%" y="101" width="0.0522%" height="15" fill="rgb(229,81,49)" fg:x="23183933505" fg:w="33781504"/><text x="36.0700%" y="111.50"></text></g><g><title>_int_malloc (33,781,504 samples, 0.05%)</title><rect x="35.8200%" y="85" width="0.0522%" height="15" fill="rgb(236,28,36)" fg:x="23183933505" fg:w="33781504"/><text x="36.0700%" y="95.50"></text></g><g><title>_ZN116_$LT$lb_apis..StubChannelControllerCallbacks$u20$as$u20$grpc..client..load_balancing..ChannelControllerCallbacks$GT$14new_subchannel17hcdcb3d6e4c734d49E.llvm.6492729238480973439 (67,507,574 samples, 0.10%)</title><rect x="35.7810%" y="117" width="0.1043%" height="15" fill="rgb(249,185,26)" fg:x="23158695087" fg:w="67507574"/><text x="36.0310%" y="127.50"></text></g><g><title>__GI___libc_malloc (8,382,540 samples, 0.01%)</title><rect x="35.8853%" y="117" width="0.0130%" height="15" fill="rgb(249,174,33)" fg:x="23226202661" fg:w="8382540"/><text x="36.1353%" y="127.50"></text></g><g><title>_int_malloc (8,382,540 samples, 0.01%)</title><rect x="35.8853%" y="101" width="0.0130%" height="15" fill="rgb(233,201,37)" fg:x="23226202661" fg:w="8382540"/><text x="36.1353%" y="111.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel (109,735,731 samples, 0.17%)</title><rect x="35.7484%" y="133" width="0.1695%" height="15" fill="rgb(221,78,26)" fg:x="23137601273" fg:w="109735731"/><text x="35.9984%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12,751,803 samples, 0.02%)</title><rect x="35.8983%" y="117" width="0.0197%" height="15" fill="rgb(250,127,30)" fg:x="23234585201" fg:w="12751803"/><text x="36.1483%" y="127.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (12,751,803 samples, 0.02%)</title><rect x="35.8983%" y="101" width="0.0197%" height="15" fill="rgb(230,49,44)" fg:x="23234585201" fg:w="12751803"/><text x="36.1483%" y="111.50"></text></g><g><title>__GI___libc_realloc (12,751,803 samples, 0.02%)</title><rect x="35.8983%" y="85" width="0.0197%" height="15" fill="rgb(229,67,23)" fg:x="23234585201" fg:w="12751803"/><text x="36.1483%" y="95.50"></text></g><g><title>_int_realloc (12,751,803 samples, 0.02%)</title><rect x="35.8983%" y="69" width="0.0197%" height="15" fill="rgb(249,83,47)" fg:x="23234585201" fg:w="12751803"/><text x="36.1483%" y="79.50"></text></g><g><title>_int_malloc (8,496,314 samples, 0.01%)</title><rect x="35.9048%" y="53" width="0.0131%" height="15" fill="rgb(215,43,3)" fg:x="23238840690" fg:w="8496314"/><text x="36.1548%" y="63.50"></text></g><g><title>__GI___libc_free (29,461,151 samples, 0.05%)</title><rect x="35.9180%" y="133" width="0.0455%" height="15" fill="rgb(238,154,13)" fg:x="23247337004" fg:w="29461151"/><text x="36.1680%" y="143.50"></text></g><g><title>_int_free (12,580,770 samples, 0.02%)</title><rect x="35.9441%" y="117" width="0.0194%" height="15" fill="rgb(219,56,2)" fg:x="23264217385" fg:w="12580770"/><text x="36.1941%" y="127.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.7027266497679388191 (25,321,900 samples, 0.04%)</title><rect x="35.9896%" y="117" width="0.0391%" height="15" fill="rgb(233,0,4)" fg:x="23293725730" fg:w="25321900"/><text x="36.2396%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,487,485 samples, 0.01%)</title><rect x="36.0157%" y="101" width="0.0131%" height="15" fill="rgb(235,30,7)" fg:x="23310560145" fg:w="8487485"/><text x="36.2657%" y="111.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46,491,102 samples, 0.07%)</title><rect x="35.9701%" y="133" width="0.0718%" height="15" fill="rgb(250,79,13)" fg:x="23281045565" fg:w="46491102"/><text x="36.2201%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,489,037 samples, 0.01%)</title><rect x="36.0288%" y="117" width="0.0131%" height="15" fill="rgb(211,146,34)" fg:x="23319047630" fg:w="8489037"/><text x="36.2788%" y="127.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (219,489,939 samples, 0.34%)</title><rect x="35.7224%" y="149" width="0.3391%" height="15" fill="rgb(228,22,38)" fg:x="23120751565" fg:w="219489939"/><text x="35.9724%" y="159.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (12,704,837 samples, 0.02%)</title><rect x="36.0419%" y="133" width="0.0196%" height="15" fill="rgb(235,168,5)" fg:x="23327536667" fg:w="12704837"/><text x="36.2919%" y="143.50"></text></g><g><title>__GI___libc_malloc (12,681,744 samples, 0.02%)</title><rect x="36.1331%" y="101" width="0.0196%" height="15" fill="rgb(221,155,16)" fg:x="23386573319" fg:w="12681744"/><text x="36.3831%" y="111.50"></text></g><g><title>_int_malloc (12,681,744 samples, 0.02%)</title><rect x="36.1331%" y="85" width="0.0196%" height="15" fill="rgb(215,215,53)" fg:x="23386573319" fg:w="12681744"/><text x="36.3831%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (46,587,678 samples, 0.07%)</title><rect x="36.1068%" y="117" width="0.0720%" height="15" fill="rgb(223,4,10)" fg:x="23369564622" fg:w="46587678"/><text x="36.3568%" y="127.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16,897,237 samples, 0.03%)</title><rect x="36.1527%" y="101" width="0.0261%" height="15" fill="rgb(234,103,6)" fg:x="23399255063" fg:w="16897237"/><text x="36.4027%" y="111.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17he913d698642fd5ddE.llvm.8308943596923409684 (75,911,662 samples, 0.12%)</title><rect x="36.0680%" y="149" width="0.1173%" height="15" fill="rgb(227,97,0)" fg:x="23344468877" fg:w="75911662"/><text x="36.3180%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (71,825,435 samples, 0.11%)</title><rect x="36.0744%" y="133" width="0.1110%" height="15" fill="rgb(234,150,53)" fg:x="23348555104" fg:w="71825435"/><text x="36.3244%" y="143.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.7027266497679388191 (20,995,128 samples, 0.03%)</title><rect x="36.2243%" y="117" width="0.0324%" height="15" fill="rgb(228,201,54)" fg:x="23445610053" fg:w="20995128"/><text x="36.4743%" y="127.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,672,957 samples, 0.02%)</title><rect x="36.2372%" y="101" width="0.0196%" height="15" fill="rgb(222,22,37)" fg:x="23453932224" fg:w="12672957"/><text x="36.4872%" y="111.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,442,975 samples, 0.01%)</title><rect x="36.2437%" y="85" width="0.0130%" height="15" fill="rgb(237,53,32)" fg:x="23458162206" fg:w="8442975"/><text x="36.4937%" y="95.50"></text></g><g><title>grpc::client::load_balancing::child_manager_cb::Inner&lt;T&gt;::resolve_child_controller (50,520,039 samples, 0.08%)</title><rect x="36.1917%" y="149" width="0.0781%" height="15" fill="rgb(233,25,53)" fg:x="23424530747" fg:w="50520039"/><text x="36.4417%" y="159.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46,271,022 samples, 0.07%)</title><rect x="36.1983%" y="133" width="0.0715%" height="15" fill="rgb(210,40,34)" fg:x="23428779764" fg:w="46271022"/><text x="36.4483%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,445,605 samples, 0.01%)</title><rect x="36.2567%" y="117" width="0.0130%" height="15" fill="rgb(241,220,44)" fg:x="23466605181" fg:w="8445605"/><text x="36.5067%" y="127.50"></text></g><g><title>&lt;lb_apis::del_pol_cb::DelegatingPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (366,941,432 samples, 0.57%)</title><rect x="35.7159%" y="181" width="0.5669%" height="15" fill="rgb(235,28,35)" fg:x="23116520911" fg:w="366941432"/><text x="35.9659%" y="191.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (366,941,432 samples, 0.57%)</title><rect x="35.7159%" y="165" width="0.5669%" height="15" fill="rgb(210,56,17)" fg:x="23116520911" fg:w="366941432"/><text x="35.9659%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (8,411,557 samples, 0.01%)</title><rect x="36.2698%" y="149" width="0.0130%" height="15" fill="rgb(224,130,29)" fg:x="23475050786" fg:w="8411557"/><text x="36.5198%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,411,557 samples, 0.01%)</title><rect x="36.2698%" y="133" width="0.0130%" height="15" fill="rgb(235,212,8)" fg:x="23475050786" fg:w="8411557"/><text x="36.5198%" y="143.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (8,411,557 samples, 0.01%)</title><rect x="36.2698%" y="117" width="0.0130%" height="15" fill="rgb(223,33,50)" fg:x="23475050786" fg:w="8411557"/><text x="36.5198%" y="127.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.7022287322672284463 (8,411,557 samples, 0.01%)</title><rect x="36.2698%" y="101" width="0.0130%" height="15" fill="rgb(219,149,13)" fg:x="23475050786" fg:w="8411557"/><text x="36.5198%" y="111.50"></text></g><g><title>__GI___libc_malloc (29,672,441 samples, 0.05%)</title><rect x="36.2893%" y="181" width="0.0458%" height="15" fill="rgb(250,156,29)" fg:x="23487655258" fg:w="29672441"/><text x="36.5393%" y="191.50"></text></g><g><title>_int_malloc (16,938,493 samples, 0.03%)</title><rect x="36.3089%" y="165" width="0.0262%" height="15" fill="rgb(216,193,19)" fg:x="23500389206" fg:w="16938493"/><text x="36.5589%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (29,363,166 samples, 0.05%)</title><rect x="36.3612%" y="133" width="0.0454%" height="15" fill="rgb(216,135,14)" fg:x="23534188512" fg:w="29363166"/><text x="36.6112%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (25,134,308 samples, 0.04%)</title><rect x="36.3677%" y="117" width="0.0388%" height="15" fill="rgb(241,47,5)" fg:x="23538417370" fg:w="25134308"/><text x="36.6177%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (25,134,308 samples, 0.04%)</title><rect x="36.3677%" y="101" width="0.0388%" height="15" fill="rgb(233,42,35)" fg:x="23538417370" fg:w="25134308"/><text x="36.6177%" y="111.50"></text></g><g><title>__GI___libc_malloc (25,134,308 samples, 0.04%)</title><rect x="36.3677%" y="85" width="0.0388%" height="15" fill="rgb(231,13,6)" fg:x="23538417370" fg:w="25134308"/><text x="36.6177%" y="95.50"></text></g><g><title>_int_malloc (16,720,225 samples, 0.03%)</title><rect x="36.3807%" y="69" width="0.0258%" height="15" fill="rgb(207,181,40)" fg:x="23546831453" fg:w="16720225"/><text x="36.6307%" y="79.50"></text></g><g><title>alloc::fmt::format::format_inner (54,560,625 samples, 0.08%)</title><rect x="36.3417%" y="181" width="0.0843%" height="15" fill="rgb(254,173,49)" fg:x="23521564148" fg:w="54560625"/><text x="36.5917%" y="191.50"></text></g><g><title>core::fmt::write (50,318,674 samples, 0.08%)</title><rect x="36.3482%" y="165" width="0.0777%" height="15" fill="rgb(221,1,38)" fg:x="23525806099" fg:w="50318674"/><text x="36.5982%" y="175.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (46,084,398 samples, 0.07%)</title><rect x="36.3548%" y="149" width="0.0712%" height="15" fill="rgb(206,124,46)" fg:x="23530040375" fg:w="46084398"/><text x="36.6048%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral (12,573,095 samples, 0.02%)</title><rect x="36.4065%" y="133" width="0.0194%" height="15" fill="rgb(249,21,11)" fg:x="23563551678" fg:w="12573095"/><text x="36.6565%" y="143.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (8,335,737 samples, 0.01%)</title><rect x="36.4131%" y="117" width="0.0129%" height="15" fill="rgb(222,201,40)" fg:x="23567789036" fg:w="8335737"/><text x="36.6631%" y="127.50"></text></g><g><title>__GI___libc_realloc (54,861,840 samples, 0.08%)</title><rect x="36.4260%" y="149" width="0.0848%" height="15" fill="rgb(235,61,29)" fg:x="23576124773" fg:w="54861840"/><text x="36.6760%" y="159.50"></text></g><g><title>_int_realloc (54,861,840 samples, 0.08%)</title><rect x="36.4260%" y="133" width="0.0848%" height="15" fill="rgb(219,207,3)" fg:x="23576124773" fg:w="54861840"/><text x="36.6760%" y="143.50"></text></g><g><title>_int_malloc (54,861,840 samples, 0.08%)</title><rect x="36.4260%" y="117" width="0.0848%" height="15" fill="rgb(222,56,46)" fg:x="23576124773" fg:w="54861840"/><text x="36.6760%" y="127.50"></text></g><g><title>malloc_consolidate (46,411,693 samples, 0.07%)</title><rect x="36.4390%" y="101" width="0.0717%" height="15" fill="rgb(239,76,54)" fg:x="23584574920" fg:w="46411693"/><text x="36.6890%" y="111.50"></text></g><g><title>unlink_chunk (8,495,936 samples, 0.01%)</title><rect x="36.4976%" y="85" width="0.0131%" height="15" fill="rgb(231,124,27)" fg:x="23622490677" fg:w="8495936"/><text x="36.7476%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (59,085,757 samples, 0.09%)</title><rect x="36.4260%" y="181" width="0.0913%" height="15" fill="rgb(249,195,6)" fg:x="23576124773" fg:w="59085757"/><text x="36.6760%" y="191.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (59,085,757 samples, 0.09%)</title><rect x="36.4260%" y="165" width="0.0913%" height="15" fill="rgb(237,174,47)" fg:x="23576124773" fg:w="59085757"/><text x="36.6760%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,642,321 samples, 0.02%)</title><rect x="36.5303%" y="165" width="0.0195%" height="15" fill="rgb(206,201,31)" fg:x="23643641434" fg:w="12642321"/><text x="36.7803%" y="175.50"></text></g><g><title>__GI___libc_free (16,771,697 samples, 0.03%)</title><rect x="36.5498%" y="149" width="0.0259%" height="15" fill="rgb(231,57,52)" fg:x="23656283755" fg:w="16771697"/><text x="36.7998%" y="159.50"></text></g><g><title>_int_free (12,616,629 samples, 0.02%)</title><rect x="36.5562%" y="133" width="0.0195%" height="15" fill="rgb(248,177,22)" fg:x="23660438823" fg:w="12616629"/><text x="36.8062%" y="143.50"></text></g><g><title>__rdl_dealloc (8,439,693 samples, 0.01%)</title><rect x="36.5757%" y="149" width="0.0130%" height="15" fill="rgb(215,211,37)" fg:x="23673055452" fg:w="8439693"/><text x="36.8257%" y="159.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.13988653600275597160 (42,164,626 samples, 0.07%)</title><rect x="36.5498%" y="165" width="0.0651%" height="15" fill="rgb(241,128,51)" fg:x="23656283755" fg:w="42164626"/><text x="36.7998%" y="175.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16,953,236 samples, 0.03%)</title><rect x="36.5888%" y="149" width="0.0262%" height="15" fill="rgb(227,165,31)" fg:x="23681495145" fg:w="16953236"/><text x="36.8388%" y="159.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,953,236 samples, 0.03%)</title><rect x="36.5888%" y="133" width="0.0262%" height="15" fill="rgb(228,167,24)" fg:x="23681495145" fg:w="16953236"/><text x="36.8388%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8,493,847 samples, 0.01%)</title><rect x="36.6018%" y="117" width="0.0131%" height="15" fill="rgb(228,143,12)" fg:x="23689954534" fg:w="8493847"/><text x="36.8518%" y="127.50"></text></g><g><title>_int_free (12,686,194 samples, 0.02%)</title><rect x="36.6150%" y="149" width="0.0196%" height="15" fill="rgb(249,149,8)" fg:x="23698448381" fg:w="12686194"/><text x="36.8650%" y="159.50"></text></g><g><title>__GI___libc_free (29,395,803 samples, 0.05%)</title><rect x="36.6150%" y="165" width="0.0454%" height="15" fill="rgb(243,35,44)" fg:x="23698448381" fg:w="29395803"/><text x="36.8650%" y="175.50"></text></g><g><title>_int_free_maybe_consolidate (16,709,609 samples, 0.03%)</title><rect x="36.6346%" y="149" width="0.0258%" height="15" fill="rgb(246,89,9)" fg:x="23711134575" fg:w="16709609"/><text x="36.8846%" y="159.50"></text></g><g><title>malloc_consolidate (16,709,609 samples, 0.03%)</title><rect x="36.6346%" y="133" width="0.0258%" height="15" fill="rgb(233,213,13)" fg:x="23711134575" fg:w="16709609"/><text x="36.8846%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (109,516,400 samples, 0.17%)</title><rect x="36.5173%" y="181" width="0.1692%" height="15" fill="rgb(233,141,41)" fg:x="23635210530" fg:w="109516400"/><text x="36.7673%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::del_pol_cb::WrappedController as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (16,882,746 samples, 0.03%)</title><rect x="36.6604%" y="165" width="0.0261%" height="15" fill="rgb(239,167,4)" fg:x="23727844184" fg:w="16882746"/><text x="36.9104%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;grpc::client::name_resolution::Endpoint&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (12,677,165 samples, 0.02%)</title><rect x="36.6669%" y="149" width="0.0196%" height="15" fill="rgb(209,217,16)" fg:x="23732049765" fg:w="12677165"/><text x="36.9169%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::{{closure}}&gt; (12,677,165 samples, 0.02%)</title><rect x="36.6669%" y="133" width="0.0196%" height="15" fill="rgb(219,88,35)" fg:x="23732049765" fg:w="12677165"/><text x="36.9169%" y="143.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (63,305,343 samples, 0.10%)</title><rect x="36.7322%" y="165" width="0.0978%" height="15" fill="rgb(220,193,23)" fg:x="23774311797" fg:w="63305343"/><text x="36.9822%" y="175.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (80,370,871 samples, 0.12%)</title><rect x="40.4381%" y="101" width="0.1242%" height="15" fill="rgb(230,90,52)" fg:x="26172945525" fg:w="80370871"/><text x="40.6881%" y="111.50"></text></g><g><title>__GI___libc_malloc (21,077,250 samples, 0.03%)</title><rect x="40.5623%" y="101" width="0.0326%" height="15" fill="rgb(252,106,19)" fg:x="26253316396" fg:w="21077250"/><text x="40.8123%" y="111.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::_{{closure}} (1,599,561,656 samples, 2.47%)</title><rect x="38.2277%" y="117" width="2.4714%" height="15" fill="rgb(206,74,20)" fg:x="24742258296" fg:w="1599561656"/><text x="38.4777%" y="127.50">&lt;l..</text></g><g><title>core::hash::BuildHasher::hash_one (63,230,150 samples, 0.10%)</title><rect x="40.6014%" y="101" width="0.0977%" height="15" fill="rgb(230,138,44)" fg:x="26278589802" fg:w="63230150"/><text x="40.8514%" y="111.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,473,512 samples, 0.01%)</title><rect x="40.6860%" y="85" width="0.0131%" height="15" fill="rgb(235,182,43)" fg:x="26333346440" fg:w="8473512"/><text x="40.9360%" y="95.50"></text></g><g><title>core::hash::BuildHasher::hash_one (46,264,064 samples, 0.07%)</title><rect x="40.6991%" y="117" width="0.0715%" height="15" fill="rgb(242,16,51)" fg:x="26341819952" fg:w="46264064"/><text x="40.9491%" y="127.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (12,608,153 samples, 0.02%)</title><rect x="40.7511%" y="101" width="0.0195%" height="15" fill="rgb(248,9,4)" fg:x="26375475863" fg:w="12608153"/><text x="41.0011%" y="111.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (37,903,017 samples, 0.06%)</title><rect x="40.9465%" y="101" width="0.0586%" height="15" fill="rgb(210,31,22)" fg:x="26501989708" fg:w="37903017"/><text x="41.1965%" y="111.50"></text></g><g><title>__GI___libc_free (25,369,606 samples, 0.04%)</title><rect x="41.0051%" y="101" width="0.0392%" height="15" fill="rgb(239,54,39)" fg:x="26539892725" fg:w="25369606"/><text x="41.2551%" y="111.50"></text></g><g><title>_int_free (21,136,564 samples, 0.03%)</title><rect x="41.0116%" y="85" width="0.0327%" height="15" fill="rgb(230,99,41)" fg:x="26544125767" fg:w="21136564"/><text x="41.2616%" y="95.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (2,257,204,821 samples, 3.49%)</title><rect x="37.6416%" y="133" width="3.4875%" height="15" fill="rgb(253,106,12)" fg:x="24362940217" fg:w="2257204821"/><text x="37.8916%" y="143.50">&lt;gr..</text></g><g><title>grpc::client::load_balancing::child_manager_cb::Inner&lt;T&gt;::resolve_child_controller (232,061,022 samples, 0.36%)</title><rect x="40.7705%" y="117" width="0.3585%" height="15" fill="rgb(213,46,41)" fg:x="26388084016" fg:w="232061022"/><text x="41.0205%" y="127.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (50,636,698 samples, 0.08%)</title><rect x="41.0508%" y="101" width="0.0782%" height="15" fill="rgb(215,133,35)" fg:x="26569508340" fg:w="50636698"/><text x="41.3008%" y="111.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (80,079,944 samples, 0.12%)</title><rect x="44.3084%" y="117" width="0.1237%" height="15" fill="rgb(213,28,5)" fg:x="28677909939" fg:w="80079944"/><text x="44.5584%" y="127.50"></text></g><g><title>__GI___libc_free (121,898,240 samples, 0.19%)</title><rect x="44.4321%" y="117" width="0.1883%" height="15" fill="rgb(215,77,49)" fg:x="28757989883" fg:w="121898240"/><text x="44.6821%" y="127.50"></text></g><g><title>_int_free (84,030,052 samples, 0.13%)</title><rect x="44.4906%" y="101" width="0.1298%" height="15" fill="rgb(248,100,22)" fg:x="28795858071" fg:w="84030052"/><text x="44.7406%" y="111.50"></text></g><g><title>__GI___libc_malloc (71,485,198 samples, 0.11%)</title><rect x="44.6205%" y="117" width="0.1104%" height="15" fill="rgb(208,67,9)" fg:x="28879888123" fg:w="71485198"/><text x="44.8705%" y="127.50"></text></g><g><title>tcache_get (16,750,089 samples, 0.03%)</title><rect x="44.7050%" y="101" width="0.0259%" height="15" fill="rgb(219,133,21)" fg:x="28934623232" fg:w="16750089"/><text x="44.9550%" y="111.50"></text></g><g><title>tcache_get_n (16,750,089 samples, 0.03%)</title><rect x="44.7050%" y="85" width="0.0259%" height="15" fill="rgb(246,46,29)" fg:x="28934623232" fg:w="16750089"/><text x="44.9550%" y="95.50"></text></g><g><title>__rdl_alloc (8,381,663 samples, 0.01%)</title><rect x="44.7309%" y="117" width="0.0129%" height="15" fill="rgb(246,185,52)" fg:x="28951373321" fg:w="8381663"/><text x="44.9809%" y="127.50"></text></g><g><title>__rdl_dealloc (21,046,781 samples, 0.03%)</title><rect x="44.7439%" y="117" width="0.0325%" height="15" fill="rgb(252,136,11)" fg:x="28959754984" fg:w="21046781"/><text x="44.9939%" y="127.50"></text></g><g><title>__rust_alloc (12,668,645 samples, 0.02%)</title><rect x="44.7764%" y="117" width="0.0196%" height="15" fill="rgb(219,138,53)" fg:x="28980801765" fg:w="12668645"/><text x="45.0264%" y="127.50"></text></g><g><title>__rust_dealloc (25,308,324 samples, 0.04%)</title><rect x="44.7960%" y="117" width="0.0391%" height="15" fill="rgb(211,51,23)" fg:x="28993470410" fg:w="25308324"/><text x="45.0460%" y="127.50"></text></g><g><title>_int_free (25,338,587 samples, 0.04%)</title><rect x="44.9004%" y="85" width="0.0391%" height="15" fill="rgb(247,221,28)" fg:x="29061093820" fg:w="25338587"/><text x="45.1504%" y="95.50"></text></g><g><title>__GI___libc_free (101,346,673 samples, 0.16%)</title><rect x="44.8678%" y="101" width="0.1566%" height="15" fill="rgb(251,222,45)" fg:x="29039957171" fg:w="101346673"/><text x="45.1178%" y="111.50"></text></g><g><title>_int_free_merge_chunk (54,871,437 samples, 0.08%)</title><rect x="44.9396%" y="85" width="0.0848%" height="15" fill="rgb(217,162,53)" fg:x="29086432407" fg:w="54871437"/><text x="45.1896%" y="95.50"></text></g><g><title>_int_free_create_chunk (42,278,095 samples, 0.07%)</title><rect x="44.9590%" y="69" width="0.0653%" height="15" fill="rgb(229,93,14)" fg:x="29099025749" fg:w="42278095"/><text x="45.2090%" y="79.50"></text></g><g><title>unlink_chunk (17,001,566 samples, 0.03%)</title><rect x="44.9981%" y="53" width="0.0263%" height="15" fill="rgb(209,67,49)" fg:x="29124302278" fg:w="17001566"/><text x="45.2481%" y="63.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5,963,572,807 samples, 9.21%)</title><rect x="44.8351%" y="117" width="9.2139%" height="15" fill="rgb(213,87,29)" fg:x="29018778734" fg:w="5963572807"/><text x="45.0851%" y="127.50">alloc::sync::..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_cb::RRPickerPicker&gt; (5,836,853,474 samples, 9.02%)</title><rect x="45.0308%" y="101" width="9.0181%" height="15" fill="rgb(205,151,52)" fg:x="29145498067" fg:w="5836853474"/><text x="45.2808%" y="111.50">core::ptr::dr..</text></g><g><title>_ZN4core3ptr202drop_in_place$LT$core..iter..adapters..flatten..Flatten$LT$alloc..vec..into_iter..IntoIter$LT$core..option..Option$LT$alloc..sync..Arc$LT$dyn$u20$grpc..client..load_balancing..Picker$GT$$GT$$GT$$GT$$GT$17hd9a587cc961adddbE.llvm.6127000297180534061 (46,381,137 samples, 0.07%)</title><rect x="55.4298%" y="101" width="0.0717%" height="15" fill="rgb(253,215,39)" fg:x="35876083421" fg:w="46381137"/><text x="55.6798%" y="111.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,901,232 samples, 0.03%)</title><rect x="55.4754%" y="85" width="0.0261%" height="15" fill="rgb(221,220,41)" fg:x="35905563326" fg:w="16901232"/><text x="55.7254%" y="95.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (994,730,399 samples, 1.54%)</title><rect x="54.0490%" y="117" width="1.5369%" height="15" fill="rgb(218,133,21)" fg:x="34982351541" fg:w="994730399"/><text x="54.2990%" y="127.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::forget_allocation_drop_remaining (54,617,382 samples, 0.08%)</title><rect x="55.5015%" y="101" width="0.0844%" height="15" fill="rgb(221,193,43)" fg:x="35922464558" fg:w="54617382"/><text x="55.7515%" y="111.50"></text></g><g><title>_int_malloc (476,450,589 samples, 0.74%)</title><rect x="66.2852%" y="85" width="0.7361%" height="15" fill="rgb(240,128,52)" fg:x="42902031036" fg:w="476450589"/><text x="66.5352%" y="95.50"></text></g><g><title>unlink_chunk (67,518,530 samples, 0.10%)</title><rect x="66.9170%" y="69" width="0.1043%" height="15" fill="rgb(253,114,12)" fg:x="43310963095" fg:w="67518530"/><text x="67.1670%" y="79.50"></text></g><g><title>checked_request2size (8,411,866 samples, 0.01%)</title><rect x="67.0278%" y="85" width="0.0130%" height="15" fill="rgb(215,223,47)" fg:x="43382668144" fg:w="8411866"/><text x="67.2778%" y="95.50"></text></g><g><title>__GI___libc_malloc (552,199,787 samples, 0.85%)</title><rect x="66.1942%" y="101" width="0.8532%" height="15" fill="rgb(248,225,23)" fg:x="42843127801" fg:w="552199787"/><text x="66.4442%" y="111.50"></text></g><g><title>__rdl_alloc (8,350,319 samples, 0.01%)</title><rect x="67.0473%" y="101" width="0.0129%" height="15" fill="rgb(250,108,0)" fg:x="43395327588" fg:w="8350319"/><text x="67.2973%" y="111.50"></text></g><g><title>lb_apis::StubChannelControllerCallbacks::send_update (19,591,289,302 samples, 30.27%)</title><rect x="36.8300%" y="165" width="30.2692%" height="15" fill="rgb(228,208,7)" fg:x="23837617140" fg:w="19591289302"/><text x="37.0800%" y="175.50">lb_apis::StubChannelControllerCallbacks::send_upd..</text></g><g><title>&lt;lb_apis::del_pol_cb::WrappedController as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (19,338,616,619 samples, 29.88%)</title><rect x="37.2204%" y="149" width="29.8789%" height="15" fill="rgb(244,45,10)" fg:x="24090289823" fg:w="19338616619"/><text x="37.4704%" y="159.50">&lt;lb_apis::del_pol_cb::WrappedController as grpc:..</text></g><g><title>_ZN7lb_apis10del_pol_cb13update_picker17h37b9e3191a1a2a2eE.llvm.8308943596923409684 (16,808,761,404 samples, 25.97%)</title><rect x="41.1291%" y="133" width="25.9701%" height="15" fill="rgb(207,125,25)" fg:x="26620145038" fg:w="16808761404"/><text x="41.3791%" y="143.50">_ZN7lb_apis10del_pol_cb13update_picker17h3..</text></g><g><title>grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt;::map_child_states (7,451,824,502 samples, 11.51%)</title><rect x="55.5859%" y="117" width="11.5133%" height="15" fill="rgb(210,195,18)" fg:x="35977081940" fg:w="7451824502"/><text x="55.8359%" y="127.50">grpc::client::loa..</text></g><g><title>__rust_alloc (25,228,535 samples, 0.04%)</title><rect x="67.0602%" y="101" width="0.0390%" height="15" fill="rgb(249,80,12)" fg:x="43403677907" fg:w="25228535"/><text x="67.3102%" y="111.50"></text></g><g><title>rand_chacha::guts::refill_wide (8,497,275 samples, 0.01%)</title><rect x="67.1903%" y="149" width="0.0131%" height="15" fill="rgb(221,65,9)" fg:x="43487838094" fg:w="8497275"/><text x="67.4403%" y="159.50"></text></g><g><title>rand::rng::Rng::gen_range (96,951,931 samples, 0.15%)</title><rect x="67.0992%" y="165" width="0.1498%" height="15" fill="rgb(235,49,36)" fg:x="43428906442" fg:w="96951931"/><text x="67.3492%" y="175.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (29,523,004 samples, 0.05%)</title><rect x="67.2034%" y="149" width="0.0456%" height="15" fill="rgb(225,32,20)" fg:x="43496335369" fg:w="29523004"/><text x="67.4534%" y="159.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (8,427,542 samples, 0.01%)</title><rect x="67.2490%" y="165" width="0.0130%" height="15" fill="rgb(215,141,46)" fg:x="43525858373" fg:w="8427542"/><text x="67.4990%" y="175.50"></text></g><g><title>lb_apis::callbacks (20,468,446,069 samples, 31.62%)</title><rect x="35.6962%" y="197" width="31.6245%" height="15" fill="rgb(250,160,47)" fg:x="23103804936" fg:w="20468446069"/><text x="35.9462%" y="207.50">lb_apis::callbacks</text></g><g><title>bencher::Bencher::iter (19,827,524,075 samples, 30.63%)</title><rect x="36.6865%" y="181" width="30.6342%" height="15" fill="rgb(216,222,40)" fg:x="23744726930" fg:w="19827524075"/><text x="36.9365%" y="191.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (37,965,090 samples, 0.06%)</title><rect x="67.2620%" y="165" width="0.0587%" height="15" fill="rgb(234,217,39)" fg:x="43534285915" fg:w="37965090"/><text x="67.5120%" y="175.50"></text></g><g><title>__GI___libc_malloc (41,581,861 samples, 0.06%)</title><rect x="67.3787%" y="117" width="0.0642%" height="15" fill="rgb(207,178,40)" fg:x="43609802495" fg:w="41581861"/><text x="67.6287%" y="127.50"></text></g><g><title>_int_malloc (37,429,627 samples, 0.06%)</title><rect x="67.3851%" y="101" width="0.0578%" height="15" fill="rgb(221,136,13)" fg:x="43613954729" fg:w="37429627"/><text x="67.6351%" y="111.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (49,930,885 samples, 0.08%)</title><rect x="67.3723%" y="133" width="0.0771%" height="15" fill="rgb(249,199,10)" fg:x="43605625991" fg:w="49930885"/><text x="67.6223%" y="143.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (70,743,038 samples, 0.11%)</title><rect x="67.3529%" y="149" width="0.1093%" height="15" fill="rgb(249,222,13)" fg:x="43593109674" fg:w="70743038"/><text x="67.6029%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,295,836 samples, 0.01%)</title><rect x="67.4494%" y="133" width="0.0128%" height="15" fill="rgb(244,185,38)" fg:x="43655556876" fg:w="8295836"/><text x="67.6994%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (8,295,836 samples, 0.01%)</title><rect x="67.4494%" y="117" width="0.0128%" height="15" fill="rgb(236,202,9)" fg:x="43655556876" fg:w="8295836"/><text x="67.6994%" y="127.50"></text></g><g><title>__GI___libc_realloc (8,295,836 samples, 0.01%)</title><rect x="67.4494%" y="101" width="0.0128%" height="15" fill="rgb(250,229,37)" fg:x="43655556876" fg:w="8295836"/><text x="67.6994%" y="111.50"></text></g><g><title>_int_realloc (8,295,836 samples, 0.01%)</title><rect x="67.4494%" y="85" width="0.0128%" height="15" fill="rgb(206,174,23)" fg:x="43655556876" fg:w="8295836"/><text x="67.6994%" y="95.50"></text></g><g><title>__GI_memcpy (8,295,836 samples, 0.01%)</title><rect x="67.4494%" y="69" width="0.0128%" height="15" fill="rgb(211,33,43)" fg:x="43655556876" fg:w="8295836"/><text x="67.6994%" y="79.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,295,836 samples, 0.01%)</title><rect x="67.4494%" y="53" width="0.0128%" height="15" fill="rgb(245,58,50)" fg:x="43655556876" fg:w="8295836"/><text x="67.6994%" y="63.50"></text></g><g><title>_int_free (8,328,107 samples, 0.01%)</title><rect x="67.4622%" y="133" width="0.0129%" height="15" fill="rgb(244,68,36)" fg:x="43663852712" fg:w="8328107"/><text x="67.7122%" y="143.50"></text></g><g><title>__GI___libc_free (12,191,237 samples, 0.02%)</title><rect x="67.4622%" y="149" width="0.0188%" height="15" fill="rgb(232,229,15)" fg:x="43663852712" fg:w="12191237"/><text x="67.7122%" y="159.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.7027266497679388191 (24,962,074 samples, 0.04%)</title><rect x="67.5004%" y="133" width="0.0386%" height="15" fill="rgb(254,30,23)" fg:x="43688551561" fg:w="24962074"/><text x="67.7504%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,679,784 samples, 0.03%)</title><rect x="67.5132%" y="117" width="0.0258%" height="15" fill="rgb(235,160,14)" fg:x="43696833851" fg:w="16679784"/><text x="67.7632%" y="127.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (33,298,820 samples, 0.05%)</title><rect x="67.4939%" y="149" width="0.0514%" height="15" fill="rgb(212,155,44)" fg:x="43684371921" fg:w="33298820"/><text x="67.7439%" y="159.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (132,886,575 samples, 0.21%)</title><rect x="67.3465%" y="165" width="0.2053%" height="15" fill="rgb(226,2,50)" fg:x="43588950036" fg:w="132886575"/><text x="67.5965%" y="175.50"></text></g><g><title>__GI___libc_malloc (12,488,874 samples, 0.02%)</title><rect x="67.5905%" y="117" width="0.0193%" height="15" fill="rgb(234,177,6)" fg:x="43746853638" fg:w="12488874"/><text x="67.8405%" y="127.50"></text></g><g><title>_int_malloc (12,488,874 samples, 0.02%)</title><rect x="67.5905%" y="101" width="0.0193%" height="15" fill="rgb(217,24,9)" fg:x="43746853638" fg:w="12488874"/><text x="67.8405%" y="111.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h407cd80dd67508b8E.llvm.13083574330315652211 (41,667,943 samples, 0.06%)</title><rect x="67.5583%" y="165" width="0.0644%" height="15" fill="rgb(220,13,46)" fg:x="43726015486" fg:w="41667943"/><text x="67.8083%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (37,499,562 samples, 0.06%)</title><rect x="67.5647%" y="149" width="0.0579%" height="15" fill="rgb(239,221,27)" fg:x="43730183867" fg:w="37499562"/><text x="67.8147%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (29,158,119 samples, 0.05%)</title><rect x="67.5776%" y="133" width="0.0451%" height="15" fill="rgb(222,198,25)" fg:x="43738525310" fg:w="29158119"/><text x="67.8276%" y="143.50"></text></g><g><title>__memcpy_avx_unaligned (8,340,917 samples, 0.01%)</title><rect x="67.6098%" y="117" width="0.0129%" height="15" fill="rgb(211,99,13)" fg:x="43759342512" fg:w="8340917"/><text x="67.8598%" y="127.50"></text></g><g><title>__GI___libc_malloc (8,352,838 samples, 0.01%)</title><rect x="67.6613%" y="117" width="0.0129%" height="15" fill="rgb(232,111,31)" fg:x="43792685782" fg:w="8352838"/><text x="67.9113%" y="127.50"></text></g><g><title>_int_malloc (8,352,838 samples, 0.01%)</title><rect x="67.6613%" y="101" width="0.0129%" height="15" fill="rgb(245,82,37)" fg:x="43792685782" fg:w="8352838"/><text x="67.9113%" y="111.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.7027266497679388191 (45,840,965 samples, 0.07%)</title><rect x="67.6291%" y="133" width="0.0708%" height="15" fill="rgb(227,149,46)" fg:x="43771861351" fg:w="45840965"/><text x="67.8791%" y="143.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,663,696 samples, 0.03%)</title><rect x="67.6742%" y="117" width="0.0257%" height="15" fill="rgb(218,36,50)" fg:x="43801038620" fg:w="16663696"/><text x="67.9242%" y="127.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,326,282 samples, 0.01%)</title><rect x="67.6871%" y="101" width="0.0129%" height="15" fill="rgb(226,80,48)" fg:x="43809376034" fg:w="8326282"/><text x="67.9371%" y="111.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17h76fd9fded13229cdE.llvm.6968854181879494103 (62,552,531 samples, 0.10%)</title><rect x="67.6226%" y="165" width="0.0966%" height="15" fill="rgb(238,224,15)" fg:x="43767683429" fg:w="62552531"/><text x="67.8726%" y="175.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (62,552,531 samples, 0.10%)</title><rect x="67.6226%" y="149" width="0.0966%" height="15" fill="rgb(241,136,10)" fg:x="43767683429" fg:w="62552531"/><text x="67.8726%" y="159.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,533,644 samples, 0.02%)</title><rect x="67.6999%" y="133" width="0.0194%" height="15" fill="rgb(208,32,45)" fg:x="43817702316" fg:w="12533644"/><text x="67.9499%" y="143.50"></text></g><g><title>__GI___libc_malloc (8,362,867 samples, 0.01%)</title><rect x="67.7193%" y="165" width="0.0129%" height="15" fill="rgb(207,135,9)" fg:x="43830235960" fg:w="8362867"/><text x="67.9693%" y="175.50"></text></g><g><title>_int_malloc (8,362,867 samples, 0.01%)</title><rect x="67.7193%" y="149" width="0.0129%" height="15" fill="rgb(206,86,44)" fg:x="43830235960" fg:w="8362867"/><text x="67.9693%" y="159.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (291,401,534 samples, 0.45%)</title><rect x="67.3465%" y="181" width="0.4502%" height="15" fill="rgb(245,177,15)" fg:x="43588950036" fg:w="291401534"/><text x="67.5965%" y="191.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (37,587,172 samples, 0.06%)</title><rect x="67.7386%" y="165" width="0.0581%" height="15" fill="rgb(206,64,50)" fg:x="43842764398" fg:w="37587172"/><text x="67.9886%" y="175.50"></text></g><g><title>core::hash::BuildHasher::hash_one (25,048,780 samples, 0.04%)</title><rect x="67.7580%" y="149" width="0.0387%" height="15" fill="rgb(234,36,40)" fg:x="43855302790" fg:w="25048780"/><text x="68.0080%" y="159.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (20,880,805 samples, 0.03%)</title><rect x="67.7645%" y="133" width="0.0323%" height="15" fill="rgb(213,64,8)" fg:x="43859470765" fg:w="20880805"/><text x="68.0145%" y="143.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.7022287322672284463 (20,880,805 samples, 0.03%)</title><rect x="67.7645%" y="117" width="0.0323%" height="15" fill="rgb(210,75,36)" fg:x="43859470765" fg:w="20880805"/><text x="68.0145%" y="127.50"></text></g><g><title>__GI___libc_malloc (12,534,181 samples, 0.02%)</title><rect x="67.7967%" y="181" width="0.0194%" height="15" fill="rgb(229,88,21)" fg:x="43880351570" fg:w="12534181"/><text x="68.0467%" y="191.50"></text></g><g><title>_int_malloc (12,534,181 samples, 0.02%)</title><rect x="67.7967%" y="165" width="0.0194%" height="15" fill="rgb(252,204,47)" fg:x="43880351570" fg:w="12534181"/><text x="68.0467%" y="175.50"></text></g><g><title>__rust_alloc (8,338,609 samples, 0.01%)</title><rect x="67.8161%" y="181" width="0.0129%" height="15" fill="rgb(208,77,27)" fg:x="43892885751" fg:w="8338609"/><text x="68.0661%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (41,672,480 samples, 0.06%)</title><rect x="67.8612%" y="133" width="0.0644%" height="15" fill="rgb(221,76,26)" fg:x="43922099072" fg:w="41672480"/><text x="68.1112%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (37,484,590 samples, 0.06%)</title><rect x="67.8677%" y="117" width="0.0579%" height="15" fill="rgb(225,139,18)" fg:x="43926286962" fg:w="37484590"/><text x="68.1177%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (37,484,590 samples, 0.06%)</title><rect x="67.8677%" y="101" width="0.0579%" height="15" fill="rgb(230,137,11)" fg:x="43926286962" fg:w="37484590"/><text x="68.1177%" y="111.50"></text></g><g><title>__GI___libc_malloc (33,326,550 samples, 0.05%)</title><rect x="67.8741%" y="85" width="0.0515%" height="15" fill="rgb(212,28,1)" fg:x="43930445002" fg:w="33326550"/><text x="68.1241%" y="95.50"></text></g><g><title>_int_malloc (24,991,747 samples, 0.04%)</title><rect x="67.8870%" y="69" width="0.0386%" height="15" fill="rgb(248,164,17)" fg:x="43938779805" fg:w="24991747"/><text x="68.1370%" y="79.50"></text></g><g><title>alloc::fmt::format::format_inner (70,886,961 samples, 0.11%)</title><rect x="67.8290%" y="181" width="0.1095%" height="15" fill="rgb(222,171,42)" fg:x="43901224360" fg:w="70886961"/><text x="68.0790%" y="191.50"></text></g><g><title>core::fmt::write (70,886,961 samples, 0.11%)</title><rect x="67.8290%" y="165" width="0.1095%" height="15" fill="rgb(243,84,45)" fg:x="43901224360" fg:w="70886961"/><text x="68.0790%" y="175.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (50,012,249 samples, 0.08%)</title><rect x="67.8612%" y="149" width="0.0773%" height="15" fill="rgb(252,49,23)" fg:x="43922099072" fg:w="50012249"/><text x="68.1112%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad_integral (8,339,769 samples, 0.01%)</title><rect x="67.9256%" y="133" width="0.0129%" height="15" fill="rgb(215,19,7)" fg:x="43963771552" fg:w="8339769"/><text x="68.1756%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (58,301,419 samples, 0.09%)</title><rect x="67.9385%" y="181" width="0.0901%" height="15" fill="rgb(238,81,41)" fg:x="43972111321" fg:w="58301419"/><text x="68.1885%" y="191.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (54,139,529 samples, 0.08%)</title><rect x="67.9449%" y="165" width="0.0836%" height="15" fill="rgb(210,199,37)" fg:x="43976273211" fg:w="54139529"/><text x="68.1949%" y="175.50"></text></g><g><title>__GI___libc_realloc (54,139,529 samples, 0.08%)</title><rect x="67.9449%" y="149" width="0.0836%" height="15" fill="rgb(244,192,49)" fg:x="43976273211" fg:w="54139529"/><text x="68.1949%" y="159.50"></text></g><g><title>_int_realloc (54,139,529 samples, 0.08%)</title><rect x="67.9449%" y="133" width="0.0836%" height="15" fill="rgb(226,211,11)" fg:x="43976273211" fg:w="54139529"/><text x="68.1949%" y="143.50"></text></g><g><title>_int_malloc (49,956,503 samples, 0.08%)</title><rect x="67.9514%" y="117" width="0.0772%" height="15" fill="rgb(236,162,54)" fg:x="43980456237" fg:w="49956503"/><text x="68.2014%" y="127.50"></text></g><g><title>malloc_consolidate (37,516,179 samples, 0.06%)</title><rect x="67.9706%" y="101" width="0.0580%" height="15" fill="rgb(220,229,9)" fg:x="43992896561" fg:w="37516179"/><text x="68.2206%" y="111.50"></text></g><g><title>unlink_chunk (20,841,920 samples, 0.03%)</title><rect x="67.9964%" y="85" width="0.0322%" height="15" fill="rgb(250,87,22)" fg:x="44009570820" fg:w="20841920"/><text x="68.2464%" y="95.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (83,934,430 samples, 0.13%)</title><rect x="70.5373%" y="133" width="0.1297%" height="15" fill="rgb(239,43,17)" fg:x="45654115189" fg:w="83934430"/><text x="70.7873%" y="143.50"></text></g><g><title>__GI___libc_malloc (12,498,741 samples, 0.02%)</title><rect x="70.6669%" y="133" width="0.0193%" height="15" fill="rgb(231,177,25)" fg:x="45738049619" fg:w="12498741"/><text x="70.9169%" y="143.50"></text></g><g><title>__rdl_alloc (8,327,888 samples, 0.01%)</title><rect x="70.6862%" y="133" width="0.0129%" height="15" fill="rgb(219,179,1)" fg:x="45750548360" fg:w="8327888"/><text x="70.9362%" y="143.50"></text></g><g><title>__rust_alloc (12,489,933 samples, 0.02%)</title><rect x="70.6991%" y="133" width="0.0193%" height="15" fill="rgb(238,219,53)" fg:x="45758876248" fg:w="12489933"/><text x="70.9491%" y="143.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (1,288,213,986 samples, 1.99%)</title><rect x="68.9407%" y="149" width="1.9903%" height="15" fill="rgb(232,167,36)" fg:x="44620754571" fg:w="1288213986"/><text x="69.1907%" y="159.50">&lt;..</text></g><g><title>core::hash::BuildHasher::hash_one (137,602,376 samples, 0.21%)</title><rect x="70.7184%" y="133" width="0.2126%" height="15" fill="rgb(244,19,51)" fg:x="45771366181" fg:w="137602376"/><text x="70.9684%" y="143.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (16,702,860 samples, 0.03%)</title><rect x="70.9052%" y="117" width="0.0258%" height="15" fill="rgb(224,6,22)" fg:x="45892265697" fg:w="16702860"/><text x="71.1552%" y="127.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33,334,421 samples, 0.05%)</title><rect x="71.0982%" y="133" width="0.0515%" height="15" fill="rgb(224,145,5)" fg:x="46017162343" fg:w="33334421"/><text x="71.3482%" y="143.50"></text></g><g><title>__GI___libc_free (37,522,011 samples, 0.06%)</title><rect x="71.1497%" y="133" width="0.0580%" height="15" fill="rgb(234,130,49)" fg:x="46050496764" fg:w="37522011"/><text x="71.3997%" y="143.50"></text></g><g><title>_int_free (29,169,016 samples, 0.05%)</title><rect x="71.1626%" y="117" width="0.0451%" height="15" fill="rgb(254,6,2)" fg:x="46058849759" fg:w="29169016"/><text x="71.4126%" y="127.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17h76fd9fded13229cdE.llvm.6968854181879494103 (224,937,671 samples, 0.35%)</title><rect x="70.9310%" y="149" width="0.3475%" height="15" fill="rgb(208,96,46)" fg:x="45908968557" fg:w="224937671"/><text x="71.1810%" y="159.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (41,714,876 samples, 0.06%)</title><rect x="71.2141%" y="133" width="0.0645%" height="15" fill="rgb(239,3,39)" fg:x="46092191352" fg:w="41714876"/><text x="71.4641%" y="143.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (1,917,032,890 samples, 2.96%)</title><rect x="68.4390%" y="165" width="2.9619%" height="15" fill="rgb(233,210,1)" fg:x="44296047794" fg:w="1917032890"/><text x="68.6890%" y="175.50">&lt;gr..</text></g><g><title>core::hash::BuildHasher::hash_one (79,174,456 samples, 0.12%)</title><rect x="71.2785%" y="149" width="0.1223%" height="15" fill="rgb(244,137,37)" fg:x="46133906228" fg:w="79174456"/><text x="71.5285%" y="159.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,344,758 samples, 0.01%)</title><rect x="71.3880%" y="133" width="0.0129%" height="15" fill="rgb(240,136,2)" fg:x="46204735926" fg:w="8344758"/><text x="71.6380%" y="143.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (75,026,940 samples, 0.12%)</title><rect x="71.4009%" y="165" width="0.1159%" height="15" fill="rgb(239,18,37)" fg:x="46213080684" fg:w="75026940"/><text x="71.6509%" y="175.50"></text></g><g><title>__GI___libc_malloc (33,301,390 samples, 0.05%)</title><rect x="85.2401%" y="133" width="0.0515%" height="15" fill="rgb(218,185,22)" fg:x="55170304371" fg:w="33301390"/><text x="85.4901%" y="143.50"></text></g><g><title>tcache_get (12,451,162 samples, 0.02%)</title><rect x="85.2723%" y="117" width="0.0192%" height="15" fill="rgb(225,218,4)" fg:x="55191154599" fg:w="12451162"/><text x="85.5223%" y="127.50"></text></g><g><title>tcache_get_n (12,451,162 samples, 0.02%)</title><rect x="85.2723%" y="101" width="0.0192%" height="15" fill="rgb(230,182,32)" fg:x="55191154599" fg:w="12451162"/><text x="85.5223%" y="111.50"></text></g><g><title>__rust_alloc (12,488,010 samples, 0.02%)</title><rect x="85.2916%" y="133" width="0.0193%" height="15" fill="rgb(242,56,43)" fg:x="55203605761" fg:w="12488010"/><text x="85.5416%" y="143.50"></text></g><g><title>__memcpy_avx_unaligned (12,457,095 samples, 0.02%)</title><rect x="86.9426%" y="53" width="0.0192%" height="15" fill="rgb(233,99,24)" fg:x="56272216557" fg:w="12457095"/><text x="87.1926%" y="63.50"></text></g><g><title>__GI_memcpy (725,435,155 samples, 1.12%)</title><rect x="86.8731%" y="69" width="1.1208%" height="15" fill="rgb(234,209,42)" fg:x="56227256669" fg:w="725435155"/><text x="87.1231%" y="79.50"></text></g><g><title>__memcpy_avx_unaligned_erms (668,018,172 samples, 1.03%)</title><rect x="86.9618%" y="53" width="1.0321%" height="15" fill="rgb(227,7,12)" fg:x="56284673652" fg:w="668018172"/><text x="87.2118%" y="63.50"></text></g><g><title>_int_free (149,318,068 samples, 0.23%)</title><rect x="87.9940%" y="69" width="0.2307%" height="15" fill="rgb(245,203,43)" fg:x="56952691824" fg:w="149318068"/><text x="88.2440%" y="79.50"></text></g><g><title>_int_free_create_chunk (149,899,894 samples, 0.23%)</title><rect x="88.3533%" y="53" width="0.2316%" height="15" fill="rgb(238,205,33)" fg:x="57185237038" fg:w="149899894"/><text x="88.6033%" y="63.50"></text></g><g><title>unlink_chunk (78,967,056 samples, 0.12%)</title><rect x="88.4628%" y="37" width="0.1220%" height="15" fill="rgb(231,56,7)" fg:x="57256169876" fg:w="78967056"/><text x="88.7128%" y="47.50"></text></g><g><title>_int_free_merge_chunk (241,488,971 samples, 0.37%)</title><rect x="88.2247%" y="69" width="0.3731%" height="15" fill="rgb(244,186,29)" fg:x="57102009892" fg:w="241488971"/><text x="88.4747%" y="79.50"></text></g><g><title>_int_free_maybe_consolidate (8,361,931 samples, 0.01%)</title><rect x="88.5849%" y="53" width="0.0129%" height="15" fill="rgb(234,111,31)" fg:x="57335136932" fg:w="8361931"/><text x="88.8349%" y="63.50"></text></g><g><title>checked_request2size (25,005,800 samples, 0.04%)</title><rect x="89.7109%" y="53" width="0.0386%" height="15" fill="rgb(241,149,10)" fg:x="58063966022" fg:w="25005800"/><text x="89.9609%" y="63.50"></text></g><g><title>malloc_consolidate (41,678,556 samples, 0.06%)</title><rect x="89.7496%" y="53" width="0.0644%" height="15" fill="rgb(249,206,44)" fg:x="58088971822" fg:w="41678556"/><text x="89.9996%" y="63.50"></text></g><g><title>_int_malloc (957,988,049 samples, 1.48%)</title><rect x="88.5978%" y="69" width="1.4801%" height="15" fill="rgb(251,153,30)" fg:x="57343498863" fg:w="957988049"/><text x="88.8478%" y="79.50"></text></g><g><title>unlink_chunk (170,836,534 samples, 0.26%)</title><rect x="89.8139%" y="53" width="0.2639%" height="15" fill="rgb(239,152,38)" fg:x="58130650378" fg:w="170836534"/><text x="90.0639%" y="63.50"></text></g><g><title>_int_realloc (2,303,528,209 samples, 3.56%)</title><rect x="86.5317%" y="85" width="3.5590%" height="15" fill="rgb(249,139,47)" fg:x="56006293111" fg:w="2303528209"/><text x="86.7817%" y="95.50">_int..</text></g><g><title>unlink_chunk (8,334,408 samples, 0.01%)</title><rect x="90.0779%" y="69" width="0.0129%" height="15" fill="rgb(244,64,35)" fg:x="58301486912" fg:w="8334408"/><text x="90.3279%" y="79.50"></text></g><g><title>__GI___libc_realloc (2,582,483,897 samples, 3.99%)</title><rect x="86.1265%" y="101" width="3.9900%" height="15" fill="rgb(216,46,15)" fg:x="55744012588" fg:w="2582483897"/><text x="86.3765%" y="111.50">__GI..</text></g><g><title>musable (16,675,165 samples, 0.03%)</title><rect x="90.0908%" y="85" width="0.0258%" height="15" fill="rgb(250,74,19)" fg:x="58309821320" fg:w="16675165"/><text x="90.3408%" y="95.50"></text></g><g><title>__rdl_realloc (49,141,291 samples, 0.08%)</title><rect x="90.1165%" y="101" width="0.0759%" height="15" fill="rgb(249,42,33)" fg:x="58326496485" fg:w="49141291"/><text x="90.3665%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9,271,864,781 samples, 14.33%)</title><rect x="75.8800%" y="149" width="14.3254%" height="15" fill="rgb(242,149,17)" fg:x="49112106364" fg:w="9271864781"/><text x="76.1300%" y="159.50">&lt;alloc::vec::Vec&lt;T&gt; as..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,167,877,374 samples, 4.89%)</title><rect x="85.3109%" y="133" width="4.8945%" height="15" fill="rgb(244,29,21)" fg:x="55216093771" fg:w="3167877374"/><text x="85.5609%" y="143.50">alloc:..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (2,880,319,046 samples, 4.45%)</title><rect x="85.7551%" y="117" width="4.4502%" height="15" fill="rgb(220,130,37)" fg:x="55503652099" fg:w="2880319046"/><text x="86.0051%" y="127.50">_ZN5a..</text></g><g><title>__rust_realloc (8,333,369 samples, 0.01%)</title><rect x="90.1925%" y="101" width="0.0129%" height="15" fill="rgb(211,67,2)" fg:x="58375637776" fg:w="8333369"/><text x="90.4425%" y="111.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (83,525,319 samples, 0.13%)</title><rect x="90.2053%" y="149" width="0.1290%" height="15" fill="rgb(235,68,52)" fg:x="58383971145" fg:w="83525319"/><text x="90.4553%" y="159.50"></text></g><g><title>_int_free (54,181,159 samples, 0.08%)</title><rect x="90.3666%" y="133" width="0.0837%" height="15" fill="rgb(246,142,3)" fg:x="58488329076" fg:w="54181159"/><text x="90.6166%" y="143.50"></text></g><g><title>_int_free_create_chunk (42,749,302 samples, 0.07%)</title><rect x="90.4825%" y="117" width="0.0660%" height="15" fill="rgb(241,25,7)" fg:x="58563361102" fg:w="42749302"/><text x="90.7325%" y="127.50"></text></g><g><title>unlink_chunk (25,695,993 samples, 0.04%)</title><rect x="90.5088%" y="101" width="0.0397%" height="15" fill="rgb(242,119,39)" fg:x="58580414411" fg:w="25695993"/><text x="90.7588%" y="111.50"></text></g><g><title>__GI___libc_free (142,793,008 samples, 0.22%)</title><rect x="90.3344%" y="149" width="0.2206%" height="15" fill="rgb(241,98,45)" fg:x="58467496464" fg:w="142793008"/><text x="90.5844%" y="159.50"></text></g><g><title>_int_free_merge_chunk (67,779,237 samples, 0.10%)</title><rect x="90.4503%" y="133" width="0.1047%" height="15" fill="rgb(254,28,30)" fg:x="58542510235" fg:w="67779237"/><text x="90.7003%" y="143.50"></text></g><g><title>alloc_perturb (12,515,552 samples, 0.02%)</title><rect x="91.2440%" y="117" width="0.0193%" height="15" fill="rgb(241,142,54)" fg:x="59056206545" fg:w="12515552"/><text x="91.4940%" y="127.50"></text></g><g><title>malloc_consolidate (140,033,126 samples, 0.22%)</title><rect x="91.2633%" y="117" width="0.2164%" height="15" fill="rgb(222,85,15)" fg:x="59068722097" fg:w="140033126"/><text x="91.5133%" y="127.50"></text></g><g><title>_int_malloc (602,548,579 samples, 0.93%)</title><rect x="90.6259%" y="133" width="0.9310%" height="15" fill="rgb(210,85,47)" fg:x="58656189756" fg:w="602548579"/><text x="90.8759%" y="143.50"></text></g><g><title>unlink_chunk (49,983,112 samples, 0.08%)</title><rect x="91.4797%" y="117" width="0.0772%" height="15" fill="rgb(224,206,25)" fg:x="59208755223" fg:w="49983112"/><text x="91.7297%" y="127.50"></text></g><g><title>__GI___libc_malloc (652,634,311 samples, 1.01%)</title><rect x="90.5550%" y="149" width="1.0083%" height="15" fill="rgb(243,201,19)" fg:x="58610289472" fg:w="652634311"/><text x="90.8050%" y="159.50"></text></g><g><title>__rdl_alloc (12,493,329 samples, 0.02%)</title><rect x="91.5634%" y="149" width="0.0193%" height="15" fill="rgb(236,59,4)" fg:x="59262923783" fg:w="12493329"/><text x="91.8134%" y="159.50"></text></g><g><title>__rust_alloc (16,651,322 samples, 0.03%)</title><rect x="91.5890%" y="149" width="0.0257%" height="15" fill="rgb(254,179,45)" fg:x="59279549715" fg:w="16651322"/><text x="91.8390%" y="159.50"></text></g><g><title>__rust_dealloc (12,492,392 samples, 0.02%)</title><rect x="91.6148%" y="149" width="0.0193%" height="15" fill="rgb(226,14,10)" fg:x="59296201037" fg:w="12492392"/><text x="91.8648%" y="159.50"></text></g><g><title>_int_free (12,478,314 samples, 0.02%)</title><rect x="91.6663%" y="117" width="0.0193%" height="15" fill="rgb(244,27,41)" fg:x="59329537274" fg:w="12478314"/><text x="91.9163%" y="127.50"></text></g><g><title>__GI___libc_free (62,481,173 samples, 0.10%)</title><rect x="91.6598%" y="133" width="0.0965%" height="15" fill="rgb(235,35,32)" fg:x="59325361867" fg:w="62481173"/><text x="91.9098%" y="143.50"></text></g><g><title>_int_free_merge_chunk (45,827,452 samples, 0.07%)</title><rect x="91.6856%" y="117" width="0.0708%" height="15" fill="rgb(218,68,31)" fg:x="59342015588" fg:w="45827452"/><text x="91.9356%" y="127.50"></text></g><g><title>_int_free_create_chunk (25,039,200 samples, 0.04%)</title><rect x="91.7177%" y="101" width="0.0387%" height="15" fill="rgb(207,120,37)" fg:x="59362803840" fg:w="25039200"/><text x="91.9677%" y="111.50"></text></g><g><title>unlink_chunk (8,345,910 samples, 0.01%)</title><rect x="91.7435%" y="85" width="0.0129%" height="15" fill="rgb(227,98,0)" fg:x="59379497130" fg:w="8345910"/><text x="91.9935%" y="95.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h910e9d5dc148ea65E.llvm.13083574330315652211 (18,214,073,332 samples, 28.14%)</title><rect x="71.5168%" y="165" width="28.1414%" height="15" fill="rgb(207,7,3)" fg:x="46288107624" fg:w="18214073332"/><text x="71.7668%" y="175.50">_ZN7lb_apis14del_pol_single16DelegatingPolicy..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (5,193,487,527 samples, 8.02%)</title><rect x="91.6341%" y="149" width="8.0241%" height="15" fill="rgb(206,98,19)" fg:x="59308693429" fg:w="5193487527"/><text x="91.8841%" y="159.50">alloc::sync..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::RRPickerPicker&gt; (5,110,180,757 samples, 7.90%)</title><rect x="91.7628%" y="133" width="7.8954%" height="15" fill="rgb(217,5,26)" fg:x="59392000199" fg:w="5110180757"/><text x="92.0128%" y="143.50">core::ptr::..</text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (8,289,974 samples, 0.01%)</title><rect x="99.7997%" y="149" width="0.0128%" height="15" fill="rgb(235,190,38)" fg:x="64593794753" fg:w="8289974"/><text x="100.0497%" y="159.50"></text></g><g><title>rand::rng::Rng::gen_range (124,912,082 samples, 0.19%)</title><rect x="99.6582%" y="165" width="0.1930%" height="15" fill="rgb(247,86,24)" fg:x="64502180956" fg:w="124912082"/><text x="99.9082%" y="175.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (25,008,311 samples, 0.04%)</title><rect x="99.8125%" y="149" width="0.0386%" height="15" fill="rgb(205,101,16)" fg:x="64602084727" fg:w="25008311"/><text x="100.0625%" y="159.50"></text></g><g><title>bencher::Bencher::iter (20,630,015,475 samples, 31.87%)</title><rect x="68.0286%" y="181" width="31.8741%" height="15" fill="rgb(246,168,33)" fg:x="44030412740" fg:w="20630015475"/><text x="68.2786%" y="191.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (29,176,021 samples, 0.05%)</title><rect x="99.8576%" y="165" width="0.0451%" height="15" fill="rgb(231,114,1)" fg:x="64631252194" fg:w="29176021"/><text x="100.1076%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,332,930 samples, 0.01%)</title><rect x="99.9027%" y="165" width="0.0129%" height="15" fill="rgb(207,184,53)" fg:x="64660428215" fg:w="8332930"/><text x="100.1527%" y="175.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,980,602 samples, 0.04%)</title><rect x="99.9156%" y="149" width="0.0386%" height="15" fill="rgb(224,95,51)" fg:x="64668761145" fg:w="24980602"/><text x="100.1656%" y="159.50"></text></g><g><title>__GI___libc_free (12,493,433 samples, 0.02%)</title><rect x="99.9542%" y="149" width="0.0193%" height="15" fill="rgb(212,188,45)" fg:x="64693741747" fg:w="12493433"/><text x="100.2042%" y="159.50"></text></g><g><title>_int_free_merge_chunk (8,327,392 samples, 0.01%)</title><rect x="99.9606%" y="133" width="0.0129%" height="15" fill="rgb(223,154,38)" fg:x="64697907788" fg:w="8327392"/><text x="100.2106%" y="143.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.13988653600275597160 (41,629,489 samples, 0.06%)</title><rect x="99.9156%" y="165" width="0.0643%" height="15" fill="rgb(251,22,52)" fg:x="64668761145" fg:w="41629489"/><text x="100.1656%" y="175.50"></text></g><g><title>__libc_start_main_impl (64,709,583,807 samples, 99.98%)</title><rect x="0.0077%" y="341" width="99.9786%" height="15" fill="rgb(229,209,22)" fg:x="4975195" fg:w="64709583807"/><text x="0.2577%" y="351.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (64,709,583,807 samples, 99.98%)</title><rect x="0.0077%" y="325" width="99.9786%" height="15" fill="rgb(234,138,34)" fg:x="4975195" fg:w="64709583807"/><text x="0.2577%" y="335.50">__libc_start_call_main</text></g><g><title>main (64,709,583,807 samples, 99.98%)</title><rect x="0.0077%" y="309" width="99.9786%" height="15" fill="rgb(212,95,11)" fg:x="4975195" fg:w="64709583807"/><text x="0.2577%" y="319.50">main</text></g><g><title>std::rt::lang_start_internal (64,709,583,807 samples, 99.98%)</title><rect x="0.0077%" y="293" width="99.9786%" height="15" fill="rgb(240,179,47)" fg:x="4975195" fg:w="64709583807"/><text x="0.2577%" y="303.50">std::rt::lang_start_internal</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.2883913340809215492 (64,709,583,807 samples, 99.98%)</title><rect x="0.0077%" y="277" width="99.9786%" height="15" fill="rgb(240,163,11)" fg:x="4975195" fg:w="64709583807"/><text x="0.2577%" y="287.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.2883913340809215492</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (64,709,583,807 samples, 99.98%)</title><rect x="0.0077%" y="261" width="99.9786%" height="15" fill="rgb(236,37,12)" fg:x="4975195" fg:w="64709583807"/><text x="0.2577%" y="271.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lb_apis::main (64,709,583,807 samples, 99.98%)</title><rect x="0.0077%" y="245" width="99.9786%" height="15" fill="rgb(232,164,16)" fg:x="4975195" fg:w="64709583807"/><text x="0.2577%" y="255.50">lb_apis::main</text></g><g><title>bencher::run_tests_console (64,709,583,807 samples, 99.98%)</title><rect x="0.0077%" y="229" width="99.9786%" height="15" fill="rgb(244,205,15)" fg:x="4975195" fg:w="64709583807"/><text x="0.2577%" y="239.50">bencher::run_tests_console</text></g><g><title>bencher::Bencher::auto_bench (64,709,583,807 samples, 99.98%)</title><rect x="0.0077%" y="213" width="99.9786%" height="15" fill="rgb(223,117,47)" fg:x="4975195" fg:w="64709583807"/><text x="0.2577%" y="223.50">bencher::Bencher::auto_bench</text></g><g><title>lb_apis::single (21,142,307,997 samples, 32.67%)</title><rect x="67.3207%" y="197" width="32.6656%" height="15" fill="rgb(244,107,35)" fg:x="43572251005" fg:w="21142307997"/><text x="67.5707%" y="207.50">lb_apis::single</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::DelegatingPolicy&gt; (54,130,787 samples, 0.08%)</title><rect x="99.9027%" y="181" width="0.0836%" height="15" fill="rgb(205,140,8)" fg:x="64660428215" fg:w="54130787"/><text x="100.1527%" y="191.50"></text></g><g><title>_start (64,710,045,680 samples, 99.98%)</title><rect x="0.0077%" y="357" width="99.9794%" height="15" fill="rgb(228,84,46)" fg:x="4975194" fg:w="64710045680"/><text x="0.2577%" y="367.50">_start</text></g><g><title>all (64,723,410,737 samples, 100%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(254,188,9)" fg:x="0" fg:w="64723410737"/><text x="0.2500%" y="399.50"></text></g><g><title>lb_apis-6320936 (64,723,410,737 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(206,112,54)" fg:x="0" fg:w="64723410737"/><text x="0.2500%" y="383.50">lb_apis-6320936</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (8,389,863 samples, 0.01%)</title><rect x="99.9870%" y="357" width="0.0130%" height="15" fill="rgb(216,84,49)" fg:x="64715020874" fg:w="8389863"/><text x="100.2370%" y="367.50"></text></g></svg></svg>