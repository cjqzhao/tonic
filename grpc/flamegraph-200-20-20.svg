<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="550" onload="init(evt)" viewBox="0 0 1200 550" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="550" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="533.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="533.00"> </text><svg id="frames" x="10" width="1180" total_samples="40189991975"><g><title>[lb_apis-6320936991971930] (4,178,832 samples, 0.01%)</title><rect x="0.0000%" y="469" width="0.0104%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="4178832"/><text x="0.2500%" y="479.50"></text></g><g><title>syscall (4,178,832 samples, 0.01%)</title><rect x="0.0000%" y="453" width="0.0104%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="4178832"/><text x="0.2500%" y="463.50"></text></g><g><title>[unknown] (4,178,832 samples, 0.01%)</title><rect x="0.0000%" y="437" width="0.0104%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="4178832"/><text x="0.2500%" y="447.50"></text></g><g><title>[unknown] (4,147,526 samples, 0.01%)</title><rect x="0.0104%" y="469" width="0.0103%" height="15" fill="rgb(248,212,6)" fg:x="4178832" fg:w="4147526"/><text x="0.2604%" y="479.50"></text></g><g><title>_int_malloc (4,147,526 samples, 0.01%)</title><rect x="0.0104%" y="453" width="0.0103%" height="15" fill="rgb(208,68,35)" fg:x="4178832" fg:w="4147526"/><text x="0.2604%" y="463.50"></text></g><g><title>[unknown] (4,147,526 samples, 0.01%)</title><rect x="0.0104%" y="437" width="0.0103%" height="15" fill="rgb(232,128,0)" fg:x="4178832" fg:w="4147526"/><text x="0.2604%" y="447.50"></text></g><g><title>[unknown] (4,020,513 samples, 0.01%)</title><rect x="0.3556%" y="229" width="0.0100%" height="15" fill="rgb(207,160,47)" fg:x="142905141" fg:w="4020513"/><text x="0.6056%" y="239.50"></text></g><g><title>[unknown] (4,020,513 samples, 0.01%)</title><rect x="0.3556%" y="213" width="0.0100%" height="15" fill="rgb(228,23,34)" fg:x="142905141" fg:w="4020513"/><text x="0.6056%" y="223.50"></text></g><g><title>[unknown] (4,020,513 samples, 0.01%)</title><rect x="0.3556%" y="197" width="0.0100%" height="15" fill="rgb(218,30,26)" fg:x="142905141" fg:w="4020513"/><text x="0.6056%" y="207.50"></text></g><g><title>[unknown] (4,020,513 samples, 0.01%)</title><rect x="0.3556%" y="181" width="0.0100%" height="15" fill="rgb(220,122,19)" fg:x="142905141" fg:w="4020513"/><text x="0.6056%" y="191.50"></text></g><g><title>[unknown] (4,020,513 samples, 0.01%)</title><rect x="0.3556%" y="165" width="0.0100%" height="15" fill="rgb(250,228,42)" fg:x="142905141" fg:w="4020513"/><text x="0.6056%" y="175.50"></text></g><g><title>__GI___libc_malloc (68,518,311 samples, 0.17%)</title><rect x="0.3656%" y="229" width="0.1705%" height="15" fill="rgb(240,193,28)" fg:x="146925654" fg:w="68518311"/><text x="0.6156%" y="239.50"></text></g><g><title>_int_malloc (60,405,098 samples, 0.15%)</title><rect x="0.3858%" y="213" width="0.1503%" height="15" fill="rgb(216,20,37)" fg:x="155038867" fg:w="60405098"/><text x="0.6358%" y="223.50"></text></g><g><title>unlink_chunk (4,123,892 samples, 0.01%)</title><rect x="0.5258%" y="197" width="0.0103%" height="15" fill="rgb(206,188,39)" fg:x="211320073" fg:w="4123892"/><text x="0.7758%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,050,034 samples, 0.02%)</title><rect x="0.5361%" y="229" width="0.0200%" height="15" fill="rgb(217,207,13)" fg:x="215443965" fg:w="8050034"/><text x="0.7861%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (8,050,034 samples, 0.02%)</title><rect x="0.5361%" y="213" width="0.0200%" height="15" fill="rgb(231,73,38)" fg:x="215443965" fg:w="8050034"/><text x="0.7861%" y="223.50"></text></g><g><title>__GI___libc_realloc (8,050,034 samples, 0.02%)</title><rect x="0.5361%" y="197" width="0.0200%" height="15" fill="rgb(225,20,46)" fg:x="215443965" fg:w="8050034"/><text x="0.7861%" y="207.50"></text></g><g><title>_int_realloc (8,050,034 samples, 0.02%)</title><rect x="0.5361%" y="181" width="0.0200%" height="15" fill="rgb(210,31,41)" fg:x="215443965" fg:w="8050034"/><text x="0.7861%" y="191.50"></text></g><g><title>_int_malloc (8,050,034 samples, 0.02%)</title><rect x="0.5361%" y="165" width="0.0200%" height="15" fill="rgb(221,200,47)" fg:x="215443965" fg:w="8050034"/><text x="0.7861%" y="175.50"></text></g><g><title>malloc_consolidate (8,050,034 samples, 0.02%)</title><rect x="0.5361%" y="149" width="0.0200%" height="15" fill="rgb(226,26,5)" fg:x="215443965" fg:w="8050034"/><text x="0.7861%" y="159.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (110,579,993 samples, 0.28%)</title><rect x="0.3011%" y="245" width="0.2751%" height="15" fill="rgb(249,33,26)" fg:x="121022752" fg:w="110579993"/><text x="0.5511%" y="255.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (8,108,746 samples, 0.02%)</title><rect x="0.5561%" y="229" width="0.0202%" height="15" fill="rgb(235,183,28)" fg:x="223493999" fg:w="8108746"/><text x="0.8061%" y="239.50"></text></g><g><title>alloc_perturb (4,059,074 samples, 0.01%)</title><rect x="0.5966%" y="165" width="0.0101%" height="15" fill="rgb(221,5,38)" fg:x="239782734" fg:w="4059074"/><text x="0.8466%" y="175.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (150,962,975 samples, 0.38%)</title><rect x="0.2512%" y="261" width="0.3756%" height="15" fill="rgb(247,18,42)" fg:x="100940425" fg:w="150962975"/><text x="0.5012%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (20,300,655 samples, 0.05%)</title><rect x="0.5763%" y="245" width="0.0505%" height="15" fill="rgb(241,131,45)" fg:x="231602745" fg:w="20300655"/><text x="0.8263%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (20,300,655 samples, 0.05%)</title><rect x="0.5763%" y="229" width="0.0505%" height="15" fill="rgb(249,31,29)" fg:x="231602745" fg:w="20300655"/><text x="0.8263%" y="239.50"></text></g><g><title>__GI___libc_realloc (20,300,655 samples, 0.05%)</title><rect x="0.5763%" y="213" width="0.0505%" height="15" fill="rgb(225,111,53)" fg:x="231602745" fg:w="20300655"/><text x="0.8263%" y="223.50"></text></g><g><title>_int_realloc (20,300,655 samples, 0.05%)</title><rect x="0.5763%" y="197" width="0.0505%" height="15" fill="rgb(238,160,17)" fg:x="231602745" fg:w="20300655"/><text x="0.8263%" y="207.50"></text></g><g><title>_int_malloc (20,300,655 samples, 0.05%)</title><rect x="0.5763%" y="181" width="0.0505%" height="15" fill="rgb(214,148,48)" fg:x="231602745" fg:w="20300655"/><text x="0.8263%" y="191.50"></text></g><g><title>unlink_chunk (4,073,166 samples, 0.01%)</title><rect x="0.6166%" y="165" width="0.0101%" height="15" fill="rgb(232,36,49)" fg:x="247830234" fg:w="4073166"/><text x="0.8666%" y="175.50"></text></g><g><title>__GI___libc_free (26,066,038 samples, 0.06%)</title><rect x="0.6268%" y="261" width="0.0649%" height="15" fill="rgb(209,103,24)" fg:x="251903400" fg:w="26066038"/><text x="0.8768%" y="271.50"></text></g><g><title>_int_free (18,124,357 samples, 0.05%)</title><rect x="0.6465%" y="245" width="0.0451%" height="15" fill="rgb(229,88,8)" fg:x="259845081" fg:w="18124357"/><text x="0.8965%" y="255.50"></text></g><g><title>__rdl_dealloc (7,951,909 samples, 0.02%)</title><rect x="0.6916%" y="261" width="0.0198%" height="15" fill="rgb(213,181,19)" fg:x="277969438" fg:w="7951909"/><text x="0.9416%" y="271.50"></text></g><g><title>__rdl_dealloc (8,077,229 samples, 0.02%)</title><rect x="0.9118%" y="229" width="0.0201%" height="15" fill="rgb(254,191,54)" fg:x="366455471" fg:w="8077229"/><text x="1.1618%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.7027266497679388191 (71,147,771 samples, 0.18%)</title><rect x="0.8222%" y="245" width="0.1770%" height="15" fill="rgb(241,83,37)" fg:x="330422277" fg:w="71147771"/><text x="1.0722%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (27,037,348 samples, 0.07%)</title><rect x="0.9319%" y="229" width="0.0673%" height="15" fill="rgb(233,36,39)" fg:x="374532700" fg:w="27037348"/><text x="1.1819%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (127,852,623 samples, 0.32%)</title><rect x="0.7114%" y="261" width="0.3181%" height="15" fill="rgb(226,3,54)" fg:x="285921347" fg:w="127852623"/><text x="0.9614%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,203,922 samples, 0.03%)</title><rect x="0.9992%" y="245" width="0.0304%" height="15" fill="rgb(245,192,40)" fg:x="401570048" fg:w="12203922"/><text x="1.2492%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (336,832,676 samples, 0.84%)</title><rect x="0.2016%" y="277" width="0.8381%" height="15" fill="rgb(238,167,29)" fg:x="81022010" fg:w="336832676"/><text x="0.4516%" y="287.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (4,080,716 samples, 0.01%)</title><rect x="1.0295%" y="261" width="0.0102%" height="15" fill="rgb(232,182,51)" fg:x="413773970" fg:w="4080716"/><text x="1.2795%" y="271.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicyBuilder as grpc::client::load_balancing::LbPolicyBuilderBatched&gt;::build (8,131,705 samples, 0.02%)</title><rect x="1.0397%" y="277" width="0.0202%" height="15" fill="rgb(231,60,39)" fg:x="417854686" fg:w="8131705"/><text x="1.2897%" y="287.50"></text></g><g><title>__GI___libc_malloc (48,570,031 samples, 0.12%)</title><rect x="1.2199%" y="229" width="0.1209%" height="15" fill="rgb(208,69,12)" fg:x="490260715" fg:w="48570031"/><text x="1.4699%" y="239.50"></text></g><g><title>_int_malloc (32,676,889 samples, 0.08%)</title><rect x="1.2594%" y="213" width="0.0813%" height="15" fill="rgb(235,93,37)" fg:x="506153857" fg:w="32676889"/><text x="1.5094%" y="223.50"></text></g><g><title>checked_request2size (4,122,221 samples, 0.01%)</title><rect x="1.3305%" y="197" width="0.0103%" height="15" fill="rgb(213,116,39)" fg:x="534708525" fg:w="4122221"/><text x="1.5805%" y="207.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,792,496 samples, 0.02%)</title><rect x="1.3407%" y="229" width="0.0194%" height="15" fill="rgb(222,207,29)" fg:x="538830746" fg:w="7792496"/><text x="1.5907%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (72,383,775 samples, 0.18%)</title><rect x="1.1902%" y="245" width="0.1801%" height="15" fill="rgb(206,96,30)" fg:x="478324269" fg:w="72383775"/><text x="1.4402%" y="255.50"></text></g><g><title>__rust_alloc (4,084,802 samples, 0.01%)</title><rect x="1.3601%" y="229" width="0.0102%" height="15" fill="rgb(218,138,4)" fg:x="546623242" fg:w="4084802"/><text x="1.6101%" y="239.50"></text></g><g><title>alloc_perturb (4,085,099 samples, 0.01%)</title><rect x="1.3703%" y="213" width="0.0102%" height="15" fill="rgb(250,191,14)" fg:x="550708044" fg:w="4085099"/><text x="1.6203%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (128,760,763 samples, 0.32%)</title><rect x="1.0698%" y="261" width="0.3204%" height="15" fill="rgb(239,60,40)" fg:x="429971586" fg:w="128760763"/><text x="1.3198%" y="271.50"></text></g><g><title>__GI___libc_malloc (8,024,305 samples, 0.02%)</title><rect x="1.3703%" y="245" width="0.0200%" height="15" fill="rgb(206,27,48)" fg:x="550708044" fg:w="8024305"/><text x="1.6203%" y="255.50"></text></g><g><title>_int_malloc (8,024,305 samples, 0.02%)</title><rect x="1.3703%" y="229" width="0.0200%" height="15" fill="rgb(225,35,8)" fg:x="550708044" fg:w="8024305"/><text x="1.6203%" y="239.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h7d8f287740a6f638E.llvm.6127000297180534061 (140,708,931 samples, 0.35%)</title><rect x="1.0599%" y="277" width="0.3501%" height="15" fill="rgb(250,213,24)" fg:x="425986391" fg:w="140708931"/><text x="1.3099%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (7,962,973 samples, 0.02%)</title><rect x="1.3902%" y="261" width="0.0198%" height="15" fill="rgb(247,123,22)" fg:x="558732349" fg:w="7962973"/><text x="1.6402%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (7,962,973 samples, 0.02%)</title><rect x="1.3902%" y="245" width="0.0198%" height="15" fill="rgb(231,138,38)" fg:x="558732349" fg:w="7962973"/><text x="1.6402%" y="255.50"></text></g><g><title>__GI___libc_malloc (4,121,805 samples, 0.01%)</title><rect x="1.4100%" y="277" width="0.0103%" height="15" fill="rgb(231,145,46)" fg:x="566695322" fg:w="4121805"/><text x="1.6600%" y="287.50"></text></g><g><title>_int_malloc (4,121,805 samples, 0.01%)</title><rect x="1.4100%" y="261" width="0.0103%" height="15" fill="rgb(251,118,11)" fg:x="566695322" fg:w="4121805"/><text x="1.6600%" y="271.50"></text></g><g><title>__GI___libc_free (4,108,270 samples, 0.01%)</title><rect x="1.4203%" y="261" width="0.0102%" height="15" fill="rgb(217,147,25)" fg:x="570817127" fg:w="4108270"/><text x="1.6703%" y="271.50"></text></g><g><title>_int_free_merge_chunk (4,108,270 samples, 0.01%)</title><rect x="1.4203%" y="245" width="0.0102%" height="15" fill="rgb(247,81,37)" fg:x="570817127" fg:w="4108270"/><text x="1.6703%" y="255.50"></text></g><g><title>[unknown] (28,255,206 samples, 0.07%)</title><rect x="1.6172%" y="229" width="0.0703%" height="15" fill="rgb(209,12,38)" fg:x="649938021" fg:w="28255206"/><text x="1.8672%" y="239.50"></text></g><g><title>[unknown] (20,043,105 samples, 0.05%)</title><rect x="1.6376%" y="213" width="0.0499%" height="15" fill="rgb(227,1,9)" fg:x="658150122" fg:w="20043105"/><text x="1.8876%" y="223.50"></text></g><g><title>[unknown] (16,188,961 samples, 0.04%)</title><rect x="1.6472%" y="197" width="0.0403%" height="15" fill="rgb(248,47,43)" fg:x="662004266" fg:w="16188961"/><text x="1.8972%" y="207.50"></text></g><g><title>[unknown] (16,188,961 samples, 0.04%)</title><rect x="1.6472%" y="181" width="0.0403%" height="15" fill="rgb(221,10,30)" fg:x="662004266" fg:w="16188961"/><text x="1.8972%" y="191.50"></text></g><g><title>[unknown] (16,188,961 samples, 0.04%)</title><rect x="1.6472%" y="165" width="0.0403%" height="15" fill="rgb(210,229,1)" fg:x="662004266" fg:w="16188961"/><text x="1.8972%" y="175.50"></text></g><g><title>[unknown] (16,188,961 samples, 0.04%)</title><rect x="1.6472%" y="149" width="0.0403%" height="15" fill="rgb(222,148,37)" fg:x="662004266" fg:w="16188961"/><text x="1.8972%" y="159.50"></text></g><g><title>[unknown] (16,188,961 samples, 0.04%)</title><rect x="1.6472%" y="133" width="0.0403%" height="15" fill="rgb(234,67,33)" fg:x="662004266" fg:w="16188961"/><text x="1.8972%" y="143.50"></text></g><g><title>[unknown] (16,188,961 samples, 0.04%)</title><rect x="1.6472%" y="117" width="0.0403%" height="15" fill="rgb(247,98,35)" fg:x="662004266" fg:w="16188961"/><text x="1.8972%" y="127.50"></text></g><g><title>[unknown] (12,128,971 samples, 0.03%)</title><rect x="1.6573%" y="101" width="0.0302%" height="15" fill="rgb(247,138,52)" fg:x="666064256" fg:w="12128971"/><text x="1.9073%" y="111.50"></text></g><g><title>[unknown] (4,104,817 samples, 0.01%)</title><rect x="1.6773%" y="85" width="0.0102%" height="15" fill="rgb(213,79,30)" fg:x="674088410" fg:w="4104817"/><text x="1.9273%" y="95.50"></text></g><g><title>[unknown] (4,104,817 samples, 0.01%)</title><rect x="1.6773%" y="69" width="0.0102%" height="15" fill="rgb(246,177,23)" fg:x="674088410" fg:w="4104817"/><text x="1.9273%" y="79.50"></text></g><g><title>[unknown] (4,104,817 samples, 0.01%)</title><rect x="1.6773%" y="53" width="0.0102%" height="15" fill="rgb(230,62,27)" fg:x="674088410" fg:w="4104817"/><text x="1.9273%" y="63.50"></text></g><g><title>malloc_consolidate (32,004,998 samples, 0.08%)</title><rect x="1.6875%" y="197" width="0.0796%" height="15" fill="rgb(216,154,8)" fg:x="678193227" fg:w="32004998"/><text x="1.9375%" y="207.50"></text></g><g><title>unlink_chunk (7,919,405 samples, 0.02%)</title><rect x="1.7474%" y="181" width="0.0197%" height="15" fill="rgb(244,35,45)" fg:x="702278820" fg:w="7919405"/><text x="1.9974%" y="191.50"></text></g><g><title>[unknown] (4,070,750 samples, 0.01%)</title><rect x="1.7671%" y="181" width="0.0101%" height="15" fill="rgb(251,115,12)" fg:x="710198225" fg:w="4070750"/><text x="2.0171%" y="191.50"></text></g><g><title>[unknown] (4,070,750 samples, 0.01%)</title><rect x="1.7671%" y="165" width="0.0101%" height="15" fill="rgb(240,54,50)" fg:x="710198225" fg:w="4070750"/><text x="2.0171%" y="175.50"></text></g><g><title>[unknown] (4,070,750 samples, 0.01%)</title><rect x="1.7671%" y="149" width="0.0101%" height="15" fill="rgb(233,84,52)" fg:x="710198225" fg:w="4070750"/><text x="2.0171%" y="159.50"></text></g><g><title>[unknown] (4,070,750 samples, 0.01%)</title><rect x="1.7671%" y="133" width="0.0101%" height="15" fill="rgb(207,117,47)" fg:x="710198225" fg:w="4070750"/><text x="2.0171%" y="143.50"></text></g><g><title>[unknown] (4,070,750 samples, 0.01%)</title><rect x="1.7671%" y="117" width="0.0101%" height="15" fill="rgb(249,43,39)" fg:x="710198225" fg:w="4070750"/><text x="2.0171%" y="127.50"></text></g><g><title>[unknown] (4,070,750 samples, 0.01%)</title><rect x="1.7671%" y="101" width="0.0101%" height="15" fill="rgb(209,38,44)" fg:x="710198225" fg:w="4070750"/><text x="2.0171%" y="111.50"></text></g><g><title>[unknown] (4,070,750 samples, 0.01%)</title><rect x="1.7671%" y="85" width="0.0101%" height="15" fill="rgb(236,212,23)" fg:x="710198225" fg:w="4070750"/><text x="2.0171%" y="95.50"></text></g><g><title>[unknown] (4,070,750 samples, 0.01%)</title><rect x="1.7671%" y="69" width="0.0101%" height="15" fill="rgb(242,79,21)" fg:x="710198225" fg:w="4070750"/><text x="2.0171%" y="79.50"></text></g><g><title>[unknown] (4,070,750 samples, 0.01%)</title><rect x="1.7671%" y="53" width="0.0101%" height="15" fill="rgb(211,96,35)" fg:x="710198225" fg:w="4070750"/><text x="2.0171%" y="63.50"></text></g><g><title>__GI___libc_malloc (40,181,848 samples, 0.10%)</title><rect x="1.6875%" y="229" width="0.1000%" height="15" fill="rgb(253,215,40)" fg:x="678193227" fg:w="40181848"/><text x="1.9375%" y="239.50"></text></g><g><title>_int_malloc (40,181,848 samples, 0.10%)</title><rect x="1.6875%" y="213" width="0.1000%" height="15" fill="rgb(211,81,21)" fg:x="678193227" fg:w="40181848"/><text x="1.9375%" y="223.50"></text></g><g><title>sysmalloc (8,176,850 samples, 0.02%)</title><rect x="1.7671%" y="197" width="0.0203%" height="15" fill="rgb(208,190,38)" fg:x="710198225" fg:w="8176850"/><text x="2.0171%" y="207.50"></text></g><g><title>__glibc_morecore (4,106,100 samples, 0.01%)</title><rect x="1.7772%" y="181" width="0.0102%" height="15" fill="rgb(235,213,38)" fg:x="714268975" fg:w="4106100"/><text x="2.0272%" y="191.50"></text></g><g><title>__GI___sbrk (4,106,100 samples, 0.01%)</title><rect x="1.7772%" y="165" width="0.0102%" height="15" fill="rgb(237,122,38)" fg:x="714268975" fg:w="4106100"/><text x="2.0272%" y="175.50"></text></g><g><title>__brk (4,106,100 samples, 0.01%)</title><rect x="1.7772%" y="149" width="0.0102%" height="15" fill="rgb(244,218,35)" fg:x="714268975" fg:w="4106100"/><text x="2.0272%" y="159.50"></text></g><g><title>[unknown] (4,106,100 samples, 0.01%)</title><rect x="1.7772%" y="133" width="0.0102%" height="15" fill="rgb(240,68,47)" fg:x="714268975" fg:w="4106100"/><text x="2.0272%" y="143.50"></text></g><g><title>[unknown] (4,106,100 samples, 0.01%)</title><rect x="1.7772%" y="117" width="0.0102%" height="15" fill="rgb(210,16,53)" fg:x="714268975" fg:w="4106100"/><text x="2.0272%" y="127.50"></text></g><g><title>[unknown] (4,106,100 samples, 0.01%)</title><rect x="1.7772%" y="101" width="0.0102%" height="15" fill="rgb(235,124,12)" fg:x="714268975" fg:w="4106100"/><text x="2.0272%" y="111.50"></text></g><g><title>[unknown] (4,106,100 samples, 0.01%)</title><rect x="1.7772%" y="85" width="0.0102%" height="15" fill="rgb(224,169,11)" fg:x="714268975" fg:w="4106100"/><text x="2.0272%" y="95.50"></text></g><g><title>[unknown] (4,106,100 samples, 0.01%)</title><rect x="1.7772%" y="69" width="0.0102%" height="15" fill="rgb(250,166,2)" fg:x="714268975" fg:w="4106100"/><text x="2.0272%" y="79.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.7027266497679388191 (120,774,765 samples, 0.30%)</title><rect x="1.5467%" y="245" width="0.3005%" height="15" fill="rgb(242,216,29)" fg:x="621607647" fg:w="120774765"/><text x="1.7967%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24,007,337 samples, 0.06%)</title><rect x="1.7874%" y="229" width="0.0597%" height="15" fill="rgb(230,116,27)" fg:x="718375075" fg:w="24007337"/><text x="2.0374%" y="239.50"></text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (191,878,685 samples, 0.48%)</title><rect x="1.4203%" y="277" width="0.4774%" height="15" fill="rgb(228,99,48)" fg:x="570817127" fg:w="191878685"/><text x="1.6703%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (187,770,415 samples, 0.47%)</title><rect x="1.4305%" y="261" width="0.4672%" height="15" fill="rgb(253,11,6)" fg:x="574925397" fg:w="187770415"/><text x="1.6805%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,313,400 samples, 0.05%)</title><rect x="1.8472%" y="245" width="0.0505%" height="15" fill="rgb(247,143,39)" fg:x="742382412" fg:w="20313400"/><text x="2.0972%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (730,291,742 samples, 1.82%)</title><rect x="0.1610%" y="293" width="1.8171%" height="15" fill="rgb(236,97,10)" fg:x="64688720" fg:w="730291742"/><text x="0.4110%" y="303.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (32,284,650 samples, 0.08%)</title><rect x="1.8977%" y="277" width="0.0803%" height="15" fill="rgb(233,208,19)" fg:x="762695812" fg:w="32284650"/><text x="2.1477%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32,284,650 samples, 0.08%)</title><rect x="1.8977%" y="261" width="0.0803%" height="15" fill="rgb(216,164,2)" fg:x="762695812" fg:w="32284650"/><text x="2.1477%" y="271.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (32,284,650 samples, 0.08%)</title><rect x="1.8977%" y="245" width="0.0803%" height="15" fill="rgb(220,129,5)" fg:x="762695812" fg:w="32284650"/><text x="2.1477%" y="255.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.7022287322672284463 (32,284,650 samples, 0.08%)</title><rect x="1.8977%" y="229" width="0.0803%" height="15" fill="rgb(242,17,10)" fg:x="762695812" fg:w="32284650"/><text x="2.1477%" y="239.50"></text></g><g><title>alloc_perturb (8,185,658 samples, 0.02%)</title><rect x="2.0624%" y="261" width="0.0204%" height="15" fill="rgb(242,107,0)" fg:x="828871219" fg:w="8185658"/><text x="2.3124%" y="271.50"></text></g><g><title>__GI___libc_malloc (46,136,509 samples, 0.11%)</title><rect x="1.9781%" y="293" width="0.1148%" height="15" fill="rgb(251,28,31)" fg:x="794980462" fg:w="46136509"/><text x="2.2281%" y="303.50"></text></g><g><title>_int_malloc (30,112,927 samples, 0.07%)</title><rect x="2.0179%" y="277" width="0.0749%" height="15" fill="rgb(233,223,10)" fg:x="811004044" fg:w="30112927"/><text x="2.2679%" y="287.50"></text></g><g><title>unlink_chunk (4,060,094 samples, 0.01%)</title><rect x="2.0827%" y="261" width="0.0101%" height="15" fill="rgb(215,21,27)" fg:x="837056877" fg:w="4060094"/><text x="2.3327%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (27,980,447 samples, 0.07%)</title><rect x="2.1525%" y="261" width="0.0696%" height="15" fill="rgb(232,23,21)" fg:x="865083324" fg:w="27980447"/><text x="2.4025%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (4,057,983 samples, 0.01%)</title><rect x="2.2120%" y="245" width="0.0101%" height="15" fill="rgb(244,5,23)" fg:x="889005788" fg:w="4057983"/><text x="2.4620%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,716,441 samples, 0.02%)</title><rect x="2.3620%" y="229" width="0.0192%" height="15" fill="rgb(226,81,46)" fg:x="949279236" fg:w="7716441"/><text x="2.6120%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (112,753,329 samples, 0.28%)</title><rect x="2.2917%" y="245" width="0.2806%" height="15" fill="rgb(247,70,30)" fg:x="921037608" fg:w="112753329"/><text x="2.5417%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (76,795,260 samples, 0.19%)</title><rect x="2.3812%" y="229" width="0.1911%" height="15" fill="rgb(212,68,19)" fg:x="956995677" fg:w="76795260"/><text x="2.6312%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (68,614,930 samples, 0.17%)</title><rect x="2.4015%" y="213" width="0.1707%" height="15" fill="rgb(240,187,13)" fg:x="965176007" fg:w="68614930"/><text x="2.6515%" y="223.50"></text></g><g><title>__GI___libc_malloc (64,523,069 samples, 0.16%)</title><rect x="2.4117%" y="197" width="0.1605%" height="15" fill="rgb(223,113,26)" fg:x="969267868" fg:w="64523069"/><text x="2.6617%" y="207.50"></text></g><g><title>_int_malloc (44,234,663 samples, 0.11%)</title><rect x="2.4622%" y="181" width="0.1101%" height="15" fill="rgb(206,192,2)" fg:x="989556274" fg:w="44234663"/><text x="2.7122%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (227,881,967 samples, 0.57%)</title><rect x="2.0929%" y="293" width="0.5670%" height="15" fill="rgb(241,108,4)" fg:x="841116971" fg:w="227881967"/><text x="2.3429%" y="303.50"></text></g><g><title>core::fmt::write (211,949,530 samples, 0.53%)</title><rect x="2.1325%" y="277" width="0.5274%" height="15" fill="rgb(247,173,49)" fg:x="857049408" fg:w="211949530"/><text x="2.3825%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (175,935,167 samples, 0.44%)</title><rect x="2.2221%" y="261" width="0.4378%" height="15" fill="rgb(224,114,35)" fg:x="893063771" fg:w="175935167"/><text x="2.4721%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (35,208,001 samples, 0.09%)</title><rect x="2.5723%" y="245" width="0.0876%" height="15" fill="rgb(245,159,27)" fg:x="1033790937" fg:w="35208001"/><text x="2.8223%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (19,924,758 samples, 0.05%)</title><rect x="2.6103%" y="229" width="0.0496%" height="15" fill="rgb(245,172,44)" fg:x="1049074180" fg:w="19924758"/><text x="2.8603%" y="239.50"></text></g><g><title>__GI_memcpy (20,139,712 samples, 0.05%)</title><rect x="2.6701%" y="229" width="0.0501%" height="15" fill="rgb(236,23,11)" fg:x="1073109800" fg:w="20139712"/><text x="2.9201%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20,139,712 samples, 0.05%)</title><rect x="2.6701%" y="213" width="0.0501%" height="15" fill="rgb(205,117,38)" fg:x="1073109800" fg:w="20139712"/><text x="2.9201%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (92,804,052 samples, 0.23%)</title><rect x="2.6599%" y="293" width="0.2309%" height="15" fill="rgb(237,72,25)" fg:x="1068998938" fg:w="92804052"/><text x="2.9099%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (88,693,190 samples, 0.22%)</title><rect x="2.6701%" y="277" width="0.2207%" height="15" fill="rgb(244,70,9)" fg:x="1073109800" fg:w="88693190"/><text x="2.9201%" y="287.50"></text></g><g><title>__GI___libc_realloc (88,693,190 samples, 0.22%)</title><rect x="2.6701%" y="261" width="0.2207%" height="15" fill="rgb(217,125,39)" fg:x="1073109800" fg:w="88693190"/><text x="2.9201%" y="271.50"></text></g><g><title>_int_realloc (88,693,190 samples, 0.22%)</title><rect x="2.6701%" y="245" width="0.2207%" height="15" fill="rgb(235,36,10)" fg:x="1073109800" fg:w="88693190"/><text x="2.9201%" y="255.50"></text></g><g><title>_int_malloc (68,553,478 samples, 0.17%)</title><rect x="2.7202%" y="229" width="0.1706%" height="15" fill="rgb(251,123,47)" fg:x="1093249512" fg:w="68553478"/><text x="2.9702%" y="239.50"></text></g><g><title>malloc_consolidate (44,391,043 samples, 0.11%)</title><rect x="2.7803%" y="213" width="0.1105%" height="15" fill="rgb(221,13,13)" fg:x="1117411947" fg:w="44391043"/><text x="3.0303%" y="223.50"></text></g><g><title>unlink_chunk (16,090,949 samples, 0.04%)</title><rect x="2.8507%" y="197" width="0.0400%" height="15" fill="rgb(238,131,9)" fg:x="1145712041" fg:w="16090949"/><text x="3.1007%" y="207.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (24,407,697 samples, 0.06%)</title><rect x="6.2382%" y="245" width="0.0607%" height="15" fill="rgb(211,50,8)" fg:x="2507117307" fg:w="24407697"/><text x="6.4882%" y="255.50"></text></g><g><title>__GI___libc_malloc (16,190,343 samples, 0.04%)</title><rect x="6.2989%" y="245" width="0.0403%" height="15" fill="rgb(245,182,24)" fg:x="2531525004" fg:w="16190343"/><text x="6.5489%" y="255.50"></text></g><g><title>__rdl_alloc (4,064,893 samples, 0.01%)</title><rect x="6.3392%" y="245" width="0.0101%" height="15" fill="rgb(242,14,37)" fg:x="2547715347" fg:w="4064893"/><text x="6.5892%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (584,743,539 samples, 1.45%)</title><rect x="6.3493%" y="245" width="1.4549%" height="15" fill="rgb(246,228,12)" fg:x="2551780240" fg:w="584743539"/><text x="6.5993%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (28,323,999 samples, 0.07%)</title><rect x="7.7338%" y="229" width="0.0705%" height="15" fill="rgb(213,55,15)" fg:x="3108199780" fg:w="28323999"/><text x="7.9838%" y="239.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (1,760,147,451 samples, 4.38%)</title><rect x="3.4553%" y="261" width="4.3796%" height="15" fill="rgb(209,9,3)" fg:x="1388676348" fg:w="1760147451"/><text x="3.7053%" y="271.50">&lt;lb_a..</text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::iter (12,300,020 samples, 0.03%)</title><rect x="7.8042%" y="245" width="0.0306%" height="15" fill="rgb(230,59,30)" fg:x="3136523779" fg:w="12300020"/><text x="8.0542%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,165,795 samples, 0.03%)</title><rect x="7.8348%" y="261" width="0.0303%" height="15" fill="rgb(209,121,21)" fg:x="3148823799" fg:w="12165795"/><text x="8.0848%" y="271.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,288,574 samples, 0.04%)</title><rect x="7.9861%" y="245" width="0.0405%" height="15" fill="rgb(220,109,13)" fg:x="3209596931" fg:w="16288574"/><text x="8.2361%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (2,016,132,963 samples, 5.02%)</title><rect x="3.1319%" y="277" width="5.0165%" height="15" fill="rgb(232,18,1)" fg:x="1258703236" fg:w="2016132963"/><text x="3.3819%" y="287.50">&lt;grpc:..</text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (113,846,605 samples, 0.28%)</title><rect x="7.8651%" y="261" width="0.2833%" height="15" fill="rgb(215,41,42)" fg:x="3160989594" fg:w="113846605"/><text x="8.1151%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (48,950,694 samples, 0.12%)</title><rect x="8.0266%" y="245" width="0.1218%" height="15" fill="rgb(224,123,36)" fg:x="3225885505" fg:w="48950694"/><text x="8.2766%" y="255.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,305,819 samples, 0.06%)</title><rect x="8.1484%" y="277" width="0.0605%" height="15" fill="rgb(240,125,3)" fg:x="3274836199" fg:w="24305819"/><text x="8.3984%" y="287.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (8,052,189 samples, 0.02%)</title><rect x="8.2089%" y="277" width="0.0200%" height="15" fill="rgb(205,98,50)" fg:x="3299142018" fg:w="8052189"/><text x="8.4589%" y="287.50"></text></g><g><title>__GI_memcpy (12,222,882 samples, 0.03%)</title><rect x="9.0040%" y="181" width="0.0304%" height="15" fill="rgb(205,185,37)" fg:x="3618726829" fg:w="12222882"/><text x="9.2540%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned_erms (12,222,882 samples, 0.03%)</title><rect x="9.0040%" y="165" width="0.0304%" height="15" fill="rgb(238,207,15)" fg:x="3618726829" fg:w="12222882"/><text x="9.2540%" y="175.50"></text></g><g><title>_int_free_merge_chunk (8,049,452 samples, 0.02%)</title><rect x="9.0345%" y="181" width="0.0200%" height="15" fill="rgb(213,199,42)" fg:x="3630949711" fg:w="8049452"/><text x="9.2845%" y="191.50"></text></g><g><title>_int_free_create_chunk (8,049,452 samples, 0.02%)</title><rect x="9.0345%" y="165" width="0.0200%" height="15" fill="rgb(235,201,11)" fg:x="3630949711" fg:w="8049452"/><text x="9.2845%" y="175.50"></text></g><g><title>checked_request2size (4,107,086 samples, 0.01%)</title><rect x="9.0851%" y="165" width="0.0102%" height="15" fill="rgb(207,46,11)" fg:x="3651295887" fg:w="4107086"/><text x="9.3351%" y="175.50"></text></g><g><title>__GI___libc_realloc (48,850,444 samples, 0.12%)</title><rect x="8.9939%" y="213" width="0.1215%" height="15" fill="rgb(241,35,35)" fg:x="3614651603" fg:w="48850444"/><text x="9.2439%" y="223.50"></text></g><g><title>_int_realloc (44,775,218 samples, 0.11%)</title><rect x="9.0040%" y="197" width="0.1114%" height="15" fill="rgb(243,32,47)" fg:x="3618726829" fg:w="44775218"/><text x="9.2540%" y="207.50"></text></g><g><title>_int_malloc (24,502,884 samples, 0.06%)</title><rect x="9.0545%" y="181" width="0.0610%" height="15" fill="rgb(247,202,23)" fg:x="3638999163" fg:w="24502884"/><text x="9.3045%" y="191.50"></text></g><g><title>unlink_chunk (8,099,074 samples, 0.02%)</title><rect x="9.0953%" y="165" width="0.0202%" height="15" fill="rgb(219,102,11)" fg:x="3655402973" fg:w="8099074"/><text x="9.3453%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (207,590,660 samples, 0.52%)</title><rect x="8.6089%" y="261" width="0.5165%" height="15" fill="rgb(243,110,44)" fg:x="3459910412" fg:w="207590660"/><text x="8.8589%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (52,849,469 samples, 0.13%)</title><rect x="8.9939%" y="245" width="0.1315%" height="15" fill="rgb(222,74,54)" fg:x="3614651603" fg:w="52849469"/><text x="9.2439%" y="255.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (52,849,469 samples, 0.13%)</title><rect x="8.9939%" y="229" width="0.1315%" height="15" fill="rgb(216,99,12)" fg:x="3614651603" fg:w="52849469"/><text x="9.2439%" y="239.50"></text></g><g><title>_int_free (4,042,029 samples, 0.01%)</title><rect x="9.1254%" y="245" width="0.0101%" height="15" fill="rgb(226,22,26)" fg:x="3667501072" fg:w="4042029"/><text x="9.3754%" y="255.50"></text></g><g><title>__GI___libc_free (8,080,084 samples, 0.02%)</title><rect x="9.1254%" y="261" width="0.0201%" height="15" fill="rgb(217,163,10)" fg:x="3667501072" fg:w="8080084"/><text x="9.3754%" y="271.50"></text></g><g><title>_int_free_merge_chunk (4,038,055 samples, 0.01%)</title><rect x="9.1355%" y="245" width="0.0100%" height="15" fill="rgb(213,25,53)" fg:x="3671543101" fg:w="4038055"/><text x="9.3855%" y="255.50"></text></g><g><title>_int_free_create_chunk (4,038,055 samples, 0.01%)</title><rect x="9.1355%" y="229" width="0.0100%" height="15" fill="rgb(252,105,26)" fg:x="3671543101" fg:w="4038055"/><text x="9.3855%" y="239.50"></text></g><g><title>unlink_chunk (4,038,055 samples, 0.01%)</title><rect x="9.1355%" y="213" width="0.0100%" height="15" fill="rgb(220,39,43)" fg:x="3671543101" fg:w="4038055"/><text x="9.3855%" y="223.50"></text></g><g><title>__GI___libc_malloc (12,179,563 samples, 0.03%)</title><rect x="9.1455%" y="261" width="0.0303%" height="15" fill="rgb(229,68,48)" fg:x="3675581156" fg:w="12179563"/><text x="9.3955%" y="271.50"></text></g><g><title>_int_malloc (8,159,686 samples, 0.02%)</title><rect x="9.1555%" y="245" width="0.0203%" height="15" fill="rgb(252,8,32)" fg:x="3679601033" fg:w="8159686"/><text x="9.4055%" y="255.50"></text></g><g><title>unlink_chunk (8,159,686 samples, 0.02%)</title><rect x="9.1555%" y="229" width="0.0203%" height="15" fill="rgb(223,20,43)" fg:x="3679601033" fg:w="8159686"/><text x="9.4055%" y="239.50"></text></g><g><title>__rust_dealloc (4,066,734 samples, 0.01%)</title><rect x="9.1758%" y="261" width="0.0101%" height="15" fill="rgb(229,81,49)" fg:x="3687760719" fg:w="4066734"/><text x="9.4258%" y="271.50"></text></g><g><title>__GI___libc_free (4,127,905 samples, 0.01%)</title><rect x="9.1859%" y="245" width="0.0103%" height="15" fill="rgb(236,28,36)" fg:x="3691827453" fg:w="4127905"/><text x="9.4359%" y="255.50"></text></g><g><title>_int_free_merge_chunk (4,127,905 samples, 0.01%)</title><rect x="9.1859%" y="229" width="0.0103%" height="15" fill="rgb(249,185,26)" fg:x="3691827453" fg:w="4127905"/><text x="9.4359%" y="239.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h8e0f56f6ac8014d1E.llvm.6127000297180534061 (576,272,141 samples, 1.43%)</title><rect x="8.2289%" y="277" width="1.4339%" height="15" fill="rgb(249,174,33)" fg:x="3307194207" fg:w="576272141"/><text x="8.4789%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (191,638,895 samples, 0.48%)</title><rect x="9.1859%" y="261" width="0.4768%" height="15" fill="rgb(233,201,37)" fg:x="3691827453" fg:w="191638895"/><text x="9.4359%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::RRPickerPicker&gt; (187,510,990 samples, 0.47%)</title><rect x="9.1962%" y="245" width="0.4666%" height="15" fill="rgb(221,78,26)" fg:x="3695955358" fg:w="187510990"/><text x="9.4462%" y="255.50"></text></g><g><title>__GI___libc_free (4,067,259 samples, 0.01%)</title><rect x="9.8653%" y="229" width="0.0101%" height="15" fill="rgb(250,127,30)" fg:x="3964877382" fg:w="4067259"/><text x="10.1153%" y="239.50"></text></g><g><title>_int_free (4,067,259 samples, 0.01%)</title><rect x="9.8653%" y="213" width="0.0101%" height="15" fill="rgb(230,49,44)" fg:x="3964877382" fg:w="4067259"/><text x="10.1153%" y="223.50"></text></g><g><title>_int_malloc (8,158,460 samples, 0.02%)</title><rect x="9.8856%" y="213" width="0.0203%" height="15" fill="rgb(229,67,23)" fg:x="3973031353" fg:w="8158460"/><text x="10.1356%" y="223.50"></text></g><g><title>__GI___libc_malloc (16,337,084 samples, 0.04%)</title><rect x="9.8755%" y="229" width="0.0406%" height="15" fill="rgb(249,83,47)" fg:x="3968944641" fg:w="16337084"/><text x="10.1255%" y="239.50"></text></g><g><title>tcache_get (4,091,912 samples, 0.01%)</title><rect x="9.9059%" y="213" width="0.0102%" height="15" fill="rgb(215,43,3)" fg:x="3981189813" fg:w="4091912"/><text x="10.1559%" y="223.50"></text></g><g><title>tcache_get_n (4,091,912 samples, 0.01%)</title><rect x="9.9059%" y="197" width="0.0102%" height="15" fill="rgb(238,154,13)" fg:x="3981189813" fg:w="4091912"/><text x="10.1559%" y="207.50"></text></g><g><title>__memset_avx2_unaligned (8,170,944 samples, 0.02%)</title><rect x="9.9161%" y="229" width="0.0203%" height="15" fill="rgb(219,56,2)" fg:x="3985281725" fg:w="8170944"/><text x="10.1661%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h495a2cfee390e142E.llvm.2064171167310178009 (129,793,554 samples, 0.32%)</title><rect x="9.7439%" y="245" width="0.3229%" height="15" fill="rgb(233,0,4)" fg:x="3916069090" fg:w="129793554"/><text x="9.9939%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (52,409,975 samples, 0.13%)</title><rect x="9.9364%" y="229" width="0.1304%" height="15" fill="rgb(235,30,7)" fg:x="3993452669" fg:w="52409975"/><text x="10.1864%" y="239.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h9606873de48317d2E.llvm.247025227557853271 (20,152,603 samples, 0.05%)</title><rect x="10.0167%" y="213" width="0.0501%" height="15" fill="rgb(250,79,13)" fg:x="4025710041" fg:w="20152603"/><text x="10.2667%" y="223.50"></text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::set (215,207,958 samples, 0.54%)</title><rect x="9.6628%" y="277" width="0.5355%" height="15" fill="rgb(211,146,34)" fg:x="3883466348" fg:w="215207958"/><text x="9.9128%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (207,085,885 samples, 0.52%)</title><rect x="9.6830%" y="261" width="0.5153%" height="15" fill="rgb(228,22,38)" fg:x="3891588421" fg:w="207085885"/><text x="9.9330%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (52,811,662 samples, 0.13%)</title><rect x="10.0668%" y="245" width="0.1314%" height="15" fill="rgb(235,168,5)" fg:x="4045862644" fg:w="52811662"/><text x="10.3168%" y="255.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h9606873de48317d2E.llvm.247025227557853271 (8,070,171 samples, 0.02%)</title><rect x="10.1782%" y="229" width="0.0201%" height="15" fill="rgb(221,155,16)" fg:x="4090604135" fg:w="8070171"/><text x="10.4282%" y="239.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (4,044,951 samples, 0.01%)</title><rect x="10.1982%" y="277" width="0.0101%" height="15" fill="rgb(215,215,53)" fg:x="4098674306" fg:w="4044951"/><text x="10.4482%" y="287.50"></text></g><g><title>bencher::Bencher::iter (2,953,058,752 samples, 7.35%)</title><rect x="2.8908%" y="293" width="7.3477%" height="15" fill="rgb(223,4,10)" fg:x="1161802990" fg:w="2953058752"/><text x="3.1408%" y="303.50">bencher::B..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (12,142,485 samples, 0.03%)</title><rect x="10.2083%" y="277" width="0.0302%" height="15" fill="rgb(234,103,6)" fg:x="4102719257" fg:w="12142485"/><text x="10.4583%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,104,057 samples, 0.03%)</title><rect x="10.2385%" y="277" width="0.0301%" height="15" fill="rgb(227,97,0)" fg:x="4114861742" fg:w="12104057"/><text x="10.4885%" y="287.50"></text></g><g><title>__GI___libc_free (7,952,673 samples, 0.02%)</title><rect x="10.3285%" y="245" width="0.0198%" height="15" fill="rgb(234,150,53)" fg:x="4151024711" fg:w="7952673"/><text x="10.5785%" y="255.50"></text></g><g><title>_int_free (7,952,673 samples, 0.02%)</title><rect x="10.3285%" y="229" width="0.0198%" height="15" fill="rgb(228,201,54)" fg:x="4151024711" fg:w="7952673"/><text x="10.5785%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44,396,130 samples, 0.11%)</title><rect x="10.2785%" y="261" width="0.1105%" height="15" fill="rgb(222,22,37)" fg:x="4130939169" fg:w="44396130"/><text x="10.5285%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (16,357,915 samples, 0.04%)</title><rect x="10.3483%" y="245" width="0.0407%" height="15" fill="rgb(237,53,32)" fg:x="4158977384" fg:w="16357915"/><text x="10.5983%" y="255.50"></text></g><g><title>_int_free (24,519,614 samples, 0.06%)</title><rect x="10.3991%" y="245" width="0.0610%" height="15" fill="rgb(233,25,53)" fg:x="4179396084" fg:w="24519614"/><text x="10.6491%" y="255.50"></text></g><g><title>__GI___libc_free (72,820,624 samples, 0.18%)</title><rect x="10.3890%" y="261" width="0.1812%" height="15" fill="rgb(210,40,34)" fg:x="4175335299" fg:w="72820624"/><text x="10.6390%" y="271.50"></text></g><g><title>_int_free_maybe_consolidate (44,240,225 samples, 0.11%)</title><rect x="10.4601%" y="245" width="0.1101%" height="15" fill="rgb(241,220,44)" fg:x="4203915698" fg:w="44240225"/><text x="10.7101%" y="255.50"></text></g><g><title>malloc_consolidate (44,240,225 samples, 0.11%)</title><rect x="10.4601%" y="229" width="0.1101%" height="15" fill="rgb(235,28,35)" fg:x="4203915698" fg:w="44240225"/><text x="10.7101%" y="239.50"></text></g><g><title>unlink_chunk (12,076,913 samples, 0.03%)</title><rect x="10.5401%" y="213" width="0.0300%" height="15" fill="rgb(210,56,17)" fg:x="4236079010" fg:w="12076913"/><text x="10.7901%" y="223.50"></text></g><g><title>__rdl_dealloc (14,202,751 samples, 0.04%)</title><rect x="10.5702%" y="261" width="0.0353%" height="15" fill="rgb(224,130,29)" fg:x="4248155923" fg:w="14202751"/><text x="10.8202%" y="271.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.13988653600275597160 (139,379,261 samples, 0.35%)</title><rect x="10.2686%" y="277" width="0.3468%" height="15" fill="rgb(235,212,8)" fg:x="4126965799" fg:w="139379261"/><text x="10.5186%" y="287.50"></text></g><g><title>lb_apis::batched (4,269,674,212 samples, 10.62%)</title><rect x="0.0207%" y="309" width="10.6237%" height="15" fill="rgb(223,33,50)" fg:x="8326359" fg:w="4269674212"/><text x="0.2707%" y="319.50">lb_apis::batched</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::DelegatingPolicy&gt; (163,138,829 samples, 0.41%)</title><rect x="10.2385%" y="293" width="0.4059%" height="15" fill="rgb(219,149,13)" fg:x="4114861742" fg:w="163138829"/><text x="10.4885%" y="303.50"></text></g><g><title>__GI___libc_free (11,655,511 samples, 0.03%)</title><rect x="10.6154%" y="277" width="0.0290%" height="15" fill="rgb(250,156,29)" fg:x="4266345060" fg:w="11655511"/><text x="10.8654%" y="287.50"></text></g><g><title>_int_free_maybe_consolidate (11,655,511 samples, 0.03%)</title><rect x="10.6154%" y="261" width="0.0290%" height="15" fill="rgb(216,193,19)" fg:x="4266345060" fg:w="11655511"/><text x="10.8654%" y="271.50"></text></g><g><title>malloc_consolidate (11,655,511 samples, 0.03%)</title><rect x="10.6154%" y="245" width="0.0290%" height="15" fill="rgb(216,135,14)" fg:x="4266345060" fg:w="11655511"/><text x="10.8654%" y="255.50"></text></g><g><title>unlink_chunk (4,109,834 samples, 0.01%)</title><rect x="10.6342%" y="229" width="0.0102%" height="15" fill="rgb(241,47,5)" fg:x="4273890737" fg:w="4109834"/><text x="10.8842%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4,144,559 samples, 0.01%)</title><rect x="10.8199%" y="261" width="0.0103%" height="15" fill="rgb(233,42,35)" fg:x="4348497410" fg:w="4144559"/><text x="11.0699%" y="271.50"></text></g><g><title>[unknown] (8,136,571 samples, 0.02%)</title><rect x="11.2426%" y="181" width="0.0202%" height="15" fill="rgb(231,13,6)" fg:x="4518407889" fg:w="8136571"/><text x="11.4926%" y="191.50"></text></g><g><title>[unknown] (8,136,571 samples, 0.02%)</title><rect x="11.2426%" y="165" width="0.0202%" height="15" fill="rgb(207,181,40)" fg:x="4518407889" fg:w="8136571"/><text x="11.4926%" y="175.50"></text></g><g><title>[unknown] (8,136,571 samples, 0.02%)</title><rect x="11.2426%" y="149" width="0.0202%" height="15" fill="rgb(254,173,49)" fg:x="4518407889" fg:w="8136571"/><text x="11.4926%" y="159.50"></text></g><g><title>[unknown] (8,136,571 samples, 0.02%)</title><rect x="11.2426%" y="133" width="0.0202%" height="15" fill="rgb(221,1,38)" fg:x="4518407889" fg:w="8136571"/><text x="11.4926%" y="143.50"></text></g><g><title>[unknown] (8,136,571 samples, 0.02%)</title><rect x="11.2426%" y="117" width="0.0202%" height="15" fill="rgb(206,124,46)" fg:x="4518407889" fg:w="8136571"/><text x="11.4926%" y="127.50"></text></g><g><title>checked_request2size (4,137,676 samples, 0.01%)</title><rect x="11.2629%" y="181" width="0.0103%" height="15" fill="rgb(249,21,11)" fg:x="4526544460" fg:w="4137676"/><text x="11.5129%" y="191.50"></text></g><g><title>_int_malloc (49,395,541 samples, 0.12%)</title><rect x="11.1606%" y="197" width="0.1229%" height="15" fill="rgb(222,201,40)" fg:x="4485426088" fg:w="49395541"/><text x="11.4106%" y="207.50"></text></g><g><title>unlink_chunk (4,139,493 samples, 0.01%)</title><rect x="11.2732%" y="181" width="0.0103%" height="15" fill="rgb(235,61,29)" fg:x="4530682136" fg:w="4139493"/><text x="11.5232%" y="191.50"></text></g><g><title>__GI___libc_malloc (66,032,498 samples, 0.16%)</title><rect x="11.1398%" y="213" width="0.1643%" height="15" fill="rgb(219,207,3)" fg:x="4477103701" fg:w="66032498"/><text x="11.3898%" y="223.50"></text></g><g><title>checked_request2size (8,314,570 samples, 0.02%)</title><rect x="11.2835%" y="197" width="0.0207%" height="15" fill="rgb(222,56,46)" fg:x="4534821629" fg:w="8314570"/><text x="11.5335%" y="207.50"></text></g><g><title>_ZN115_$LT$lb_apis..del_pol_cb..WrappedController$u20$as$u20$grpc..client..load_balancing..ChannelControllerCallbacks$GT$14new_subchannel17h0141975eaf9a6d3bE.llvm.8308943596923409684 (86,774,574 samples, 0.22%)</title><rect x="11.0985%" y="229" width="0.2159%" height="15" fill="rgb(239,76,54)" fg:x="4460505515" fg:w="86774574"/><text x="11.3485%" y="239.50"></text></g><g><title>__rdl_alloc (4,143,890 samples, 0.01%)</title><rect x="11.3041%" y="213" width="0.0103%" height="15" fill="rgb(231,124,27)" fg:x="4543136199" fg:w="4143890"/><text x="11.5541%" y="223.50"></text></g><g><title>[unknown] (4,094,870 samples, 0.01%)</title><rect x="11.4684%" y="213" width="0.0102%" height="15" fill="rgb(249,195,6)" fg:x="4609130917" fg:w="4094870"/><text x="11.7184%" y="223.50"></text></g><g><title>[unknown] (4,094,870 samples, 0.01%)</title><rect x="11.4684%" y="197" width="0.0102%" height="15" fill="rgb(237,174,47)" fg:x="4609130917" fg:w="4094870"/><text x="11.7184%" y="207.50"></text></g><g><title>[unknown] (4,094,870 samples, 0.01%)</title><rect x="11.4684%" y="181" width="0.0102%" height="15" fill="rgb(206,201,31)" fg:x="4609130917" fg:w="4094870"/><text x="11.7184%" y="191.50"></text></g><g><title>[unknown] (4,094,870 samples, 0.01%)</title><rect x="11.4684%" y="165" width="0.0102%" height="15" fill="rgb(231,57,52)" fg:x="4609130917" fg:w="4094870"/><text x="11.7184%" y="175.50"></text></g><g><title>[unknown] (4,094,870 samples, 0.01%)</title><rect x="11.4684%" y="149" width="0.0102%" height="15" fill="rgb(248,177,22)" fg:x="4609130917" fg:w="4094870"/><text x="11.7184%" y="159.50"></text></g><g><title>[unknown] (4,094,870 samples, 0.01%)</title><rect x="11.4684%" y="133" width="0.0102%" height="15" fill="rgb(215,211,37)" fg:x="4609130917" fg:w="4094870"/><text x="11.7184%" y="143.50"></text></g><g><title>[unknown] (4,094,870 samples, 0.01%)</title><rect x="11.4684%" y="117" width="0.0102%" height="15" fill="rgb(241,128,51)" fg:x="4609130917" fg:w="4094870"/><text x="11.7184%" y="127.50"></text></g><g><title>[unknown] (4,094,870 samples, 0.01%)</title><rect x="11.4684%" y="101" width="0.0102%" height="15" fill="rgb(227,165,31)" fg:x="4609130917" fg:w="4094870"/><text x="11.7184%" y="111.50"></text></g><g><title>[unknown] (4,094,870 samples, 0.01%)</title><rect x="11.4684%" y="85" width="0.0102%" height="15" fill="rgb(228,167,24)" fg:x="4609130917" fg:w="4094870"/><text x="11.7184%" y="95.50"></text></g><g><title>[unknown] (16,492,927 samples, 0.04%)</title><rect x="11.7364%" y="181" width="0.0410%" height="15" fill="rgb(228,143,12)" fg:x="4716867494" fg:w="16492927"/><text x="11.9864%" y="191.50"></text></g><g><title>[unknown] (16,492,927 samples, 0.04%)</title><rect x="11.7364%" y="165" width="0.0410%" height="15" fill="rgb(249,149,8)" fg:x="4716867494" fg:w="16492927"/><text x="11.9864%" y="175.50"></text></g><g><title>[unknown] (16,492,927 samples, 0.04%)</title><rect x="11.7364%" y="149" width="0.0410%" height="15" fill="rgb(243,35,44)" fg:x="4716867494" fg:w="16492927"/><text x="11.9864%" y="159.50"></text></g><g><title>[unknown] (16,492,927 samples, 0.04%)</title><rect x="11.7364%" y="133" width="0.0410%" height="15" fill="rgb(246,89,9)" fg:x="4716867494" fg:w="16492927"/><text x="11.9864%" y="143.50"></text></g><g><title>[unknown] (12,316,550 samples, 0.03%)</title><rect x="11.7468%" y="117" width="0.0306%" height="15" fill="rgb(233,213,13)" fg:x="4721043871" fg:w="12316550"/><text x="11.9968%" y="127.50"></text></g><g><title>[unknown] (12,316,550 samples, 0.03%)</title><rect x="11.7468%" y="101" width="0.0306%" height="15" fill="rgb(233,141,41)" fg:x="4721043871" fg:w="12316550"/><text x="11.9968%" y="111.50"></text></g><g><title>[unknown] (8,203,909 samples, 0.02%)</title><rect x="11.7570%" y="85" width="0.0204%" height="15" fill="rgb(239,167,4)" fg:x="4725156512" fg:w="8203909"/><text x="12.0070%" y="95.50"></text></g><g><title>[unknown] (4,090,150 samples, 0.01%)</title><rect x="11.7673%" y="69" width="0.0102%" height="15" fill="rgb(209,217,16)" fg:x="4729270271" fg:w="4090150"/><text x="12.0173%" y="79.50"></text></g><g><title>[unknown] (4,090,150 samples, 0.01%)</title><rect x="11.7673%" y="53" width="0.0102%" height="15" fill="rgb(219,88,35)" fg:x="4729270271" fg:w="4090150"/><text x="12.0173%" y="63.50"></text></g><g><title>[unknown] (4,090,150 samples, 0.01%)</title><rect x="11.7673%" y="37" width="0.0102%" height="15" fill="rgb(220,193,23)" fg:x="4729270271" fg:w="4090150"/><text x="12.0173%" y="47.50"></text></g><g><title>__GI___libc_malloc (124,306,326 samples, 0.31%)</title><rect x="11.4785%" y="213" width="0.3093%" height="15" fill="rgb(230,90,52)" fg:x="4613225787" fg:w="124306326"/><text x="11.7285%" y="223.50"></text></g><g><title>_int_malloc (107,734,150 samples, 0.27%)</title><rect x="11.5198%" y="197" width="0.2681%" height="15" fill="rgb(252,106,19)" fg:x="4629797963" fg:w="107734150"/><text x="11.7698%" y="207.50"></text></g><g><title>unlink_chunk (4,171,692 samples, 0.01%)</title><rect x="11.7775%" y="181" width="0.0104%" height="15" fill="rgb(206,74,20)" fg:x="4733360421" fg:w="4171692"/><text x="12.0275%" y="191.50"></text></g><g><title>__rdl_alloc (4,149,395 samples, 0.01%)</title><rect x="11.7878%" y="213" width="0.0103%" height="15" fill="rgb(230,138,44)" fg:x="4737532113" fg:w="4149395"/><text x="12.0378%" y="223.50"></text></g><g><title>__rust_alloc (4,147,283 samples, 0.01%)</title><rect x="11.7982%" y="213" width="0.0103%" height="15" fill="rgb(235,182,43)" fg:x="4741681508" fg:w="4147283"/><text x="12.0482%" y="223.50"></text></g><g><title>_ZN116_$LT$lb_apis..StubChannelControllerCallbacks$u20$as$u20$grpc..client..load_balancing..ChannelControllerCallbacks$GT$14new_subchannel17hcdcb3d6e4c734d49E.llvm.8982057957549636664 (215,085,996 samples, 0.54%)</title><rect x="11.3145%" y="229" width="0.5352%" height="15" fill="rgb(242,16,51)" fg:x="4547280089" fg:w="215085996"/><text x="11.5645%" y="239.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (16,537,294 samples, 0.04%)</title><rect x="11.8085%" y="213" width="0.0411%" height="15" fill="rgb(248,9,4)" fg:x="4745828791" fg:w="16537294"/><text x="12.0585%" y="223.50"></text></g><g><title>_int_malloc (24,810,943 samples, 0.06%)</title><rect x="11.8600%" y="213" width="0.0617%" height="15" fill="rgb(210,31,22)" fg:x="4766531128" fg:w="24810943"/><text x="12.1100%" y="223.50"></text></g><g><title>[unknown] (4,119,990 samples, 0.01%)</title><rect x="11.9115%" y="197" width="0.0103%" height="15" fill="rgb(239,54,39)" fg:x="4787222081" fg:w="4119990"/><text x="12.1615%" y="207.50"></text></g><g><title>[unknown] (4,119,990 samples, 0.01%)</title><rect x="11.9115%" y="181" width="0.0103%" height="15" fill="rgb(230,99,41)" fg:x="4787222081" fg:w="4119990"/><text x="12.1615%" y="191.50"></text></g><g><title>[unknown] (4,119,990 samples, 0.01%)</title><rect x="11.9115%" y="165" width="0.0103%" height="15" fill="rgb(253,106,12)" fg:x="4787222081" fg:w="4119990"/><text x="12.1615%" y="175.50"></text></g><g><title>[unknown] (4,119,990 samples, 0.01%)</title><rect x="11.9115%" y="149" width="0.0103%" height="15" fill="rgb(213,46,41)" fg:x="4787222081" fg:w="4119990"/><text x="12.1615%" y="159.50"></text></g><g><title>[unknown] (4,119,990 samples, 0.01%)</title><rect x="11.9115%" y="133" width="0.0103%" height="15" fill="rgb(215,133,35)" fg:x="4787222081" fg:w="4119990"/><text x="12.1615%" y="143.50"></text></g><g><title>[unknown] (4,119,990 samples, 0.01%)</title><rect x="11.9115%" y="117" width="0.0103%" height="15" fill="rgb(213,28,5)" fg:x="4787222081" fg:w="4119990"/><text x="12.1615%" y="127.50"></text></g><g><title>[unknown] (4,119,990 samples, 0.01%)</title><rect x="11.9115%" y="101" width="0.0103%" height="15" fill="rgb(215,77,49)" fg:x="4787222081" fg:w="4119990"/><text x="12.1615%" y="111.50"></text></g><g><title>__GI___libc_malloc (33,152,375 samples, 0.08%)</title><rect x="11.8496%" y="229" width="0.0825%" height="15" fill="rgb(248,100,22)" fg:x="4762366085" fg:w="33152375"/><text x="12.0996%" y="239.50"></text></g><g><title>tcache_get (4,176,389 samples, 0.01%)</title><rect x="11.9217%" y="213" width="0.0104%" height="15" fill="rgb(208,67,9)" fg:x="4791342071" fg:w="4176389"/><text x="12.1717%" y="223.50"></text></g><g><title>tcache_get_n (4,176,389 samples, 0.01%)</title><rect x="11.9217%" y="197" width="0.0104%" height="15" fill="rgb(219,133,21)" fg:x="4791342071" fg:w="4176389"/><text x="12.1717%" y="207.50"></text></g><g><title>__rust_alloc (4,124,886 samples, 0.01%)</title><rect x="11.9321%" y="229" width="0.0103%" height="15" fill="rgb(246,46,29)" fg:x="4795518460" fg:w="4124886"/><text x="12.1821%" y="239.50"></text></g><g><title>__GI___libc_malloc (4,156,046 samples, 0.01%)</title><rect x="11.9528%" y="197" width="0.0103%" height="15" fill="rgb(246,185,52)" fg:x="4803825418" fg:w="4156046"/><text x="12.2028%" y="207.50"></text></g><g><title>__GI_memcpy (20,773,412 samples, 0.05%)</title><rect x="11.9835%" y="165" width="0.0517%" height="15" fill="rgb(252,136,11)" fg:x="4816164340" fg:w="20773412"/><text x="12.2335%" y="175.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20,773,412 samples, 0.05%)</title><rect x="11.9835%" y="149" width="0.0517%" height="15" fill="rgb(219,138,53)" fg:x="4816164340" fg:w="20773412"/><text x="12.2335%" y="159.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel (430,251,705 samples, 1.07%)</title><rect x="10.9749%" y="245" width="1.0705%" height="15" fill="rgb(211,51,23)" fg:x="4410830801" fg:w="430251705"/><text x="11.2249%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (41,439,160 samples, 0.10%)</title><rect x="11.9424%" y="229" width="0.1031%" height="15" fill="rgb(247,221,28)" fg:x="4799643346" fg:w="41439160"/><text x="12.1924%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (41,439,160 samples, 0.10%)</title><rect x="11.9424%" y="213" width="0.1031%" height="15" fill="rgb(251,222,45)" fg:x="4799643346" fg:w="41439160"/><text x="12.1924%" y="223.50"></text></g><g><title>__GI___libc_realloc (33,101,042 samples, 0.08%)</title><rect x="11.9631%" y="197" width="0.0824%" height="15" fill="rgb(217,162,53)" fg:x="4807981464" fg:w="33101042"/><text x="12.2131%" y="207.50"></text></g><g><title>_int_realloc (24,918,166 samples, 0.06%)</title><rect x="11.9835%" y="181" width="0.0620%" height="15" fill="rgb(229,93,14)" fg:x="4816164340" fg:w="24918166"/><text x="12.2335%" y="191.50"></text></g><g><title>_int_malloc (4,144,754 samples, 0.01%)</title><rect x="12.0352%" y="165" width="0.0103%" height="15" fill="rgb(209,67,49)" fg:x="4836937752" fg:w="4144754"/><text x="12.2852%" y="175.50"></text></g><g><title>_int_free (45,391,198 samples, 0.11%)</title><rect x="12.0661%" y="229" width="0.1129%" height="15" fill="rgb(213,87,29)" fg:x="4849384354" fg:w="45391198"/><text x="12.3161%" y="239.50"></text></g><g><title>tcache_put (4,133,452 samples, 0.01%)</title><rect x="12.1688%" y="213" width="0.0103%" height="15" fill="rgb(205,151,52)" fg:x="4890642100" fg:w="4133452"/><text x="12.4188%" y="223.50"></text></g><g><title>_int_free_create_chunk (4,188,848 samples, 0.01%)</title><rect x="12.1791%" y="213" width="0.0104%" height="15" fill="rgb(253,215,39)" fg:x="4894775552" fg:w="4188848"/><text x="12.4291%" y="223.50"></text></g><g><title>_int_free_merge_chunk (8,346,213 samples, 0.02%)</title><rect x="12.1791%" y="229" width="0.0208%" height="15" fill="rgb(221,220,41)" fg:x="4894775552" fg:w="8346213"/><text x="12.4291%" y="239.50"></text></g><g><title>free_perturb (4,157,365 samples, 0.01%)</title><rect x="12.1895%" y="213" width="0.0103%" height="15" fill="rgb(218,133,21)" fg:x="4898964400" fg:w="4157365"/><text x="12.4395%" y="223.50"></text></g><g><title>__GI___libc_free (66,179,152 samples, 0.16%)</title><rect x="12.0455%" y="245" width="0.1647%" height="15" fill="rgb(221,193,43)" fg:x="4841082506" fg:w="66179152"/><text x="12.2955%" y="255.50"></text></g><g><title>arena_for_chunk (4,139,893 samples, 0.01%)</title><rect x="12.1999%" y="229" width="0.0103%" height="15" fill="rgb(240,128,52)" fg:x="4903121765" fg:w="4139893"/><text x="12.4499%" y="239.50"></text></g><g><title>checked_request2size (4,177,878 samples, 0.01%)</title><rect x="12.2719%" y="213" width="0.0104%" height="15" fill="rgb(253,114,12)" fg:x="4932071251" fg:w="4177878"/><text x="12.5219%" y="223.50"></text></g><g><title>__GI___libc_malloc (33,139,552 samples, 0.08%)</title><rect x="12.2102%" y="245" width="0.0825%" height="15" fill="rgb(215,223,47)" fg:x="4907261658" fg:w="33139552"/><text x="12.4602%" y="255.50"></text></g><g><title>_int_malloc (24,841,733 samples, 0.06%)</title><rect x="12.2308%" y="229" width="0.0618%" height="15" fill="rgb(248,225,23)" fg:x="4915559477" fg:w="24841733"/><text x="12.4808%" y="239.50"></text></g><g><title>unlink_chunk (4,152,081 samples, 0.01%)</title><rect x="12.2823%" y="213" width="0.0103%" height="15" fill="rgb(250,108,0)" fg:x="4936249129" fg:w="4152081"/><text x="12.5323%" y="223.50"></text></g><g><title>__rdl_alloc (4,186,870 samples, 0.01%)</title><rect x="12.2926%" y="245" width="0.0104%" height="15" fill="rgb(228,208,7)" fg:x="4940401210" fg:w="4186870"/><text x="12.5426%" y="255.50"></text></g><g><title>__rust_alloc (8,274,832 samples, 0.02%)</title><rect x="12.3030%" y="245" width="0.0206%" height="15" fill="rgb(244,45,10)" fg:x="4944588080" fg:w="8274832"/><text x="12.5530%" y="255.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::connect (4,153,468 samples, 0.01%)</title><rect x="12.3236%" y="245" width="0.0103%" height="15" fill="rgb(207,125,25)" fg:x="4952862912" fg:w="4153468"/><text x="12.5736%" y="255.50"></text></g><g><title>__GI___libc_free (4,088,874 samples, 0.01%)</title><rect x="12.5710%" y="213" width="0.0102%" height="15" fill="rgb(210,195,18)" fg:x="5052276156" fg:w="4088874"/><text x="12.8210%" y="223.50"></text></g><g><title>_int_free (4,088,874 samples, 0.01%)</title><rect x="12.5710%" y="197" width="0.0102%" height="15" fill="rgb(249,80,12)" fg:x="5052276156" fg:w="4088874"/><text x="12.8210%" y="207.50"></text></g><g><title>__GI___libc_malloc (16,600,329 samples, 0.04%)</title><rect x="12.5812%" y="213" width="0.0413%" height="15" fill="rgb(221,65,9)" fg:x="5056365030" fg:w="16600329"/><text x="12.8312%" y="223.50"></text></g><g><title>_int_malloc (16,600,329 samples, 0.04%)</title><rect x="12.5812%" y="197" width="0.0413%" height="15" fill="rgb(235,49,36)" fg:x="5056365030" fg:w="16600329"/><text x="12.8312%" y="207.50"></text></g><g><title>[unknown] (8,306,350 samples, 0.02%)</title><rect x="12.6018%" y="181" width="0.0207%" height="15" fill="rgb(225,32,20)" fg:x="5064659009" fg:w="8306350"/><text x="12.8518%" y="191.50"></text></g><g><title>[unknown] (8,306,350 samples, 0.02%)</title><rect x="12.6018%" y="165" width="0.0207%" height="15" fill="rgb(215,141,46)" fg:x="5064659009" fg:w="8306350"/><text x="12.8518%" y="175.50"></text></g><g><title>[unknown] (8,306,350 samples, 0.02%)</title><rect x="12.6018%" y="149" width="0.0207%" height="15" fill="rgb(250,160,47)" fg:x="5064659009" fg:w="8306350"/><text x="12.8518%" y="159.50"></text></g><g><title>[unknown] (8,306,350 samples, 0.02%)</title><rect x="12.6018%" y="133" width="0.0207%" height="15" fill="rgb(216,222,40)" fg:x="5064659009" fg:w="8306350"/><text x="12.8518%" y="143.50"></text></g><g><title>[unknown] (8,306,350 samples, 0.02%)</title><rect x="12.6018%" y="117" width="0.0207%" height="15" fill="rgb(234,217,39)" fg:x="5064659009" fg:w="8306350"/><text x="12.8518%" y="127.50"></text></g><g><title>[unknown] (8,306,350 samples, 0.02%)</title><rect x="12.6018%" y="101" width="0.0207%" height="15" fill="rgb(207,178,40)" fg:x="5064659009" fg:w="8306350"/><text x="12.8518%" y="111.50"></text></g><g><title>[unknown] (8,306,350 samples, 0.02%)</title><rect x="12.6018%" y="85" width="0.0207%" height="15" fill="rgb(221,136,13)" fg:x="5064659009" fg:w="8306350"/><text x="12.8518%" y="95.50"></text></g><g><title>[unknown] (4,143,938 samples, 0.01%)</title><rect x="12.6121%" y="69" width="0.0103%" height="15" fill="rgb(249,199,10)" fg:x="5068821421" fg:w="4143938"/><text x="12.8621%" y="79.50"></text></g><g><title>[unknown] (4,143,938 samples, 0.01%)</title><rect x="12.6121%" y="53" width="0.0103%" height="15" fill="rgb(249,222,13)" fg:x="5068821421" fg:w="4143938"/><text x="12.8621%" y="63.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.7027266497679388191 (128,679,003 samples, 0.32%)</title><rect x="12.3954%" y="229" width="0.3202%" height="15" fill="rgb(244,185,38)" fg:x="4981707069" fg:w="128679003"/><text x="12.6454%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (37,420,713 samples, 0.09%)</title><rect x="12.6225%" y="213" width="0.0931%" height="15" fill="rgb(236,202,9)" fg:x="5072965359" fg:w="37420713"/><text x="12.8725%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (186,494,365 samples, 0.46%)</title><rect x="12.3340%" y="245" width="0.4640%" height="15" fill="rgb(250,229,37)" fg:x="4957016380" fg:w="186494365"/><text x="12.5840%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33,124,673 samples, 0.08%)</title><rect x="12.7156%" y="229" width="0.0824%" height="15" fill="rgb(206,174,23)" fg:x="5110386072" fg:w="33124673"/><text x="12.9656%" y="239.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (807,377,171 samples, 2.01%)</title><rect x="10.8302%" y="261" width="2.0089%" height="15" fill="rgb(211,33,43)" fg:x="4352641969" fg:w="807377171"/><text x="11.0802%" y="271.50">&lt;..</text></g><g><title>tokio::sync::notify::Notify::notify_one (16,508,395 samples, 0.04%)</title><rect x="12.7980%" y="245" width="0.0411%" height="15" fill="rgb(245,58,50)" fg:x="5143510745" fg:w="16508395"/><text x="13.0480%" y="255.50"></text></g><g><title>__GI___libc_malloc (4,177,268 samples, 0.01%)</title><rect x="12.8391%" y="245" width="0.0104%" height="15" fill="rgb(244,68,36)" fg:x="5160019140" fg:w="4177268"/><text x="13.0891%" y="255.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicyBuilder as grpc::client::load_balancing::LbPolicyBuilderCallbacks&gt;::build (16,652,771 samples, 0.04%)</title><rect x="12.8391%" y="261" width="0.0414%" height="15" fill="rgb(232,229,15)" fg:x="5160019140" fg:w="16652771"/><text x="13.0891%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (12,475,503 samples, 0.03%)</title><rect x="12.8495%" y="245" width="0.0310%" height="15" fill="rgb(254,30,23)" fg:x="5164196408" fg:w="12475503"/><text x="13.0995%" y="255.50"></text></g><g><title>__GI___libc_malloc (91,589,449 samples, 0.23%)</title><rect x="13.0347%" y="213" width="0.2279%" height="15" fill="rgb(235,160,14)" fg:x="5238652836" fg:w="91589449"/><text x="13.2847%" y="223.50"></text></g><g><title>_int_malloc (83,297,977 samples, 0.21%)</title><rect x="13.0554%" y="197" width="0.2073%" height="15" fill="rgb(212,155,44)" fg:x="5246944308" fg:w="83297977"/><text x="13.3054%" y="207.50"></text></g><g><title>checked_request2size (4,164,940 samples, 0.01%)</title><rect x="13.2522%" y="181" width="0.0104%" height="15" fill="rgb(226,2,50)" fg:x="5326077345" fg:w="4164940"/><text x="13.5022%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned (8,261,601 samples, 0.02%)</title><rect x="13.2626%" y="213" width="0.0206%" height="15" fill="rgb(234,177,6)" fg:x="5330242285" fg:w="8261601"/><text x="13.5126%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,180,645 samples, 0.01%)</title><rect x="13.2832%" y="213" width="0.0104%" height="15" fill="rgb(217,24,9)" fg:x="5338503886" fg:w="4180645"/><text x="13.5332%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (120,709,927 samples, 0.30%)</title><rect x="13.0036%" y="229" width="0.3003%" height="15" fill="rgb(220,13,46)" fg:x="5226145590" fg:w="120709927"/><text x="13.2536%" y="239.50"></text></g><g><title>__rust_alloc (4,170,986 samples, 0.01%)</title><rect x="13.2936%" y="213" width="0.0104%" height="15" fill="rgb(239,221,27)" fg:x="5342684531" fg:w="4170986"/><text x="13.5436%" y="223.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17he913d698642fd5ddE.llvm.8308943596923409684 (178,400,062 samples, 0.44%)</title><rect x="12.8805%" y="261" width="0.4439%" height="15" fill="rgb(222,198,25)" fg:x="5176671911" fg:w="178400062"/><text x="13.1305%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (178,400,062 samples, 0.44%)</title><rect x="12.8805%" y="245" width="0.4439%" height="15" fill="rgb(211,99,13)" fg:x="5176671911" fg:w="178400062"/><text x="13.1305%" y="255.50"></text></g><g><title>__GI___libc_malloc (8,216,456 samples, 0.02%)</title><rect x="13.3039%" y="229" width="0.0204%" height="15" fill="rgb(232,111,31)" fg:x="5346855517" fg:w="8216456"/><text x="13.5539%" y="239.50"></text></g><g><title>_int_malloc (8,216,456 samples, 0.02%)</title><rect x="13.3039%" y="213" width="0.0204%" height="15" fill="rgb(245,82,37)" fg:x="5346855517" fg:w="8216456"/><text x="13.5539%" y="223.50"></text></g><g><title>[unknown] (20,513,815 samples, 0.05%)</title><rect x="13.6021%" y="213" width="0.0510%" height="15" fill="rgb(227,149,46)" fg:x="5466680552" fg:w="20513815"/><text x="13.8521%" y="223.50"></text></g><g><title>[unknown] (20,513,815 samples, 0.05%)</title><rect x="13.6021%" y="197" width="0.0510%" height="15" fill="rgb(218,36,50)" fg:x="5466680552" fg:w="20513815"/><text x="13.8521%" y="207.50"></text></g><g><title>[unknown] (16,456,507 samples, 0.04%)</title><rect x="13.6122%" y="181" width="0.0409%" height="15" fill="rgb(226,80,48)" fg:x="5470737860" fg:w="16456507"/><text x="13.8622%" y="191.50"></text></g><g><title>[unknown] (16,456,507 samples, 0.04%)</title><rect x="13.6122%" y="165" width="0.0409%" height="15" fill="rgb(238,224,15)" fg:x="5470737860" fg:w="16456507"/><text x="13.8622%" y="175.50"></text></g><g><title>[unknown] (16,456,507 samples, 0.04%)</title><rect x="13.6122%" y="149" width="0.0409%" height="15" fill="rgb(241,136,10)" fg:x="5470737860" fg:w="16456507"/><text x="13.8622%" y="159.50"></text></g><g><title>[unknown] (12,310,810 samples, 0.03%)</title><rect x="13.6225%" y="133" width="0.0306%" height="15" fill="rgb(208,32,45)" fg:x="5474883557" fg:w="12310810"/><text x="13.8725%" y="143.50"></text></g><g><title>[unknown] (8,165,405 samples, 0.02%)</title><rect x="13.6328%" y="117" width="0.0203%" height="15" fill="rgb(207,135,9)" fg:x="5479028962" fg:w="8165405"/><text x="13.8828%" y="127.50"></text></g><g><title>[unknown] (8,165,405 samples, 0.02%)</title><rect x="13.6328%" y="101" width="0.0203%" height="15" fill="rgb(206,86,44)" fg:x="5479028962" fg:w="8165405"/><text x="13.8828%" y="111.50"></text></g><g><title>[unknown] (8,165,405 samples, 0.02%)</title><rect x="13.6328%" y="85" width="0.0203%" height="15" fill="rgb(245,177,15)" fg:x="5479028962" fg:w="8165405"/><text x="13.8828%" y="95.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.7027266497679388191 (115,517,857 samples, 0.29%)</title><rect x="13.4783%" y="229" width="0.2874%" height="15" fill="rgb(206,64,50)" fg:x="5416922363" fg:w="115517857"/><text x="13.7283%" y="239.50"></text></g><g><title>core::hash::BuildHasher::hash_one (45,245,853 samples, 0.11%)</title><rect x="13.6531%" y="213" width="0.1126%" height="15" fill="rgb(234,36,40)" fg:x="5487194367" fg:w="45245853"/><text x="13.9031%" y="223.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (12,261,823 samples, 0.03%)</title><rect x="13.7352%" y="197" width="0.0305%" height="15" fill="rgb(213,64,8)" fg:x="5520178397" fg:w="12261823"/><text x="13.9852%" y="207.50"></text></g><g><title>grpc::client::load_balancing::child_manager_cb::Inner&lt;T&gt;::resolve_child_controller (185,674,610 samples, 0.46%)</title><rect x="13.3244%" y="261" width="0.4620%" height="15" fill="rgb(210,75,36)" fg:x="5355071973" fg:w="185674610"/><text x="13.5744%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (185,674,610 samples, 0.46%)</title><rect x="13.3244%" y="245" width="0.4620%" height="15" fill="rgb(229,88,21)" fg:x="5355071973" fg:w="185674610"/><text x="13.5744%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,306,363 samples, 0.02%)</title><rect x="13.7657%" y="229" width="0.0207%" height="15" fill="rgb(252,204,47)" fg:x="5532440220" fg:w="8306363"/><text x="14.0157%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (1,291,633,212 samples, 3.21%)</title><rect x="10.8096%" y="277" width="3.2138%" height="15" fill="rgb(208,77,27)" fg:x="4344363392" fg:w="1291633212"/><text x="11.0596%" y="287.50">&lt;gr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (95,250,021 samples, 0.24%)</title><rect x="13.7864%" y="261" width="0.2370%" height="15" fill="rgb(221,76,26)" fg:x="5540746583" fg:w="95250021"/><text x="14.0364%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (95,250,021 samples, 0.24%)</title><rect x="13.7864%" y="245" width="0.2370%" height="15" fill="rgb(225,139,18)" fg:x="5540746583" fg:w="95250021"/><text x="14.0364%" y="255.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (95,250,021 samples, 0.24%)</title><rect x="13.7864%" y="229" width="0.2370%" height="15" fill="rgb(230,137,11)" fg:x="5540746583" fg:w="95250021"/><text x="14.0364%" y="239.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.7022287322672284463 (86,942,928 samples, 0.22%)</title><rect x="13.8071%" y="213" width="0.2163%" height="15" fill="rgb(212,28,1)" fg:x="5549053676" fg:w="86942928"/><text x="14.0571%" y="223.50"></text></g><g><title>&lt;lb_apis::del_pol_cb::DelegatingPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (1,295,804,914 samples, 3.22%)</title><rect x="10.8096%" y="293" width="3.2242%" height="15" fill="rgb(248,164,17)" fg:x="4344363392" fg:w="1295804914"/><text x="11.0596%" y="303.50">&lt;lb..</text></g><g><title>_ZN7lb_apis10del_pol_cb13update_picker17h37b9e3191a1a2a2eE.llvm.8308943596923409684 (4,171,702 samples, 0.01%)</title><rect x="14.0234%" y="277" width="0.0104%" height="15" fill="rgb(222,171,42)" fg:x="5635996604" fg:w="4171702"/><text x="14.2734%" y="287.50"></text></g><g><title>_int_free (12,462,340 samples, 0.03%)</title><rect x="14.0338%" y="277" width="0.0310%" height="15" fill="rgb(243,84,45)" fg:x="5640168306" fg:w="12462340"/><text x="14.2838%" y="287.50"></text></g><g><title>[unknown] (4,167,205 samples, 0.01%)</title><rect x="14.0544%" y="261" width="0.0104%" height="15" fill="rgb(252,49,23)" fg:x="5648463441" fg:w="4167205"/><text x="14.3044%" y="271.50"></text></g><g><title>[unknown] (4,167,205 samples, 0.01%)</title><rect x="14.0544%" y="245" width="0.0104%" height="15" fill="rgb(215,19,7)" fg:x="5648463441" fg:w="4167205"/><text x="14.3044%" y="255.50"></text></g><g><title>[unknown] (4,167,205 samples, 0.01%)</title><rect x="14.0544%" y="229" width="0.0104%" height="15" fill="rgb(238,81,41)" fg:x="5648463441" fg:w="4167205"/><text x="14.3044%" y="239.50"></text></g><g><title>[unknown] (4,167,205 samples, 0.01%)</title><rect x="14.0544%" y="213" width="0.0104%" height="15" fill="rgb(210,199,37)" fg:x="5648463441" fg:w="4167205"/><text x="14.3044%" y="223.50"></text></g><g><title>[unknown] (4,167,205 samples, 0.01%)</title><rect x="14.0544%" y="197" width="0.0104%" height="15" fill="rgb(244,192,49)" fg:x="5648463441" fg:w="4167205"/><text x="14.3044%" y="207.50"></text></g><g><title>__GI___libc_free (153,208,478 samples, 0.38%)</title><rect x="14.0338%" y="293" width="0.3812%" height="15" fill="rgb(226,211,11)" fg:x="5640168306" fg:w="153208478"/><text x="14.2838%" y="303.50"></text></g><g><title>_int_free_maybe_consolidate (140,746,138 samples, 0.35%)</title><rect x="14.0648%" y="277" width="0.3502%" height="15" fill="rgb(236,162,54)" fg:x="5652630646" fg:w="140746138"/><text x="14.3148%" y="287.50"></text></g><g><title>malloc_consolidate (140,746,138 samples, 0.35%)</title><rect x="14.0648%" y="261" width="0.3502%" height="15" fill="rgb(220,229,9)" fg:x="5652630646" fg:w="140746138"/><text x="14.3148%" y="271.50"></text></g><g><title>unlink_chunk (45,479,079 samples, 0.11%)</title><rect x="14.3018%" y="245" width="0.1132%" height="15" fill="rgb(250,87,22)" fg:x="5747897705" fg:w="45479079"/><text x="14.5518%" y="255.50"></text></g><g><title>_int_malloc (70,335,237 samples, 0.18%)</title><rect x="14.4455%" y="277" width="0.1750%" height="15" fill="rgb(239,43,17)" fg:x="5805658242" fg:w="70335237"/><text x="14.6955%" y="287.50"></text></g><g><title>unlink_chunk (4,176,619 samples, 0.01%)</title><rect x="14.6101%" y="261" width="0.0104%" height="15" fill="rgb(231,177,25)" fg:x="5871816860" fg:w="4176619"/><text x="14.8601%" y="271.50"></text></g><g><title>__GI___libc_malloc (86,755,503 samples, 0.22%)</title><rect x="14.4150%" y="293" width="0.2159%" height="15" fill="rgb(219,179,1)" fg:x="5793376784" fg:w="86755503"/><text x="14.6650%" y="303.50"></text></g><g><title>checked_request2size (4,138,808 samples, 0.01%)</title><rect x="14.6205%" y="277" width="0.0103%" height="15" fill="rgb(238,219,53)" fg:x="5875993479" fg:w="4138808"/><text x="14.8705%" y="287.50"></text></g><g><title>__rdl_alloc (4,138,589 samples, 0.01%)</title><rect x="14.6308%" y="293" width="0.0103%" height="15" fill="rgb(232,167,36)" fg:x="5880132287" fg:w="4138589"/><text x="14.8808%" y="303.50"></text></g><g><title>__rust_alloc (4,105,059 samples, 0.01%)</title><rect x="14.6411%" y="293" width="0.0102%" height="15" fill="rgb(244,19,51)" fg:x="5884270876" fg:w="4105059"/><text x="14.8911%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned (8,214,407 samples, 0.02%)</title><rect x="14.7847%" y="245" width="0.0204%" height="15" fill="rgb(224,6,22)" fg:x="5941954812" fg:w="8214407"/><text x="15.0347%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20,389,895 samples, 0.05%)</title><rect x="14.7648%" y="261" width="0.0507%" height="15" fill="rgb(224,145,5)" fg:x="5933968088" fg:w="20389895"/><text x="15.0148%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,188,764 samples, 0.01%)</title><rect x="14.8051%" y="245" width="0.0104%" height="15" fill="rgb(234,130,49)" fg:x="5950169219" fg:w="4188764"/><text x="15.0551%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned (8,263,701 samples, 0.02%)</title><rect x="15.0105%" y="229" width="0.0206%" height="15" fill="rgb(254,6,2)" fg:x="6032723958" fg:w="8263701"/><text x="15.2605%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (20,652,263 samples, 0.05%)</title><rect x="15.0311%" y="229" width="0.0514%" height="15" fill="rgb(208,96,46)" fg:x="6040987659" fg:w="20652263"/><text x="15.2811%" y="239.50"></text></g><g><title>checked_request2size (4,153,847 samples, 0.01%)</title><rect x="15.4418%" y="165" width="0.0103%" height="15" fill="rgb(239,3,39)" fg:x="6206059573" fg:w="4153847"/><text x="15.6918%" y="175.50"></text></g><g><title>_int_malloc (90,658,334 samples, 0.23%)</title><rect x="15.2370%" y="181" width="0.2256%" height="15" fill="rgb(233,210,1)" fg:x="6123735822" fg:w="90658334"/><text x="15.4870%" y="191.50"></text></g><g><title>unlink_chunk (4,180,736 samples, 0.01%)</title><rect x="15.4521%" y="165" width="0.0104%" height="15" fill="rgb(244,137,37)" fg:x="6210213420" fg:w="4180736"/><text x="15.7021%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (198,273,225 samples, 0.49%)</title><rect x="14.9796%" y="245" width="0.4933%" height="15" fill="rgb(240,136,2)" fg:x="6020305220" fg:w="198273225"/><text x="15.2296%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (156,938,523 samples, 0.39%)</title><rect x="15.0825%" y="229" width="0.3905%" height="15" fill="rgb(239,18,37)" fg:x="6061639922" fg:w="156938523"/><text x="15.3325%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (140,329,491 samples, 0.35%)</title><rect x="15.1238%" y="213" width="0.3492%" height="15" fill="rgb(218,185,22)" fg:x="6078248954" fg:w="140329491"/><text x="15.3738%" y="223.50"></text></g><g><title>__GI___libc_malloc (132,051,486 samples, 0.33%)</title><rect x="15.1444%" y="197" width="0.3286%" height="15" fill="rgb(225,218,4)" fg:x="6086526959" fg:w="132051486"/><text x="15.3944%" y="207.50"></text></g><g><title>arena_for_chunk (4,184,289 samples, 0.01%)</title><rect x="15.4625%" y="181" width="0.0104%" height="15" fill="rgb(230,182,32)" fg:x="6214394156" fg:w="4184289"/><text x="15.7125%" y="191.50"></text></g><g><title>alloc::fmt::format::format_inner (371,582,225 samples, 0.92%)</title><rect x="14.6513%" y="293" width="0.9246%" height="15" fill="rgb(242,56,43)" fg:x="5888375935" fg:w="371582225"/><text x="14.9013%" y="303.50"></text></g><g><title>core::fmt::write (346,714,225 samples, 0.86%)</title><rect x="14.7132%" y="277" width="0.8627%" height="15" fill="rgb(233,99,24)" fg:x="5913243935" fg:w="346714225"/><text x="14.9632%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (305,600,177 samples, 0.76%)</title><rect x="14.8155%" y="261" width="0.7604%" height="15" fill="rgb(234,209,42)" fg:x="5954357983" fg:w="305600177"/><text x="15.0655%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (41,379,715 samples, 0.10%)</title><rect x="15.4730%" y="245" width="0.1030%" height="15" fill="rgb(227,7,12)" fg:x="6218578445" fg:w="41379715"/><text x="15.7230%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (16,643,391 samples, 0.04%)</title><rect x="15.5345%" y="229" width="0.0414%" height="15" fill="rgb(245,203,43)" fg:x="6243314769" fg:w="16643391"/><text x="15.7845%" y="239.50"></text></g><g><title>_int_free (4,180,387 samples, 0.01%)</title><rect x="15.6374%" y="229" width="0.0104%" height="15" fill="rgb(238,205,33)" fg:x="6284661800" fg:w="4180387"/><text x="15.8874%" y="239.50"></text></g><g><title>_int_free_merge_chunk (4,125,192 samples, 0.01%)</title><rect x="15.6478%" y="229" width="0.0103%" height="15" fill="rgb(231,56,7)" fg:x="6288842187" fg:w="4125192"/><text x="15.8978%" y="239.50"></text></g><g><title>__GI___libc_realloc (152,292,579 samples, 0.38%)</title><rect x="15.6069%" y="261" width="0.3789%" height="15" fill="rgb(244,186,29)" fg:x="6272397323" fg:w="152292579"/><text x="15.8569%" y="271.50"></text></g><g><title>_int_realloc (152,292,579 samples, 0.38%)</title><rect x="15.6069%" y="245" width="0.3789%" height="15" fill="rgb(234,111,31)" fg:x="6272397323" fg:w="152292579"/><text x="15.8569%" y="255.50"></text></g><g><title>_int_malloc (131,722,523 samples, 0.33%)</title><rect x="15.6580%" y="229" width="0.3277%" height="15" fill="rgb(241,149,10)" fg:x="6292967379" fg:w="131722523"/><text x="15.9080%" y="239.50"></text></g><g><title>malloc_consolidate (90,518,802 samples, 0.23%)</title><rect x="15.7606%" y="213" width="0.2252%" height="15" fill="rgb(249,206,44)" fg:x="6334171100" fg:w="90518802"/><text x="16.0106%" y="223.50"></text></g><g><title>unlink_chunk (28,794,733 samples, 0.07%)</title><rect x="15.9141%" y="197" width="0.0716%" height="15" fill="rgb(251,153,30)" fg:x="6395895169" fg:w="28794733"/><text x="16.1641%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (168,912,836 samples, 0.42%)</title><rect x="15.5759%" y="293" width="0.4203%" height="15" fill="rgb(239,152,38)" fg:x="6259958160" fg:w="168912836"/><text x="15.8259%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (156,473,673 samples, 0.39%)</title><rect x="15.6069%" y="277" width="0.3893%" height="15" fill="rgb(249,139,47)" fg:x="6272397323" fg:w="156473673"/><text x="15.8569%" y="287.50"></text></g><g><title>__rdl_realloc (4,181,094 samples, 0.01%)</title><rect x="15.9858%" y="261" width="0.0104%" height="15" fill="rgb(244,64,35)" fg:x="6424689902" fg:w="4181094"/><text x="16.2358%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (29,108,497 samples, 0.07%)</title><rect x="16.0992%" y="277" width="0.0724%" height="15" fill="rgb(216,46,15)" fg:x="6470272877" fg:w="29108497"/><text x="16.3492%" y="287.50"></text></g><g><title>_int_free (33,182,408 samples, 0.08%)</title><rect x="16.1924%" y="245" width="0.0826%" height="15" fill="rgb(250,74,19)" fg:x="6507731184" fg:w="33182408"/><text x="16.4424%" y="255.50"></text></g><g><title>__GI___libc_free (45,714,965 samples, 0.11%)</title><rect x="16.1716%" y="261" width="0.1137%" height="15" fill="rgb(249,42,33)" fg:x="6499381374" fg:w="45714965"/><text x="16.4216%" y="271.50"></text></g><g><title>_int_free_merge_chunk (4,182,747 samples, 0.01%)</title><rect x="16.2750%" y="245" width="0.0104%" height="15" fill="rgb(242,149,17)" fg:x="6540913592" fg:w="4182747"/><text x="16.5250%" y="255.50"></text></g><g><title>__rdl_dealloc (20,795,202 samples, 0.05%)</title><rect x="16.2854%" y="261" width="0.0517%" height="15" fill="rgb(244,29,21)" fg:x="6545096339" fg:w="20795202"/><text x="16.5354%" y="271.50"></text></g><g><title>_int_free (8,343,584 samples, 0.02%)</title><rect x="16.4195%" y="213" width="0.0208%" height="15" fill="rgb(220,130,37)" fg:x="6598999435" fg:w="8343584"/><text x="16.6695%" y="223.50"></text></g><g><title>__GI___libc_free (12,522,148 samples, 0.03%)</title><rect x="16.4195%" y="229" width="0.0312%" height="15" fill="rgb(211,67,2)" fg:x="6598999435" fg:w="12522148"/><text x="16.6695%" y="239.50"></text></g><g><title>arena_for_chunk (4,178,564 samples, 0.01%)</title><rect x="16.4403%" y="213" width="0.0104%" height="15" fill="rgb(235,68,52)" fg:x="6607343019" fg:w="4178564"/><text x="16.6903%" y="223.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (53,891,812 samples, 0.13%)</title><rect x="16.3371%" y="245" width="0.1341%" height="15" fill="rgb(246,142,3)" fg:x="6565891541" fg:w="53891812"/><text x="16.5871%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8,261,770 samples, 0.02%)</title><rect x="16.4507%" y="229" width="0.0206%" height="15" fill="rgb(241,25,7)" fg:x="6611521583" fg:w="8261770"/><text x="16.7007%" y="239.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.13988653600275597160 (195,182,116 samples, 0.49%)</title><rect x="16.1716%" y="277" width="0.4856%" height="15" fill="rgb(242,119,39)" fg:x="6499381374" fg:w="195182116"/><text x="16.4216%" y="287.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (128,671,949 samples, 0.32%)</title><rect x="16.3371%" y="261" width="0.3202%" height="15" fill="rgb(241,98,45)" fg:x="6565891541" fg:w="128671949"/><text x="16.5871%" y="271.50"></text></g><g><title>__GI___libc_free (74,780,137 samples, 0.19%)</title><rect x="16.4712%" y="245" width="0.1861%" height="15" fill="rgb(254,28,30)" fg:x="6619783353" fg:w="74780137"/><text x="16.7212%" y="255.50"></text></g><g><title>_int_free_maybe_consolidate (74,780,137 samples, 0.19%)</title><rect x="16.4712%" y="229" width="0.1861%" height="15" fill="rgb(241,142,54)" fg:x="6619783353" fg:w="74780137"/><text x="16.7212%" y="239.50"></text></g><g><title>malloc_consolidate (74,780,137 samples, 0.19%)</title><rect x="16.4712%" y="213" width="0.1861%" height="15" fill="rgb(222,85,15)" fg:x="6619783353" fg:w="74780137"/><text x="16.7212%" y="223.50"></text></g><g><title>unlink_chunk (37,373,237 samples, 0.09%)</title><rect x="16.5643%" y="197" width="0.0930%" height="15" fill="rgb(210,85,47)" fg:x="6657190253" fg:w="37373237"/><text x="16.8143%" y="207.50"></text></g><g><title>__GI___libc_free (58,018,332 samples, 0.14%)</title><rect x="16.6573%" y="277" width="0.1444%" height="15" fill="rgb(224,206,25)" fg:x="6694563490" fg:w="58018332"/><text x="16.9073%" y="287.50"></text></g><g><title>_int_free (53,871,991 samples, 0.13%)</title><rect x="16.6676%" y="261" width="0.1340%" height="15" fill="rgb(243,201,19)" fg:x="6698709831" fg:w="53871991"/><text x="16.9176%" y="271.50"></text></g><g><title>__GI___libc_free (29,031,280 samples, 0.07%)</title><rect x="16.8419%" y="261" width="0.0722%" height="15" fill="rgb(236,59,4)" fg:x="6768756677" fg:w="29031280"/><text x="17.0919%" y="271.50"></text></g><g><title>_int_free (20,729,281 samples, 0.05%)</title><rect x="16.8626%" y="245" width="0.0516%" height="15" fill="rgb(254,179,45)" fg:x="6777058676" fg:w="20729281"/><text x="17.1126%" y="255.50"></text></g><g><title>[unknown] (4,177,645 samples, 0.01%)</title><rect x="16.9859%" y="245" width="0.0104%" height="15" fill="rgb(226,14,10)" fg:x="6826613565" fg:w="4177645"/><text x="17.2359%" y="255.50"></text></g><g><title>[unknown] (4,177,645 samples, 0.01%)</title><rect x="16.9859%" y="229" width="0.0104%" height="15" fill="rgb(244,27,41)" fg:x="6826613565" fg:w="4177645"/><text x="17.2359%" y="239.50"></text></g><g><title>[unknown] (4,177,645 samples, 0.01%)</title><rect x="16.9859%" y="213" width="0.0104%" height="15" fill="rgb(235,35,32)" fg:x="6826613565" fg:w="4177645"/><text x="17.2359%" y="223.50"></text></g><g><title>[unknown] (4,177,645 samples, 0.01%)</title><rect x="16.9859%" y="197" width="0.0104%" height="15" fill="rgb(218,68,31)" fg:x="6826613565" fg:w="4177645"/><text x="17.2359%" y="207.50"></text></g><g><title>[unknown] (4,177,645 samples, 0.01%)</title><rect x="16.9859%" y="181" width="0.0104%" height="15" fill="rgb(207,120,37)" fg:x="6826613565" fg:w="4177645"/><text x="17.2359%" y="191.50"></text></g><g><title>[unknown] (4,177,645 samples, 0.01%)</title><rect x="16.9859%" y="165" width="0.0104%" height="15" fill="rgb(227,98,0)" fg:x="6826613565" fg:w="4177645"/><text x="17.2359%" y="175.50"></text></g><g><title>[unknown] (4,177,645 samples, 0.01%)</title><rect x="16.9859%" y="149" width="0.0104%" height="15" fill="rgb(207,7,3)" fg:x="6826613565" fg:w="4177645"/><text x="17.2359%" y="159.50"></text></g><g><title>[unknown] (4,177,645 samples, 0.01%)</title><rect x="16.9859%" y="133" width="0.0104%" height="15" fill="rgb(206,98,19)" fg:x="6826613565" fg:w="4177645"/><text x="17.2359%" y="143.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (414,390,431 samples, 1.03%)</title><rect x="15.9962%" y="293" width="1.0311%" height="15" fill="rgb(217,5,26)" fg:x="6428870996" fg:w="414390431"/><text x="16.2462%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::del_pol_cb::WrappedController as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (90,679,605 samples, 0.23%)</title><rect x="16.8017%" y="277" width="0.2256%" height="15" fill="rgb(235,190,38)" fg:x="6752581822" fg:w="90679605"/><text x="17.0517%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;grpc::client::name_resolution::Endpoint&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::{{closure}}&gt; (45,473,470 samples, 0.11%)</title><rect x="16.9141%" y="261" width="0.1131%" height="15" fill="rgb(247,86,24)" fg:x="6797787957" fg:w="45473470"/><text x="17.1641%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::{{closure}}&gt; (12,470,217 samples, 0.03%)</title><rect x="16.9962%" y="245" width="0.0310%" height="15" fill="rgb(205,101,16)" fg:x="6830791210" fg:w="12470217"/><text x="17.2462%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (62,049,480 samples, 0.15%)</title><rect x="21.9511%" y="229" width="0.1544%" height="15" fill="rgb(246,168,33)" fg:x="8822132070" fg:w="62049480"/><text x="22.2011%" y="239.50"></text></g><g><title>__GI___libc_malloc (8,303,020 samples, 0.02%)</title><rect x="22.1055%" y="229" width="0.0207%" height="15" fill="rgb(231,114,1)" fg:x="8884181550" fg:w="8303020"/><text x="22.3555%" y="239.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::_{{closure}} (1,317,822,951 samples, 3.28%)</title><rect x="18.8885%" y="245" width="3.2790%" height="15" fill="rgb(207,184,53)" fg:x="7591297499" fg:w="1317822951"/><text x="19.1385%" y="255.50">&lt;lb..</text></g><g><title>core::hash::BuildHasher::hash_one (16,635,880 samples, 0.04%)</title><rect x="22.1261%" y="229" width="0.0414%" height="15" fill="rgb(224,95,51)" fg:x="8892484570" fg:w="16635880"/><text x="22.3761%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,339,847 samples, 0.02%)</title><rect x="22.1468%" y="213" width="0.0208%" height="15" fill="rgb(212,188,45)" fg:x="8900780603" fg:w="8339847"/><text x="22.3968%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (54,029,533 samples, 0.13%)</title><rect x="22.1675%" y="245" width="0.1344%" height="15" fill="rgb(223,154,38)" fg:x="8909120450" fg:w="54029533"/><text x="22.4175%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (4,124,585 samples, 0.01%)</title><rect x="22.2917%" y="229" width="0.0103%" height="15" fill="rgb(251,22,52)" fg:x="8959025398" fg:w="4124585"/><text x="22.5417%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,797,213 samples, 0.05%)</title><rect x="22.5187%" y="229" width="0.0517%" height="15" fill="rgb(229,209,22)" fg:x="9050264771" fg:w="20797213"/><text x="22.7687%" y="239.50"></text></g><g><title>__GI___libc_free (33,197,261 samples, 0.08%)</title><rect x="22.5704%" y="229" width="0.0826%" height="15" fill="rgb(234,138,34)" fg:x="9071061984" fg:w="33197261"/><text x="22.8204%" y="239.50"></text></g><g><title>_int_free (16,501,044 samples, 0.04%)</title><rect x="22.6120%" y="213" width="0.0411%" height="15" fill="rgb(212,95,11)" fg:x="9087758201" fg:w="16501044"/><text x="22.8620%" y="223.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (1,820,378,968 samples, 4.53%)</title><rect x="18.2057%" y="261" width="4.5294%" height="15" fill="rgb(240,179,47)" fg:x="7316886653" fg:w="1820378968"/><text x="18.4557%" y="271.50">&lt;grpc..</text></g><g><title>grpc::client::load_balancing::child_manager_cb::Inner&lt;T&gt;::resolve_child_controller (174,115,638 samples, 0.43%)</title><rect x="22.3019%" y="245" width="0.4332%" height="15" fill="rgb(240,163,11)" fg:x="8963149983" fg:w="174115638"/><text x="22.5519%" y="255.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (33,006,376 samples, 0.08%)</title><rect x="22.6531%" y="229" width="0.0821%" height="15" fill="rgb(236,37,12)" fg:x="9104259245" fg:w="33006376"/><text x="22.9031%" y="239.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (20,584,751 samples, 0.05%)</title><rect x="28.7748%" y="245" width="0.0512%" height="15" fill="rgb(232,164,16)" fg:x="11564592529" fg:w="20584751"/><text x="29.0248%" y="255.50"></text></g><g><title>__GI___libc_free (120,486,624 samples, 0.30%)</title><rect x="28.8260%" y="245" width="0.2998%" height="15" fill="rgb(244,205,15)" fg:x="11585177280" fg:w="120486624"/><text x="29.0760%" y="255.50"></text></g><g><title>_int_free (87,245,104 samples, 0.22%)</title><rect x="28.9087%" y="229" width="0.2171%" height="15" fill="rgb(223,117,47)" fg:x="11618418800" fg:w="87245104"/><text x="29.1587%" y="239.50"></text></g><g><title>tcache_put (24,972,332 samples, 0.06%)</title><rect x="29.0637%" y="213" width="0.0621%" height="15" fill="rgb(244,107,35)" fg:x="11680691572" fg:w="24972332"/><text x="29.3137%" y="223.50"></text></g><g><title>__GI___libc_malloc (79,012,560 samples, 0.20%)</title><rect x="29.1258%" y="245" width="0.1966%" height="15" fill="rgb(205,140,8)" fg:x="11705663904" fg:w="79012560"/><text x="29.3758%" y="255.50"></text></g><g><title>tcache_get (37,273,342 samples, 0.09%)</title><rect x="29.2297%" y="229" width="0.0927%" height="15" fill="rgb(228,84,46)" fg:x="11747403122" fg:w="37273342"/><text x="29.4797%" y="239.50"></text></g><g><title>tcache_get_n (37,273,342 samples, 0.09%)</title><rect x="29.2297%" y="213" width="0.0927%" height="15" fill="rgb(254,188,9)" fg:x="11747403122" fg:w="37273342"/><text x="29.4797%" y="223.50"></text></g><g><title>__rdl_dealloc (12,403,825 samples, 0.03%)</title><rect x="29.3224%" y="245" width="0.0309%" height="15" fill="rgb(206,112,54)" fg:x="11784676464" fg:w="12403825"/><text x="29.5724%" y="255.50"></text></g><g><title>__rust_alloc (8,360,723 samples, 0.02%)</title><rect x="29.3533%" y="245" width="0.0208%" height="15" fill="rgb(216,84,49)" fg:x="11797080289" fg:w="8360723"/><text x="29.6033%" y="255.50"></text></g><g><title>__rust_dealloc (12,472,159 samples, 0.03%)</title><rect x="29.3741%" y="245" width="0.0310%" height="15" fill="rgb(214,194,35)" fg:x="11805441012" fg:w="12472159"/><text x="29.6241%" y="255.50"></text></g><g><title>_int_free (8,222,642 samples, 0.02%)</title><rect x="29.4466%" y="213" width="0.0205%" height="15" fill="rgb(249,28,3)" fg:x="11834578152" fg:w="8222642"/><text x="29.6966%" y="223.50"></text></g><g><title>_int_free_create_chunk (12,302,026 samples, 0.03%)</title><rect x="29.4774%" y="197" width="0.0306%" height="15" fill="rgb(222,56,52)" fg:x="11846962702" fg:w="12302026"/><text x="29.7274%" y="207.50"></text></g><g><title>__GI___libc_free (33,003,980 samples, 0.08%)</title><rect x="29.4362%" y="229" width="0.0821%" height="15" fill="rgb(245,217,50)" fg:x="11830424843" fg:w="33003980"/><text x="29.6862%" y="239.50"></text></g><g><title>_int_free_merge_chunk (20,628,029 samples, 0.05%)</title><rect x="29.4670%" y="213" width="0.0513%" height="15" fill="rgb(213,201,24)" fg:x="11842800794" fg:w="20628029"/><text x="29.7170%" y="223.50"></text></g><g><title>_int_free_maybe_consolidate (4,164,095 samples, 0.01%)</title><rect x="29.5080%" y="197" width="0.0104%" height="15" fill="rgb(248,116,28)" fg:x="11859264728" fg:w="4164095"/><text x="29.7580%" y="207.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (6,456,813,903 samples, 16.07%)</title><rect x="29.4051%" y="245" width="16.0657%" height="15" fill="rgb(219,72,43)" fg:x="11817913171" fg:w="6456813903"/><text x="29.6551%" y="255.50">alloc::sync::Arc&lt;T,A&gt;::dr..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_cb::RRPickerPicker&gt; (6,411,298,251 samples, 15.95%)</title><rect x="29.5184%" y="229" width="15.9525%" height="15" fill="rgb(209,138,14)" fg:x="11863428823" fg:w="6411298251"/><text x="29.7684%" y="239.50">core::ptr::drop_in_place&lt;..</text></g><g><title>_ZN4core3ptr202drop_in_place$LT$core..iter..adapters..flatten..Flatten$LT$alloc..vec..into_iter..IntoIter$LT$core..option..Option$LT$alloc..sync..Arc$LT$dyn$u20$grpc..client..load_balancing..Picker$GT$$GT$$GT$$GT$$GT$17hd9a587cc961adddbE.llvm.6127000297180534061 (54,176,688 samples, 0.13%)</title><rect x="48.0838%" y="229" width="0.1348%" height="15" fill="rgb(222,18,33)" fg:x="19324892765" fg:w="54176688"/><text x="48.3338%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,853,889 samples, 0.05%)</title><rect x="48.1668%" y="213" width="0.0519%" height="15" fill="rgb(213,199,7)" fg:x="19358215564" fg:w="20853889"/><text x="48.4168%" y="223.50"></text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (1,141,731,732 samples, 2.84%)</title><rect x="45.4708%" y="245" width="2.8408%" height="15" fill="rgb(250,110,10)" fg:x="18274727074" fg:w="1141731732"/><text x="45.7208%" y="255.50">al..</text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::forget_allocation_drop_remaining (37,389,353 samples, 0.09%)</title><rect x="48.2186%" y="229" width="0.0930%" height="15" fill="rgb(248,123,6)" fg:x="19379069453" fg:w="37389353"/><text x="48.4686%" y="239.50"></text></g><g><title>alloc_perturb (4,177,281 samples, 0.01%)</title><rect x="68.0446%" y="197" width="0.0104%" height="15" fill="rgb(206,91,31)" fg:x="27347125239" fg:w="4177281"/><text x="68.2946%" y="207.50"></text></g><g><title>__GI___libc_malloc (244,721,028 samples, 0.61%)</title><rect x="67.5284%" y="229" width="0.6089%" height="15" fill="rgb(211,154,13)" fg:x="27139660152" fg:w="244721028"/><text x="67.7784%" y="239.50"></text></g><g><title>_int_malloc (195,048,287 samples, 0.49%)</title><rect x="67.6520%" y="213" width="0.4853%" height="15" fill="rgb(225,148,7)" fg:x="27189332893" fg:w="195048287"/><text x="67.9020%" y="223.50"></text></g><g><title>unlink_chunk (33,078,660 samples, 0.08%)</title><rect x="68.0550%" y="197" width="0.0823%" height="15" fill="rgb(220,160,43)" fg:x="27351302520" fg:w="33078660"/><text x="68.3050%" y="207.50"></text></g><g><title>&lt;lb_apis::del_pol_cb::WrappedController as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel::_{{closure}} (20,258,741,817 samples, 50.41%)</title><rect x="17.7504%" y="277" width="50.4074%" height="15" fill="rgb(213,52,39)" fg:x="7133887497" fg:w="20258741817"/><text x="18.0004%" y="287.50">&lt;lb_apis::del_pol_cb::WrappedController as grpc::client::load_balancing::ChannelCon..</text></g><g><title>_ZN7lb_apis10del_pol_cb13update_picker17h37b9e3191a1a2a2eE.llvm.8308943596923409684 (18,255,363,693 samples, 45.42%)</title><rect x="22.7352%" y="261" width="45.4227%" height="15" fill="rgb(243,137,7)" fg:x="9137265621" fg:w="18255363693"/><text x="22.9852%" y="271.50">_ZN7lb_apis10del_pol_cb13update_picker17h37b9e3191a1a2a2eE.llvm.8308943596..</text></g><g><title>grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt;::map_child_states (7,976,170,508 samples, 19.85%)</title><rect x="48.3117%" y="245" width="19.8462%" height="15" fill="rgb(230,79,13)" fg:x="19416458806" fg:w="7976170508"/><text x="48.5617%" y="255.50">grpc::client::load_balancing::c..</text></g><g><title>__rust_alloc (8,248,134 samples, 0.02%)</title><rect x="68.1373%" y="229" width="0.0205%" height="15" fill="rgb(247,105,23)" fg:x="27384381180" fg:w="8248134"/><text x="68.3873%" y="239.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (41,500,801 samples, 0.10%)</title><rect x="68.1578%" y="277" width="0.1033%" height="15" fill="rgb(223,179,41)" fg:x="27392629314" fg:w="41500801"/><text x="68.4078%" y="287.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (4,068,024 samples, 0.01%)</title><rect x="68.2611%" y="277" width="0.0101%" height="15" fill="rgb(218,9,34)" fg:x="27434130115" fg:w="4068024"/><text x="68.5111%" y="287.50"></text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (41,106,668 samples, 0.10%)</title><rect x="68.2712%" y="277" width="0.1023%" height="15" fill="rgb(222,106,8)" fg:x="27438198139" fg:w="41106668"/><text x="68.5212%" y="287.50"></text></g><g><title>lb_apis::callbacks (23,205,479,729 samples, 57.74%)</title><rect x="10.6444%" y="309" width="57.7394%" height="15" fill="rgb(211,220,0)" fg:x="4278000571" fg:w="23205479729"/><text x="10.8944%" y="319.50">lb_apis::callbacks</text></g><g><title>bencher::Bencher::iter (20,640,218,873 samples, 51.36%)</title><rect x="17.0273%" y="293" width="51.3566%" height="15" fill="rgb(229,52,16)" fg:x="6843261427" fg:w="20640218873"/><text x="17.2773%" y="303.50">bencher::Bencher::iter</text></g><g><title>std::time::Instant::elapsed (4,175,493 samples, 0.01%)</title><rect x="68.3735%" y="277" width="0.0104%" height="15" fill="rgb(212,155,18)" fg:x="27479304807" fg:w="4175493"/><text x="68.6235%" y="287.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4,175,493 samples, 0.01%)</title><rect x="68.3735%" y="261" width="0.0104%" height="15" fill="rgb(242,21,14)" fg:x="27479304807" fg:w="4175493"/><text x="68.6235%" y="271.50"></text></g><g><title>__GI___clock_gettime (4,175,493 samples, 0.01%)</title><rect x="68.3735%" y="245" width="0.0104%" height="15" fill="rgb(222,19,48)" fg:x="27479304807" fg:w="4175493"/><text x="68.6235%" y="255.50"></text></g><g><title>__vdso_clock_gettime (4,175,493 samples, 0.01%)</title><rect x="68.3735%" y="229" width="0.0104%" height="15" fill="rgb(232,45,27)" fg:x="27479304807" fg:w="4175493"/><text x="68.6235%" y="239.50"></text></g><g><title>__GI___libc_malloc (86,659,358 samples, 0.22%)</title><rect x="68.6659%" y="229" width="0.2156%" height="15" fill="rgb(249,103,42)" fg:x="27596831203" fg:w="86659358"/><text x="68.9159%" y="239.50"></text></g><g><title>_int_malloc (74,235,309 samples, 0.18%)</title><rect x="68.6968%" y="213" width="0.1847%" height="15" fill="rgb(246,81,33)" fg:x="27609255252" fg:w="74235309"/><text x="68.9468%" y="223.50"></text></g><g><title>unlink_chunk (8,256,623 samples, 0.02%)</title><rect x="68.8610%" y="197" width="0.0205%" height="15" fill="rgb(252,33,42)" fg:x="27675233938" fg:w="8256623"/><text x="69.1110%" y="207.50"></text></g><g><title>__GI_memcpy (4,173,199 samples, 0.01%)</title><rect x="68.8816%" y="165" width="0.0104%" height="15" fill="rgb(209,212,41)" fg:x="27683490996" fg:w="4173199"/><text x="69.1316%" y="175.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,173,199 samples, 0.01%)</title><rect x="68.8816%" y="149" width="0.0104%" height="15" fill="rgb(207,154,6)" fg:x="27683490996" fg:w="4173199"/><text x="69.1316%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (12,367,174 samples, 0.03%)</title><rect x="68.8816%" y="229" width="0.0308%" height="15" fill="rgb(223,64,47)" fg:x="27683490996" fg:w="12367174"/><text x="69.1316%" y="239.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (12,367,174 samples, 0.03%)</title><rect x="68.8816%" y="213" width="0.0308%" height="15" fill="rgb(211,161,38)" fg:x="27683490996" fg:w="12367174"/><text x="69.1316%" y="223.50"></text></g><g><title>__GI___libc_realloc (12,367,174 samples, 0.03%)</title><rect x="68.8816%" y="197" width="0.0308%" height="15" fill="rgb(219,138,40)" fg:x="27683490996" fg:w="12367174"/><text x="69.1316%" y="207.50"></text></g><g><title>_int_realloc (12,367,174 samples, 0.03%)</title><rect x="68.8816%" y="181" width="0.0308%" height="15" fill="rgb(241,228,46)" fg:x="27683490996" fg:w="12367174"/><text x="69.1316%" y="191.50"></text></g><g><title>_int_malloc (8,193,975 samples, 0.02%)</title><rect x="68.8919%" y="165" width="0.0204%" height="15" fill="rgb(223,209,38)" fg:x="27687664195" fg:w="8193975"/><text x="69.1419%" y="175.50"></text></g><g><title>malloc_consolidate (8,193,975 samples, 0.02%)</title><rect x="68.8919%" y="149" width="0.0204%" height="15" fill="rgb(236,164,45)" fg:x="27687664195" fg:w="8193975"/><text x="69.1419%" y="159.50"></text></g><g><title>unlink_chunk (8,193,975 samples, 0.02%)</title><rect x="68.8919%" y="133" width="0.0204%" height="15" fill="rgb(231,15,5)" fg:x="27687664195" fg:w="8193975"/><text x="69.1419%" y="143.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (144,355,633 samples, 0.36%)</title><rect x="68.5938%" y="245" width="0.3592%" height="15" fill="rgb(252,35,15)" fg:x="27567861633" fg:w="144355633"/><text x="68.8438%" y="255.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (16,359,096 samples, 0.04%)</title><rect x="68.9123%" y="229" width="0.0407%" height="15" fill="rgb(248,181,18)" fg:x="27695858170" fg:w="16359096"/><text x="69.1623%" y="239.50"></text></g><g><title>__GI_memcpy (8,235,488 samples, 0.02%)</title><rect x="68.9940%" y="181" width="0.0205%" height="15" fill="rgb(233,39,42)" fg:x="27728701814" fg:w="8235488"/><text x="69.2440%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned (4,067,615 samples, 0.01%)</title><rect x="69.0044%" y="165" width="0.0101%" height="15" fill="rgb(238,110,33)" fg:x="27732869687" fg:w="4067615"/><text x="69.2544%" y="175.50"></text></g><g><title>_int_free_merge_chunk (8,207,215 samples, 0.02%)</title><rect x="69.0145%" y="181" width="0.0204%" height="15" fill="rgb(233,195,10)" fg:x="27736937303" fg:w="8207215"/><text x="69.2645%" y="191.50"></text></g><g><title>_int_free_create_chunk (8,207,215 samples, 0.02%)</title><rect x="69.0145%" y="165" width="0.0204%" height="15" fill="rgb(254,105,3)" fg:x="27736937303" fg:w="8207215"/><text x="69.2645%" y="175.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (207,928,062 samples, 0.52%)</title><rect x="68.5280%" y="261" width="0.5174%" height="15" fill="rgb(221,225,9)" fg:x="27541411340" fg:w="207928062"/><text x="68.7780%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (37,122,136 samples, 0.09%)</title><rect x="68.9530%" y="245" width="0.0924%" height="15" fill="rgb(224,227,45)" fg:x="27712217266" fg:w="37122136"/><text x="69.2030%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (37,122,136 samples, 0.09%)</title><rect x="68.9530%" y="229" width="0.0924%" height="15" fill="rgb(229,198,43)" fg:x="27712217266" fg:w="37122136"/><text x="69.2030%" y="239.50"></text></g><g><title>__GI___libc_realloc (37,122,136 samples, 0.09%)</title><rect x="68.9530%" y="213" width="0.0924%" height="15" fill="rgb(206,209,35)" fg:x="27712217266" fg:w="37122136"/><text x="69.2030%" y="223.50"></text></g><g><title>_int_realloc (24,756,931 samples, 0.06%)</title><rect x="68.9838%" y="197" width="0.0616%" height="15" fill="rgb(245,195,53)" fg:x="27724582471" fg:w="24756931"/><text x="69.2338%" y="207.50"></text></g><g><title>_int_malloc (4,194,884 samples, 0.01%)</title><rect x="69.0350%" y="181" width="0.0104%" height="15" fill="rgb(240,92,26)" fg:x="27745144518" fg:w="4194884"/><text x="69.2850%" y="191.50"></text></g><g><title>unlink_chunk (4,194,883 samples, 0.01%)</title><rect x="69.0350%" y="165" width="0.0104%" height="15" fill="rgb(207,40,23)" fg:x="27745144519" fg:w="4194883"/><text x="69.2850%" y="175.50"></text></g><g><title>_int_free (32,926,694 samples, 0.08%)</title><rect x="69.1066%" y="245" width="0.0819%" height="15" fill="rgb(223,111,35)" fg:x="27773941555" fg:w="32926694"/><text x="69.3566%" y="255.50"></text></g><g><title>__GI___libc_free (61,672,746 samples, 0.15%)</title><rect x="69.0454%" y="261" width="0.1535%" height="15" fill="rgb(229,147,28)" fg:x="27749339402" fg:w="61672746"/><text x="69.2954%" y="271.50"></text></g><g><title>_int_free_merge_chunk (4,143,899 samples, 0.01%)</title><rect x="69.1885%" y="245" width="0.0103%" height="15" fill="rgb(211,29,28)" fg:x="27806868249" fg:w="4143899"/><text x="69.4385%" y="255.50"></text></g><g><title>_int_free_create_chunk (4,143,899 samples, 0.01%)</title><rect x="69.1885%" y="229" width="0.0103%" height="15" fill="rgb(228,72,33)" fg:x="27806868249" fg:w="4143899"/><text x="69.4385%" y="239.50"></text></g><g><title>__rdl_dealloc (4,105,911 samples, 0.01%)</title><rect x="69.1988%" y="261" width="0.0102%" height="15" fill="rgb(205,214,31)" fg:x="27811012148" fg:w="4105911"/><text x="69.4488%" y="271.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::connect (4,152,254 samples, 0.01%)</title><rect x="69.2091%" y="261" width="0.0103%" height="15" fill="rgb(224,111,15)" fg:x="27815118059" fg:w="4152254"/><text x="69.4591%" y="271.50"></text></g><g><title>__memset_avx2_unaligned (4,065,969 samples, 0.01%)</title><rect x="69.3834%" y="229" width="0.0101%" height="15" fill="rgb(253,21,26)" fg:x="27885189343" fg:w="4065969"/><text x="69.6334%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h971add70c7ffa63aE.llvm.7027266497679388191 (69,910,679 samples, 0.17%)</title><rect x="69.3219%" y="245" width="0.1740%" height="15" fill="rgb(245,139,43)" fg:x="27860467849" fg:w="69910679"/><text x="69.5719%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (41,123,216 samples, 0.10%)</title><rect x="69.3935%" y="229" width="0.1023%" height="15" fill="rgb(252,170,7)" fg:x="27889255312" fg:w="41123216"/><text x="69.6435%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (4,161,064 samples, 0.01%)</title><rect x="69.4855%" y="213" width="0.0104%" height="15" fill="rgb(231,118,14)" fg:x="27926217464" fg:w="4161064"/><text x="69.7355%" y="223.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (410,006,559 samples, 1.02%)</title><rect x="68.5177%" y="277" width="1.0202%" height="15" fill="rgb(238,83,0)" fg:x="27537260249" fg:w="410006559"/><text x="68.7677%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (127,996,495 samples, 0.32%)</title><rect x="69.2194%" y="261" width="0.3185%" height="15" fill="rgb(221,39,39)" fg:x="27819270313" fg:w="127996495"/><text x="69.4694%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,888,280 samples, 0.04%)</title><rect x="69.4959%" y="245" width="0.0420%" height="15" fill="rgb(222,119,46)" fg:x="27930378528" fg:w="16888280"/><text x="69.7459%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (4,484,207 samples, 0.01%)</title><rect x="69.5267%" y="229" width="0.0112%" height="15" fill="rgb(222,165,49)" fg:x="27942782601" fg:w="4484207"/><text x="69.7767%" y="239.50"></text></g><g><title>__GI___libc_malloc (53,453,948 samples, 0.13%)</title><rect x="69.6200%" y="229" width="0.1330%" height="15" fill="rgb(219,113,52)" fg:x="27980277594" fg:w="53453948"/><text x="69.8700%" y="239.50"></text></g><g><title>_int_malloc (32,756,784 samples, 0.08%)</title><rect x="69.6715%" y="213" width="0.0815%" height="15" fill="rgb(214,7,15)" fg:x="28000974758" fg:w="32756784"/><text x="69.9215%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned (4,097,356 samples, 0.01%)</title><rect x="69.7530%" y="229" width="0.0102%" height="15" fill="rgb(235,32,4)" fg:x="28033731542" fg:w="4097356"/><text x="70.0030%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (107,129,744 samples, 0.27%)</title><rect x="69.5379%" y="261" width="0.2666%" height="15" fill="rgb(238,90,54)" fg:x="27947266808" fg:w="107129744"/><text x="69.7879%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (74,118,958 samples, 0.18%)</title><rect x="69.6200%" y="245" width="0.1844%" height="15" fill="rgb(213,208,19)" fg:x="27980277594" fg:w="74118958"/><text x="69.8700%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (16,567,654 samples, 0.04%)</title><rect x="69.7632%" y="229" width="0.0412%" height="15" fill="rgb(233,156,4)" fg:x="28037828898" fg:w="16567654"/><text x="70.0132%" y="239.50"></text></g><g><title>__GI___libc_malloc (4,153,276 samples, 0.01%)</title><rect x="69.8044%" y="229" width="0.0103%" height="15" fill="rgb(207,194,5)" fg:x="28054396552" fg:w="4153276"/><text x="70.0544%" y="239.50"></text></g><g><title>_int_malloc (4,153,276 samples, 0.01%)</title><rect x="69.8044%" y="213" width="0.0103%" height="15" fill="rgb(206,111,30)" fg:x="28054396552" fg:w="4153276"/><text x="70.0544%" y="223.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h407cd80dd67508b8E.llvm.13083574330315652211 (115,428,721 samples, 0.29%)</title><rect x="69.5379%" y="277" width="0.2872%" height="15" fill="rgb(243,70,54)" fg:x="27947266808" fg:w="115428721"/><text x="69.7879%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8,298,977 samples, 0.02%)</title><rect x="69.8044%" y="261" width="0.0206%" height="15" fill="rgb(242,28,8)" fg:x="28054396552" fg:w="8298977"/><text x="70.0544%" y="271.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (8,298,977 samples, 0.02%)</title><rect x="69.8044%" y="245" width="0.0206%" height="15" fill="rgb(219,106,18)" fg:x="28054396552" fg:w="8298977"/><text x="70.0544%" y="255.50"></text></g><g><title>__GI___libc_realloc (4,145,701 samples, 0.01%)</title><rect x="69.8148%" y="229" width="0.0103%" height="15" fill="rgb(244,222,10)" fg:x="28058549828" fg:w="4145701"/><text x="70.0648%" y="239.50"></text></g><g><title>_int_realloc (4,145,701 samples, 0.01%)</title><rect x="69.8148%" y="213" width="0.0103%" height="15" fill="rgb(236,179,52)" fg:x="28058549828" fg:w="4145701"/><text x="70.0648%" y="223.50"></text></g><g><title>__GI_memcpy (4,145,701 samples, 0.01%)</title><rect x="69.8148%" y="197" width="0.0103%" height="15" fill="rgb(213,23,39)" fg:x="28058549828" fg:w="4145701"/><text x="70.0648%" y="207.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,145,701 samples, 0.01%)</title><rect x="69.8148%" y="181" width="0.0103%" height="15" fill="rgb(238,48,10)" fg:x="28058549828" fg:w="4145701"/><text x="70.0648%" y="191.50"></text></g><g><title>[unknown] (16,540,012 samples, 0.04%)</title><rect x="70.0406%" y="229" width="0.0412%" height="15" fill="rgb(251,196,23)" fg:x="28149293620" fg:w="16540012"/><text x="70.2906%" y="239.50"></text></g><g><title>[unknown] (16,540,012 samples, 0.04%)</title><rect x="70.0406%" y="213" width="0.0412%" height="15" fill="rgb(250,152,24)" fg:x="28149293620" fg:w="16540012"/><text x="70.2906%" y="223.50"></text></g><g><title>[unknown] (16,540,012 samples, 0.04%)</title><rect x="70.0406%" y="197" width="0.0412%" height="15" fill="rgb(209,150,17)" fg:x="28149293620" fg:w="16540012"/><text x="70.2906%" y="207.50"></text></g><g><title>[unknown] (16,540,012 samples, 0.04%)</title><rect x="70.0406%" y="181" width="0.0412%" height="15" fill="rgb(234,202,34)" fg:x="28149293620" fg:w="16540012"/><text x="70.2906%" y="191.50"></text></g><g><title>[unknown] (16,540,012 samples, 0.04%)</title><rect x="70.0406%" y="165" width="0.0412%" height="15" fill="rgb(253,148,53)" fg:x="28149293620" fg:w="16540012"/><text x="70.2906%" y="175.50"></text></g><g><title>[unknown] (12,423,389 samples, 0.03%)</title><rect x="70.0508%" y="149" width="0.0309%" height="15" fill="rgb(218,129,16)" fg:x="28153410243" fg:w="12423389"/><text x="70.3008%" y="159.50"></text></g><g><title>[unknown] (12,423,389 samples, 0.03%)</title><rect x="70.0508%" y="133" width="0.0309%" height="15" fill="rgb(216,85,19)" fg:x="28153410243" fg:w="12423389"/><text x="70.3008%" y="143.50"></text></g><g><title>[unknown] (12,423,389 samples, 0.03%)</title><rect x="70.0508%" y="117" width="0.0309%" height="15" fill="rgb(235,228,7)" fg:x="28153410243" fg:w="12423389"/><text x="70.3008%" y="127.50"></text></g><g><title>[unknown] (8,274,452 samples, 0.02%)</title><rect x="70.0611%" y="101" width="0.0206%" height="15" fill="rgb(245,175,0)" fg:x="28157559180" fg:w="8274452"/><text x="70.3111%" y="111.50"></text></g><g><title>[unknown] (4,116,770 samples, 0.01%)</title><rect x="70.0715%" y="85" width="0.0102%" height="15" fill="rgb(208,168,36)" fg:x="28161716862" fg:w="4116770"/><text x="70.3215%" y="95.50"></text></g><g><title>[unknown] (4,116,770 samples, 0.01%)</title><rect x="70.0715%" y="69" width="0.0102%" height="15" fill="rgb(246,171,24)" fg:x="28161716862" fg:w="4116770"/><text x="70.3215%" y="79.50"></text></g><g><title>malloc_consolidate (24,796,979 samples, 0.06%)</title><rect x="70.0817%" y="197" width="0.0617%" height="15" fill="rgb(215,142,24)" fg:x="28165833632" fg:w="24796979"/><text x="70.3317%" y="207.50"></text></g><g><title>unlink_chunk (16,547,359 samples, 0.04%)</title><rect x="70.1022%" y="181" width="0.0412%" height="15" fill="rgb(250,187,7)" fg:x="28174083252" fg:w="16547359"/><text x="70.3522%" y="191.50"></text></g><g><title>__GI___libc_malloc (28,937,873 samples, 0.07%)</title><rect x="70.0817%" y="229" width="0.0720%" height="15" fill="rgb(228,66,33)" fg:x="28165833632" fg:w="28937873"/><text x="70.3317%" y="239.50"></text></g><g><title>_int_malloc (28,937,873 samples, 0.07%)</title><rect x="70.0817%" y="213" width="0.0720%" height="15" fill="rgb(234,215,21)" fg:x="28165833632" fg:w="28937873"/><text x="70.3317%" y="223.50"></text></g><g><title>sysmalloc (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="197" width="0.0103%" height="15" fill="rgb(222,191,20)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="207.50"></text></g><g><title>__glibc_morecore (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="181" width="0.0103%" height="15" fill="rgb(245,79,54)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="191.50"></text></g><g><title>__GI___sbrk (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="165" width="0.0103%" height="15" fill="rgb(240,10,37)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="175.50"></text></g><g><title>__brk (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="149" width="0.0103%" height="15" fill="rgb(214,192,32)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="159.50"></text></g><g><title>[unknown] (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="133" width="0.0103%" height="15" fill="rgb(209,36,54)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="143.50"></text></g><g><title>[unknown] (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="117" width="0.0103%" height="15" fill="rgb(220,10,11)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="127.50"></text></g><g><title>[unknown] (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="101" width="0.0103%" height="15" fill="rgb(221,106,17)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="111.50"></text></g><g><title>[unknown] (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="85" width="0.0103%" height="15" fill="rgb(251,142,44)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="95.50"></text></g><g><title>[unknown] (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="69" width="0.0103%" height="15" fill="rgb(238,13,15)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="79.50"></text></g><g><title>[unknown] (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="53" width="0.0103%" height="15" fill="rgb(208,107,27)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="63.50"></text></g><g><title>[unknown] (4,140,894 samples, 0.01%)</title><rect x="70.1434%" y="37" width="0.0103%" height="15" fill="rgb(205,136,37)" fg:x="28190630611" fg:w="4140894"/><text x="70.3934%" y="47.50"></text></g><g><title>__memset_avx2_unaligned_erms (4,063,008 samples, 0.01%)</title><rect x="70.1537%" y="229" width="0.0101%" height="15" fill="rgb(250,205,27)" fg:x="28194771505" fg:w="4063008"/><text x="70.4037%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h3ebf30e52fd0e535E.llvm.7027266497679388191 (103,071,092 samples, 0.26%)</title><rect x="69.9585%" y="245" width="0.2565%" height="15" fill="rgb(210,80,43)" fg:x="28116324256" fg:w="103071092"/><text x="70.2085%" y="255.50"></text></g><g><title>core::hash::BuildHasher::hash_one (20,560,835 samples, 0.05%)</title><rect x="70.1638%" y="229" width="0.0512%" height="15" fill="rgb(247,160,36)" fg:x="28198834513" fg:w="20560835"/><text x="70.4138%" y="239.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17h76fd9fded13229cdE.llvm.6968854181879494103 (169,109,235 samples, 0.42%)</title><rect x="69.8251%" y="277" width="0.4208%" height="15" fill="rgb(234,13,49)" fg:x="28062695529" fg:w="169109235"/><text x="70.0751%" y="287.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (169,109,235 samples, 0.42%)</title><rect x="69.8251%" y="261" width="0.4208%" height="15" fill="rgb(234,122,0)" fg:x="28062695529" fg:w="169109235"/><text x="70.0751%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (12,409,416 samples, 0.03%)</title><rect x="70.2150%" y="245" width="0.0309%" height="15" fill="rgb(207,146,38)" fg:x="28219395348" fg:w="12409416"/><text x="70.4650%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (4,170,060 samples, 0.01%)</title><rect x="70.2355%" y="229" width="0.0104%" height="15" fill="rgb(207,177,25)" fg:x="28227634704" fg:w="4170060"/><text x="70.4855%" y="239.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (764,525,348 samples, 1.90%)</title><rect x="68.5177%" y="293" width="1.9023%" height="15" fill="rgb(211,178,42)" fg:x="27537260249" fg:w="764525348"/><text x="68.7677%" y="303.50">&lt;..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (69,980,833 samples, 0.17%)</title><rect x="70.2459%" y="277" width="0.1741%" height="15" fill="rgb(230,69,54)" fg:x="28231804764" fg:w="69980833"/><text x="70.4959%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (65,900,177 samples, 0.16%)</title><rect x="70.2560%" y="261" width="0.1640%" height="15" fill="rgb(214,135,41)" fg:x="28235885420" fg:w="65900177"/><text x="70.5060%" y="271.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (61,784,251 samples, 0.15%)</title><rect x="70.2663%" y="245" width="0.1537%" height="15" fill="rgb(237,67,25)" fg:x="28240001346" fg:w="61784251"/><text x="70.5163%" y="255.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h467754a955f113d8E.llvm.7022287322672284463 (57,662,655 samples, 0.14%)</title><rect x="70.2765%" y="229" width="0.1435%" height="15" fill="rgb(222,189,50)" fg:x="28244122942" fg:w="57662655"/><text x="70.5265%" y="239.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h910e9d5dc148ea65E.llvm.13083574330315652211 (4,112,979 samples, 0.01%)</title><rect x="70.4200%" y="293" width="0.0102%" height="15" fill="rgb(245,148,34)" fg:x="28301785597" fg:w="4112979"/><text x="70.6700%" y="303.50"></text></g><g><title>__GI___libc_malloc (4,112,979 samples, 0.01%)</title><rect x="70.4200%" y="277" width="0.0102%" height="15" fill="rgb(222,29,6)" fg:x="28301785597" fg:w="4112979"/><text x="70.6700%" y="287.50"></text></g><g><title>_int_malloc (4,112,979 samples, 0.01%)</title><rect x="70.4200%" y="261" width="0.0102%" height="15" fill="rgb(221,189,43)" fg:x="28301785597" fg:w="4112979"/><text x="70.6700%" y="271.50"></text></g><g><title>malloc_consolidate (4,112,979 samples, 0.01%)</title><rect x="70.4200%" y="245" width="0.0102%" height="15" fill="rgb(207,36,27)" fg:x="28301785597" fg:w="4112979"/><text x="70.6700%" y="255.50"></text></g><g><title>__GI___libc_malloc (37,190,353 samples, 0.09%)</title><rect x="70.4302%" y="293" width="0.0925%" height="15" fill="rgb(217,90,24)" fg:x="28305898576" fg:w="37190353"/><text x="70.6802%" y="303.50"></text></g><g><title>_int_malloc (37,190,353 samples, 0.09%)</title><rect x="70.4302%" y="277" width="0.0925%" height="15" fill="rgb(224,66,35)" fg:x="28305898576" fg:w="37190353"/><text x="70.6802%" y="287.50"></text></g><g><title>alloc_perturb (4,120,049 samples, 0.01%)</title><rect x="70.5125%" y="261" width="0.0103%" height="15" fill="rgb(221,13,50)" fg:x="28338968880" fg:w="4120049"/><text x="70.7625%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (4,166,413 samples, 0.01%)</title><rect x="70.6046%" y="245" width="0.0104%" height="15" fill="rgb(236,68,49)" fg:x="28375969443" fg:w="4166413"/><text x="70.8546%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20,768,220 samples, 0.05%)</title><rect x="70.5737%" y="261" width="0.0517%" height="15" fill="rgb(229,146,28)" fg:x="28363547079" fg:w="20768220"/><text x="70.8237%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,179,443 samples, 0.01%)</title><rect x="70.6149%" y="245" width="0.0104%" height="15" fill="rgb(225,31,38)" fg:x="28380135856" fg:w="4179443"/><text x="70.8649%" y="255.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,324,683 samples, 0.02%)</title><rect x="70.7281%" y="229" width="0.0207%" height="15" fill="rgb(250,208,3)" fg:x="28425626703" fg:w="8324683"/><text x="70.9781%" y="239.50"></text></g><g><title>__GI___libc_malloc (82,616,196 samples, 0.21%)</title><rect x="70.7692%" y="197" width="0.2056%" height="15" fill="rgb(246,54,23)" fg:x="28442138438" fg:w="82616196"/><text x="71.0192%" y="207.50"></text></g><g><title>_int_malloc (66,168,259 samples, 0.16%)</title><rect x="70.8101%" y="181" width="0.1646%" height="15" fill="rgb(243,76,11)" fg:x="28458586375" fg:w="66168259"/><text x="71.0601%" y="191.50"></text></g><g><title>checked_request2size (4,176,035 samples, 0.01%)</title><rect x="70.9644%" y="165" width="0.0104%" height="15" fill="rgb(245,21,50)" fg:x="28520578599" fg:w="4176035"/><text x="71.2144%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (128,097,378 samples, 0.32%)</title><rect x="70.6662%" y="245" width="0.3187%" height="15" fill="rgb(228,9,43)" fg:x="28400730187" fg:w="128097378"/><text x="70.9162%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (94,876,179 samples, 0.24%)</title><rect x="70.7488%" y="229" width="0.2361%" height="15" fill="rgb(208,100,47)" fg:x="28433951386" fg:w="94876179"/><text x="70.9988%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (90,756,405 samples, 0.23%)</title><rect x="70.7591%" y="213" width="0.2258%" height="15" fill="rgb(232,26,8)" fg:x="28438071160" fg:w="90756405"/><text x="71.0091%" y="223.50"></text></g><g><title>__rdl_alloc (4,072,931 samples, 0.01%)</title><rect x="70.9748%" y="197" width="0.0101%" height="15" fill="rgb(216,166,38)" fg:x="28524754634" fg:w="4072931"/><text x="71.2248%" y="207.50"></text></g><g><title>alloc::fmt::format::format_inner (202,076,634 samples, 0.50%)</title><rect x="70.5228%" y="293" width="0.5028%" height="15" fill="rgb(251,202,51)" fg:x="28343088929" fg:w="202076634"/><text x="70.7728%" y="303.50"></text></g><g><title>core::fmt::write (193,905,676 samples, 0.48%)</title><rect x="70.5431%" y="277" width="0.4825%" height="15" fill="rgb(254,216,34)" fg:x="28351259887" fg:w="193905676"/><text x="70.7931%" y="287.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (160,850,264 samples, 0.40%)</title><rect x="70.6253%" y="261" width="0.4002%" height="15" fill="rgb(251,32,27)" fg:x="28384315299" fg:w="160850264"/><text x="70.8753%" y="271.50"></text></g><g><title>core::fmt::Formatter::pad_integral (16,337,998 samples, 0.04%)</title><rect x="70.9849%" y="245" width="0.0407%" height="15" fill="rgb(208,127,28)" fg:x="28528827565" fg:w="16337998"/><text x="71.2349%" y="255.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (8,149,344 samples, 0.02%)</title><rect x="71.0053%" y="229" width="0.0203%" height="15" fill="rgb(224,137,22)" fg:x="28537016219" fg:w="8149344"/><text x="71.2553%" y="239.50"></text></g><g><title>__GI_memcpy (8,284,095 samples, 0.02%)</title><rect x="71.0256%" y="229" width="0.0206%" height="15" fill="rgb(254,70,32)" fg:x="28545165563" fg:w="8284095"/><text x="71.2756%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,284,095 samples, 0.02%)</title><rect x="71.0256%" y="213" width="0.0206%" height="15" fill="rgb(229,75,37)" fg:x="28545165563" fg:w="8284095"/><text x="71.2756%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (78,560,842 samples, 0.20%)</title><rect x="71.0256%" y="293" width="0.1955%" height="15" fill="rgb(252,64,23)" fg:x="28545165563" fg:w="78560842"/><text x="71.2756%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (78,560,842 samples, 0.20%)</title><rect x="71.0256%" y="277" width="0.1955%" height="15" fill="rgb(232,162,48)" fg:x="28545165563" fg:w="78560842"/><text x="71.2756%" y="287.50"></text></g><g><title>__GI___libc_realloc (78,560,842 samples, 0.20%)</title><rect x="71.0256%" y="261" width="0.1955%" height="15" fill="rgb(246,160,12)" fg:x="28545165563" fg:w="78560842"/><text x="71.2756%" y="271.50"></text></g><g><title>_int_realloc (78,560,842 samples, 0.20%)</title><rect x="71.0256%" y="245" width="0.1955%" height="15" fill="rgb(247,166,0)" fg:x="28545165563" fg:w="78560842"/><text x="71.2756%" y="255.50"></text></g><g><title>_int_malloc (70,276,747 samples, 0.17%)</title><rect x="71.0462%" y="229" width="0.1749%" height="15" fill="rgb(249,219,21)" fg:x="28553449658" fg:w="70276747"/><text x="71.2962%" y="239.50"></text></g><g><title>malloc_consolidate (45,540,917 samples, 0.11%)</title><rect x="71.1077%" y="213" width="0.1133%" height="15" fill="rgb(205,209,3)" fg:x="28578185488" fg:w="45540917"/><text x="71.3577%" y="223.50"></text></g><g><title>unlink_chunk (12,327,412 samples, 0.03%)</title><rect x="71.1904%" y="197" width="0.0307%" height="15" fill="rgb(243,44,1)" fg:x="28611398993" fg:w="12327412"/><text x="71.4404%" y="207.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (12,417,918 samples, 0.03%)</title><rect x="73.3767%" y="245" width="0.0309%" height="15" fill="rgb(206,159,16)" fg:x="29490071448" fg:w="12417918"/><text x="73.6267%" y="255.50"></text></g><g><title>__GI___libc_malloc (28,757,241 samples, 0.07%)</title><rect x="73.4076%" y="245" width="0.0716%" height="15" fill="rgb(244,77,30)" fg:x="29502489366" fg:w="28757241"/><text x="73.6576%" y="255.50"></text></g><g><title>tcache_get (16,476,217 samples, 0.04%)</title><rect x="73.4381%" y="229" width="0.0410%" height="15" fill="rgb(218,69,12)" fg:x="29514770390" fg:w="16476217"/><text x="73.6881%" y="239.50"></text></g><g><title>tcache_get_n (16,476,217 samples, 0.04%)</title><rect x="73.4381%" y="213" width="0.0410%" height="15" fill="rgb(212,87,7)" fg:x="29514770390" fg:w="16476217"/><text x="73.6881%" y="223.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (677,282,272 samples, 1.69%)</title><rect x="71.8559%" y="261" width="1.6852%" height="15" fill="rgb(245,114,25)" fg:x="28878879799" fg:w="677282272"/><text x="72.1059%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (24,915,464 samples, 0.06%)</title><rect x="73.4791%" y="245" width="0.0620%" height="15" fill="rgb(210,61,42)" fg:x="29531246607" fg:w="24915464"/><text x="73.7291%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (4,146,140 samples, 0.01%)</title><rect x="73.5308%" y="229" width="0.0103%" height="15" fill="rgb(211,52,33)" fg:x="29552015931" fg:w="4146140"/><text x="73.7808%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12,379,593 samples, 0.03%)</title><rect x="73.5614%" y="245" width="0.0308%" height="15" fill="rgb(234,58,33)" fg:x="29564333632" fg:w="12379593"/><text x="73.8114%" y="255.50"></text></g><g><title>__GI___libc_free (8,234,091 samples, 0.02%)</title><rect x="73.5922%" y="245" width="0.0205%" height="15" fill="rgb(220,115,36)" fg:x="29576713225" fg:w="8234091"/><text x="73.8422%" y="255.50"></text></g><g><title>_int_free (8,234,091 samples, 0.02%)</title><rect x="73.5922%" y="229" width="0.0205%" height="15" fill="rgb(243,153,54)" fg:x="29576713225" fg:w="8234091"/><text x="73.8422%" y="239.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17h76fd9fded13229cdE.llvm.6968854181879494103 (66,026,868 samples, 0.16%)</title><rect x="73.5411%" y="261" width="0.1643%" height="15" fill="rgb(251,47,18)" fg:x="29556162071" fg:w="66026868"/><text x="73.7911%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (37,241,623 samples, 0.09%)</title><rect x="73.6127%" y="245" width="0.0927%" height="15" fill="rgb(242,102,42)" fg:x="29584947316" fg:w="37241623"/><text x="73.8627%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (863,083,785 samples, 2.15%)</title><rect x="71.6301%" y="277" width="2.1475%" height="15" fill="rgb(234,31,38)" fg:x="28788116096" fg:w="863083785"/><text x="71.8801%" y="287.50">&lt;..</text></g><g><title>core::hash::BuildHasher::hash_one (29,010,942 samples, 0.07%)</title><rect x="73.7054%" y="261" width="0.0722%" height="15" fill="rgb(221,117,51)" fg:x="29622188939" fg:w="29010942"/><text x="73.9554%" y="271.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,323,432 samples, 0.02%)</title><rect x="73.7569%" y="245" width="0.0207%" height="15" fill="rgb(212,20,18)" fg:x="29642876449" fg:w="8323432"/><text x="74.0069%" y="255.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (37,169,188 samples, 0.09%)</title><rect x="73.7776%" y="277" width="0.0925%" height="15" fill="rgb(245,133,36)" fg:x="29651199881" fg:w="37169188"/><text x="74.0276%" y="287.50"></text></g><g><title>_ZN4rand4rngs7adapter9reseeding29ReseedingCore$LT$R$C$Rsdr$GT$19reseed_and_generate17hb4a9559b6e1e17f5E.llvm.12560045689611519714 (4,161,027 samples, 0.01%)</title><rect x="73.8701%" y="277" width="0.0104%" height="15" fill="rgb(212,6,19)" fg:x="29688369069" fg:w="4161027"/><text x="74.1201%" y="287.50"></text></g><g><title>&lt;rand_core::os::OsRng as rand_core::RngCore&gt;::try_fill_bytes (4,161,027 samples, 0.01%)</title><rect x="73.8701%" y="261" width="0.0104%" height="15" fill="rgb(218,1,36)" fg:x="29688369069" fg:w="4161027"/><text x="74.1201%" y="271.50"></text></g><g><title>getrandom::imp::getrandom_inner (4,161,027 samples, 0.01%)</title><rect x="73.8701%" y="245" width="0.0104%" height="15" fill="rgb(246,84,54)" fg:x="29688369069" fg:w="4161027"/><text x="74.1201%" y="255.50"></text></g><g><title>syscall (4,161,027 samples, 0.01%)</title><rect x="73.8701%" y="229" width="0.0104%" height="15" fill="rgb(242,110,6)" fg:x="29688369069" fg:w="4161027"/><text x="74.1201%" y="239.50"></text></g><g><title>[unknown] (4,161,027 samples, 0.01%)</title><rect x="73.8701%" y="213" width="0.0104%" height="15" fill="rgb(214,47,5)" fg:x="29688369069" fg:w="4161027"/><text x="74.1201%" y="223.50"></text></g><g><title>[unknown] (4,161,027 samples, 0.01%)</title><rect x="73.8701%" y="197" width="0.0104%" height="15" fill="rgb(218,159,25)" fg:x="29688369069" fg:w="4161027"/><text x="74.1201%" y="207.50"></text></g><g><title>[unknown] (4,161,027 samples, 0.01%)</title><rect x="73.8701%" y="181" width="0.0104%" height="15" fill="rgb(215,211,28)" fg:x="29688369069" fg:w="4161027"/><text x="74.1201%" y="191.50"></text></g><g><title>[unknown] (4,161,027 samples, 0.01%)</title><rect x="73.8701%" y="165" width="0.0104%" height="15" fill="rgb(238,59,32)" fg:x="29688369069" fg:w="4161027"/><text x="74.1201%" y="175.50"></text></g><g><title>[unknown] (4,161,027 samples, 0.01%)</title><rect x="73.8701%" y="149" width="0.0104%" height="15" fill="rgb(226,82,3)" fg:x="29688369069" fg:w="4161027"/><text x="74.1201%" y="159.50"></text></g><g><title>[unknown] (4,142,891 samples, 0.01%)</title><rect x="88.5809%" y="245" width="0.0103%" height="15" fill="rgb(240,164,32)" fg:x="35600642981" fg:w="4142891"/><text x="88.8309%" y="255.50"></text></g><g><title>[unknown] (4,142,891 samples, 0.01%)</title><rect x="88.5809%" y="229" width="0.0103%" height="15" fill="rgb(232,46,7)" fg:x="35600642981" fg:w="4142891"/><text x="88.8309%" y="239.50"></text></g><g><title>[unknown] (4,142,891 samples, 0.01%)</title><rect x="88.5809%" y="213" width="0.0103%" height="15" fill="rgb(229,129,53)" fg:x="35600642981" fg:w="4142891"/><text x="88.8309%" y="223.50"></text></g><g><title>[unknown] (4,142,891 samples, 0.01%)</title><rect x="88.5809%" y="197" width="0.0103%" height="15" fill="rgb(234,188,29)" fg:x="35600642981" fg:w="4142891"/><text x="88.8309%" y="207.50"></text></g><g><title>__GI___libc_malloc (8,132,721 samples, 0.02%)</title><rect x="88.5912%" y="245" width="0.0202%" height="15" fill="rgb(246,141,4)" fg:x="35604785872" fg:w="8132721"/><text x="88.8412%" y="255.50"></text></g><g><title>tcache_get (4,053,683 samples, 0.01%)</title><rect x="88.6013%" y="229" width="0.0101%" height="15" fill="rgb(229,23,39)" fg:x="35608864910" fg:w="4053683"/><text x="88.8513%" y="239.50"></text></g><g><title>tcache_get_n (4,053,683 samples, 0.01%)</title><rect x="88.6013%" y="213" width="0.0101%" height="15" fill="rgb(206,12,3)" fg:x="35608864910" fg:w="4053683"/><text x="88.8513%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned (4,159,496 samples, 0.01%)</title><rect x="89.2704%" y="165" width="0.0103%" height="15" fill="rgb(252,226,20)" fg:x="35877779874" fg:w="4159496"/><text x="89.5204%" y="175.50"></text></g><g><title>__GI_memcpy (182,348,739 samples, 0.45%)</title><rect x="89.2602%" y="181" width="0.4537%" height="15" fill="rgb(216,123,35)" fg:x="35873647255" fg:w="182348739"/><text x="89.5102%" y="191.50"></text></g><g><title>__memcpy_avx_unaligned_erms (174,056,624 samples, 0.43%)</title><rect x="89.2808%" y="165" width="0.4331%" height="15" fill="rgb(212,68,40)" fg:x="35881939370" fg:w="174056624"/><text x="89.5308%" y="175.50"></text></g><g><title>_int_free (57,836,687 samples, 0.14%)</title><rect x="89.7139%" y="181" width="0.1439%" height="15" fill="rgb(254,125,32)" fg:x="36055995994" fg:w="57836687"/><text x="89.9639%" y="191.50"></text></g><g><title>_int_free_merge_chunk (90,780,708 samples, 0.23%)</title><rect x="89.8578%" y="181" width="0.2259%" height="15" fill="rgb(253,97,22)" fg:x="36113832681" fg:w="90780708"/><text x="90.1078%" y="191.50"></text></g><g><title>_int_free_create_chunk (69,998,153 samples, 0.17%)</title><rect x="89.9095%" y="165" width="0.1742%" height="15" fill="rgb(241,101,14)" fg:x="36134615236" fg:w="69998153"/><text x="90.1595%" y="175.50"></text></g><g><title>unlink_chunk (28,995,047 samples, 0.07%)</title><rect x="90.0115%" y="149" width="0.0721%" height="15" fill="rgb(238,103,29)" fg:x="36175618342" fg:w="28995047"/><text x="90.2615%" y="159.50"></text></g><g><title>alloc_perturb (4,131,413 samples, 0.01%)</title><rect x="90.5883%" y="165" width="0.0103%" height="15" fill="rgb(233,195,47)" fg:x="36407431806" fg:w="4131413"/><text x="90.8383%" y="175.50"></text></g><g><title>malloc_consolidate (24,847,802 samples, 0.06%)</title><rect x="90.5986%" y="165" width="0.0618%" height="15" fill="rgb(246,218,30)" fg:x="36411563219" fg:w="24847802"/><text x="90.8486%" y="175.50"></text></g><g><title>_int_malloc (269,123,485 samples, 0.67%)</title><rect x="90.0837%" y="181" width="0.6696%" height="15" fill="rgb(219,145,47)" fg:x="36204613389" fg:w="269123485"/><text x="90.3337%" y="191.50"></text></g><g><title>unlink_chunk (37,325,853 samples, 0.09%)</title><rect x="90.6604%" y="165" width="0.0929%" height="15" fill="rgb(243,12,26)" fg:x="36436411021" fg:w="37325853"/><text x="90.9104%" y="175.50"></text></g><g><title>_int_realloc (691,019,013 samples, 1.72%)</title><rect x="89.0443%" y="197" width="1.7194%" height="15" fill="rgb(214,87,16)" fg:x="35786894142" fg:w="691019013"/><text x="89.2943%" y="207.50"></text></g><g><title>unlink_chunk (4,176,281 samples, 0.01%)</title><rect x="90.7533%" y="181" width="0.0104%" height="15" fill="rgb(208,99,42)" fg:x="36473736874" fg:w="4176281"/><text x="91.0033%" y="191.50"></text></g><g><title>checked_request2size (8,249,992 samples, 0.02%)</title><rect x="90.7637%" y="197" width="0.0205%" height="15" fill="rgb(253,99,2)" fg:x="36477913155" fg:w="8249992"/><text x="91.0137%" y="207.50"></text></g><g><title>__GI___libc_realloc (786,146,419 samples, 1.96%)</title><rect x="88.8384%" y="213" width="1.9561%" height="15" fill="rgb(220,168,23)" fg:x="35704152068" fg:w="786146419"/><text x="89.0884%" y="223.50">_..</text></g><g><title>musable (4,135,340 samples, 0.01%)</title><rect x="90.7842%" y="197" width="0.0103%" height="15" fill="rgb(242,38,24)" fg:x="36486163147" fg:w="4135340"/><text x="91.0342%" y="207.50"></text></g><g><title>__rdl_realloc (8,323,782 samples, 0.02%)</title><rect x="90.7945%" y="213" width="0.0207%" height="15" fill="rgb(225,182,9)" fg:x="36490298487" fg:w="8323782"/><text x="91.0445%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,824,703,654 samples, 12.00%)</title><rect x="78.8206%" y="261" width="12.0047%" height="15" fill="rgb(243,178,37)" fg:x="31677977198" fg:w="4824703654"/><text x="79.0706%" y="271.50">&lt;alloc::vec::Vec&lt;T..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (889,762,259 samples, 2.21%)</title><rect x="88.6114%" y="245" width="2.2139%" height="15" fill="rgb(232,139,19)" fg:x="35612918593" fg:w="889762259"/><text x="88.8614%" y="255.50">a..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hca6796852e1fe208E.llvm.10007712156778149188 (848,238,939 samples, 2.11%)</title><rect x="88.7147%" y="229" width="2.1106%" height="15" fill="rgb(225,201,24)" fg:x="35654441913" fg:w="848238939"/><text x="88.9647%" y="239.50">_..</text></g><g><title>__rust_realloc (4,058,583 samples, 0.01%)</title><rect x="90.8152%" y="213" width="0.0101%" height="15" fill="rgb(221,47,46)" fg:x="36498622269" fg:w="4058583"/><text x="91.0652%" y="223.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (33,047,268 samples, 0.08%)</title><rect x="90.8253%" y="261" width="0.0822%" height="15" fill="rgb(249,23,13)" fg:x="36502680852" fg:w="33047268"/><text x="91.0753%" y="271.50"></text></g><g><title>_int_free (33,120,690 samples, 0.08%)</title><rect x="90.9280%" y="245" width="0.0824%" height="15" fill="rgb(219,9,5)" fg:x="36543975074" fg:w="33120690"/><text x="91.1780%" y="255.50"></text></g><g><title>__GI___libc_free (70,319,397 samples, 0.17%)</title><rect x="90.9075%" y="261" width="0.1750%" height="15" fill="rgb(254,171,16)" fg:x="36535728120" fg:w="70319397"/><text x="91.1575%" y="271.50"></text></g><g><title>_int_free_merge_chunk (28,951,753 samples, 0.07%)</title><rect x="91.0105%" y="245" width="0.0720%" height="15" fill="rgb(230,171,20)" fg:x="36577095764" fg:w="28951753"/><text x="91.2605%" y="255.50"></text></g><g><title>_int_free_create_chunk (16,563,950 samples, 0.04%)</title><rect x="91.0413%" y="229" width="0.0412%" height="15" fill="rgb(210,71,41)" fg:x="36589483567" fg:w="16563950"/><text x="91.2913%" y="239.50"></text></g><g><title>unlink_chunk (16,563,950 samples, 0.04%)</title><rect x="91.0413%" y="213" width="0.0412%" height="15" fill="rgb(206,173,20)" fg:x="36589483567" fg:w="16563950"/><text x="91.2913%" y="223.50"></text></g><g><title>malloc_consolidate (12,494,806 samples, 0.03%)</title><rect x="91.4213%" y="229" width="0.0311%" height="15" fill="rgb(233,88,34)" fg:x="36742231504" fg:w="12494806"/><text x="91.6713%" y="239.50"></text></g><g><title>_int_malloc (156,896,927 samples, 0.39%)</title><rect x="91.1031%" y="245" width="0.3904%" height="15" fill="rgb(223,209,46)" fg:x="36614341273" fg:w="156896927"/><text x="91.3531%" y="255.50"></text></g><g><title>unlink_chunk (16,511,890 samples, 0.04%)</title><rect x="91.4524%" y="229" width="0.0411%" height="15" fill="rgb(250,43,18)" fg:x="36754726310" fg:w="16511890"/><text x="91.7024%" y="239.50"></text></g><g><title>__GI___libc_malloc (169,343,703 samples, 0.42%)</title><rect x="91.0825%" y="261" width="0.4214%" height="15" fill="rgb(208,13,10)" fg:x="36606047517" fg:w="169343703"/><text x="91.3325%" y="271.50"></text></g><g><title>arena_for_chunk (4,153,020 samples, 0.01%)</title><rect x="91.4935%" y="245" width="0.0103%" height="15" fill="rgb(212,200,36)" fg:x="36771238200" fg:w="4153020"/><text x="91.7435%" y="255.50"></text></g><g><title>__rust_dealloc (8,262,012 samples, 0.02%)</title><rect x="91.5039%" y="261" width="0.0206%" height="15" fill="rgb(225,90,30)" fg:x="36775391220" fg:w="8262012"/><text x="91.7539%" y="271.50"></text></g><g><title>_int_free (4,163,701 samples, 0.01%)</title><rect x="91.5554%" y="229" width="0.0104%" height="15" fill="rgb(236,182,39)" fg:x="36796113832" fg:w="4163701"/><text x="91.8054%" y="239.50"></text></g><g><title>__GI___libc_free (20,714,830 samples, 0.05%)</title><rect x="91.5554%" y="245" width="0.0515%" height="15" fill="rgb(212,144,35)" fg:x="36796113832" fg:w="20714830"/><text x="91.8054%" y="255.50"></text></g><g><title>_int_free_merge_chunk (16,551,129 samples, 0.04%)</title><rect x="91.5658%" y="229" width="0.0412%" height="15" fill="rgb(228,63,44)" fg:x="36800277533" fg:w="16551129"/><text x="91.8158%" y="239.50"></text></g><g><title>_int_free_create_chunk (8,324,424 samples, 0.02%)</title><rect x="91.5862%" y="213" width="0.0207%" height="15" fill="rgb(228,109,6)" fg:x="36808504238" fg:w="8324424"/><text x="91.8362%" y="223.50"></text></g><g><title>unlink_chunk (4,161,644 samples, 0.01%)</title><rect x="91.5966%" y="197" width="0.0104%" height="15" fill="rgb(238,117,24)" fg:x="36812667018" fg:w="4161644"/><text x="91.8466%" y="207.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h910e9d5dc148ea65E.llvm.13083574330315652211 (10,227,599,502 samples, 25.45%)</title><rect x="73.8804%" y="277" width="25.4481%" height="15" fill="rgb(242,26,26)" fg:x="29692530096" fg:w="10227599502"/><text x="74.1304%" y="287.50">_ZN7lb_apis14del_pol_single16DelegatingPo..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3,136,476,366 samples, 7.80%)</title><rect x="91.5244%" y="261" width="7.8041%" height="15" fill="rgb(221,92,48)" fg:x="36783653232" fg:w="3136476366"/><text x="91.7744%" y="271.50">alloc::sync..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::RRPickerPicker&gt; (3,103,300,936 samples, 7.72%)</title><rect x="91.6070%" y="245" width="7.7216%" height="15" fill="rgb(209,209,32)" fg:x="36816828662" fg:w="3103300936"/><text x="91.8570%" y="255.50">core::ptr::..</text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (4,175,080 samples, 0.01%)</title><rect x="99.3285%" y="277" width="0.0104%" height="15" fill="rgb(221,70,22)" fg:x="39920129598" fg:w="4175080"/><text x="99.5785%" y="287.50"></text></g><g><title>bencher::Bencher::iter (11,333,548,330 samples, 28.20%)</title><rect x="71.2210%" y="293" width="28.1999%" height="15" fill="rgb(248,145,5)" fg:x="28623726405" fg:w="11333548330"/><text x="71.4710%" y="303.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (32,970,057 samples, 0.08%)</title><rect x="99.3389%" y="277" width="0.0820%" height="15" fill="rgb(226,116,26)" fg:x="39924304678" fg:w="32970057"/><text x="99.5889%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,510,872 samples, 0.04%)</title><rect x="99.4210%" y="277" width="0.0411%" height="15" fill="rgb(244,5,17)" fg:x="39957274735" fg:w="16510872"/><text x="99.6710%" y="287.50"></text></g><g><title>__GI___libc_free (8,204,505 samples, 0.02%)</title><rect x="99.5030%" y="245" width="0.0204%" height="15" fill="rgb(252,159,33)" fg:x="39990229254" fg:w="8204505"/><text x="99.7530%" y="255.50"></text></g><g><title>_int_free (8,204,505 samples, 0.02%)</title><rect x="99.5030%" y="229" width="0.0204%" height="15" fill="rgb(206,71,0)" fg:x="39990229254" fg:w="8204505"/><text x="99.7530%" y="239.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (24,710,966 samples, 0.06%)</title><rect x="99.4825%" y="261" width="0.0615%" height="15" fill="rgb(233,118,54)" fg:x="39981992505" fg:w="24710966"/><text x="99.7325%" y="271.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (8,269,712 samples, 0.02%)</title><rect x="99.5234%" y="245" width="0.0206%" height="15" fill="rgb(234,83,48)" fg:x="39998433759" fg:w="8269712"/><text x="99.7734%" y="255.50"></text></g><g><title>_int_free (8,141,203 samples, 0.02%)</title><rect x="99.5644%" y="245" width="0.0203%" height="15" fill="rgb(228,3,54)" fg:x="40014925549" fg:w="8141203"/><text x="99.8144%" y="255.50"></text></g><g><title>_int_free_maybe_consolidate (111,602,299 samples, 0.28%)</title><rect x="99.5847%" y="245" width="0.2777%" height="15" fill="rgb(226,155,13)" fg:x="40023066752" fg:w="111602299"/><text x="99.8347%" y="255.50"></text></g><g><title>malloc_consolidate (111,602,299 samples, 0.28%)</title><rect x="99.5847%" y="229" width="0.2777%" height="15" fill="rgb(241,28,37)" fg:x="40023066752" fg:w="111602299"/><text x="99.8347%" y="239.50"></text></g><g><title>unlink_chunk (41,434,494 samples, 0.10%)</title><rect x="99.7592%" y="213" width="0.1031%" height="15" fill="rgb(233,93,10)" fg:x="40093234557" fg:w="41434494"/><text x="100.0092%" y="223.50"></text></g><g><title>__GI___libc_free (136,184,785 samples, 0.34%)</title><rect x="99.5439%" y="261" width="0.3389%" height="15" fill="rgb(225,113,19)" fg:x="40006703471" fg:w="136184785"/><text x="99.7939%" y="271.50"></text></g><g><title>_int_free_merge_chunk (8,219,205 samples, 0.02%)</title><rect x="99.8623%" y="245" width="0.0205%" height="15" fill="rgb(241,2,18)" fg:x="40134669051" fg:w="8219205"/><text x="100.1123%" y="255.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h20a81b591be97ce2E.llvm.13988653600275597160 (189,900,645 samples, 0.47%)</title><rect x="99.4620%" y="277" width="0.4725%" height="15" fill="rgb(228,207,21)" fg:x="39973785607" fg:w="189900645"/><text x="99.7120%" y="287.50"></text></g><g><title>__rdl_dealloc (20,797,996 samples, 0.05%)</title><rect x="99.8828%" y="261" width="0.0517%" height="15" fill="rgb(213,211,35)" fg:x="40142888256" fg:w="20797996"/><text x="100.1328%" y="271.50"></text></g><g><title>__GI___libc_free (4,183,493 samples, 0.01%)</title><rect x="99.9345%" y="277" width="0.0104%" height="15" fill="rgb(209,83,10)" fg:x="40163686252" fg:w="4183493"/><text x="100.1845%" y="287.50"></text></g><g><title>systrim (4,183,493 samples, 0.01%)</title><rect x="99.9345%" y="261" width="0.0104%" height="15" fill="rgb(209,164,1)" fg:x="40163686252" fg:w="4183493"/><text x="100.1845%" y="271.50"></text></g><g><title>__glibc_morecore (4,183,493 samples, 0.01%)</title><rect x="99.9345%" y="245" width="0.0104%" height="15" fill="rgb(213,184,43)" fg:x="40163686252" fg:w="4183493"/><text x="100.1845%" y="255.50"></text></g><g><title>__GI___sbrk (4,183,493 samples, 0.01%)</title><rect x="99.9345%" y="229" width="0.0104%" height="15" fill="rgb(231,61,34)" fg:x="40163686252" fg:w="4183493"/><text x="100.1845%" y="239.50"></text></g><g><title>__brk (4,183,493 samples, 0.01%)</title><rect x="99.9345%" y="213" width="0.0104%" height="15" fill="rgb(235,75,3)" fg:x="40163686252" fg:w="4183493"/><text x="100.1845%" y="223.50"></text></g><g><title>[unknown] (4,183,493 samples, 0.01%)</title><rect x="99.9345%" y="197" width="0.0104%" height="15" fill="rgb(220,106,47)" fg:x="40163686252" fg:w="4183493"/><text x="100.1845%" y="207.50"></text></g><g><title>[unknown] (4,183,493 samples, 0.01%)</title><rect x="99.9345%" y="181" width="0.0104%" height="15" fill="rgb(210,196,33)" fg:x="40163686252" fg:w="4183493"/><text x="100.1845%" y="191.50"></text></g><g><title>[unknown] (4,183,493 samples, 0.01%)</title><rect x="99.9345%" y="165" width="0.0104%" height="15" fill="rgb(229,154,42)" fg:x="40163686252" fg:w="4183493"/><text x="100.1845%" y="175.50"></text></g><g><title>[unknown] (4,183,493 samples, 0.01%)</title><rect x="99.9345%" y="149" width="0.0104%" height="15" fill="rgb(228,114,26)" fg:x="40163686252" fg:w="4183493"/><text x="100.1845%" y="159.50"></text></g><g><title>lb_apis::single (12,688,482,991 samples, 31.57%)</title><rect x="68.3839%" y="309" width="31.5713%" height="15" fill="rgb(208,144,1)" fg:x="27483480300" fg:w="12688482991"/><text x="68.6339%" y="319.50">lb_apis::single</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::DelegatingPolicy&gt; (214,688,556 samples, 0.53%)</title><rect x="99.4210%" y="293" width="0.5342%" height="15" fill="rgb(239,112,37)" fg:x="39957274735" fg:w="214688556"/><text x="99.6710%" y="303.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4,093,546 samples, 0.01%)</title><rect x="99.9450%" y="277" width="0.0102%" height="15" fill="rgb(210,96,50)" fg:x="40167869745" fg:w="4093546"/><text x="100.1950%" y="287.50"></text></g><g><title>__libc_start_main_impl (40,167,785,862 samples, 99.94%)</title><rect x="0.0207%" y="453" width="99.9447%" height="15" fill="rgb(222,178,2)" fg:x="8326359" fg:w="40167785862"/><text x="0.2707%" y="463.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (40,167,785,862 samples, 99.94%)</title><rect x="0.0207%" y="437" width="99.9447%" height="15" fill="rgb(226,74,18)" fg:x="8326359" fg:w="40167785862"/><text x="0.2707%" y="447.50">__libc_start_call_main</text></g><g><title>main (40,167,785,862 samples, 99.94%)</title><rect x="0.0207%" y="421" width="99.9447%" height="15" fill="rgb(225,67,54)" fg:x="8326359" fg:w="40167785862"/><text x="0.2707%" y="431.50">main</text></g><g><title>std::rt::lang_start_internal (40,167,785,862 samples, 99.94%)</title><rect x="0.0207%" y="405" width="99.9447%" height="15" fill="rgb(251,92,32)" fg:x="8326359" fg:w="40167785862"/><text x="0.2707%" y="415.50">std::rt::lang_start_internal</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.7213793084140168291 (40,167,785,862 samples, 99.94%)</title><rect x="0.0207%" y="389" width="99.9447%" height="15" fill="rgb(228,149,22)" fg:x="8326359" fg:w="40167785862"/><text x="0.2707%" y="399.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17h3b9f680afcb1068bE.llvm.7213793084140168291</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (40,167,785,862 samples, 99.94%)</title><rect x="0.0207%" y="373" width="99.9447%" height="15" fill="rgb(243,54,13)" fg:x="8326359" fg:w="40167785862"/><text x="0.2707%" y="383.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lb_apis::main (40,167,785,862 samples, 99.94%)</title><rect x="0.0207%" y="357" width="99.9447%" height="15" fill="rgb(243,180,28)" fg:x="8326359" fg:w="40167785862"/><text x="0.2707%" y="367.50">lb_apis::main</text></g><g><title>bencher::run_tests_console (40,167,785,862 samples, 99.94%)</title><rect x="0.0207%" y="341" width="99.9447%" height="15" fill="rgb(208,167,24)" fg:x="8326359" fg:w="40167785862"/><text x="0.2707%" y="351.50">bencher::run_tests_console</text></g><g><title>bencher::Bencher::auto_bench (40,167,785,862 samples, 99.94%)</title><rect x="0.0207%" y="325" width="99.9447%" height="15" fill="rgb(245,73,45)" fg:x="8326359" fg:w="40167785862"/><text x="0.2707%" y="335.50">bencher::Bencher::auto_bench</text></g><g><title>std::time::Instant::elapsed (4,148,930 samples, 0.01%)</title><rect x="99.9551%" y="309" width="0.0103%" height="15" fill="rgb(237,203,48)" fg:x="40171963291" fg:w="4148930"/><text x="100.2051%" y="319.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (4,148,930 samples, 0.01%)</title><rect x="99.9551%" y="293" width="0.0103%" height="15" fill="rgb(211,197,16)" fg:x="40171963291" fg:w="4148930"/><text x="100.2051%" y="303.50"></text></g><g><title>_start (40,169,283,626 samples, 99.95%)</title><rect x="0.0207%" y="469" width="99.9485%" height="15" fill="rgb(243,99,51)" fg:x="8326358" fg:w="40169283626"/><text x="0.2707%" y="479.50">_start</text></g><g><title>alloc::fmt::format::format_inner (4,120,970 samples, 0.01%)</title><rect x="99.9692%" y="469" width="0.0103%" height="15" fill="rgb(215,123,29)" fg:x="40177609984" fg:w="4120970"/><text x="100.2192%" y="479.50"></text></g><g><title>core::fmt::write (4,120,970 samples, 0.01%)</title><rect x="99.9692%" y="453" width="0.0103%" height="15" fill="rgb(239,186,37)" fg:x="40177609984" fg:w="4120970"/><text x="100.2192%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (4,089,662 samples, 0.01%)</title><rect x="99.9794%" y="469" width="0.0102%" height="15" fill="rgb(252,136,39)" fg:x="40181730954" fg:w="4089662"/><text x="100.2294%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4,089,662 samples, 0.01%)</title><rect x="99.9794%" y="453" width="0.0102%" height="15" fill="rgb(223,213,32)" fg:x="40181730954" fg:w="4089662"/><text x="100.2294%" y="463.50"></text></g><g><title>all (40,189,991,975 samples, 100%)</title><rect x="0.0000%" y="501" width="100.0000%" height="15" fill="rgb(233,115,5)" fg:x="0" fg:w="40189991975"/><text x="0.2500%" y="511.50"></text></g><g><title>lb_apis-6320936 (40,189,991,975 samples, 100.00%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(207,226,44)" fg:x="0" fg:w="40189991975"/><text x="0.2500%" y="495.50">lb_apis-6320936</text></g><g><title>core::fmt::write (4,171,359 samples, 0.01%)</title><rect x="99.9896%" y="469" width="0.0104%" height="15" fill="rgb(208,126,0)" fg:x="40185820616" fg:w="4171359"/><text x="100.2396%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (4,171,359 samples, 0.01%)</title><rect x="99.9896%" y="453" width="0.0104%" height="15" fill="rgb(244,66,21)" fg:x="40185820616" fg:w="4171359"/><text x="100.2396%" y="463.50"></text></g></svg></svg>