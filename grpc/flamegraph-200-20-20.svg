<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="598" onload="init(evt)" viewBox="0 0 1200 598" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="598" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="581.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="581.00"> </text><svg id="frames" x="10" width="1180" total_samples="29365164857"><g><title>[[heap]] (3,697,015 samples, 0.01%)</title><rect x="0.0000%" y="517" width="0.0126%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="3697015"/><text x="0.2500%" y="527.50"></text></g><g><title>__GI___libc_free (3,697,015 samples, 0.01%)</title><rect x="0.0000%" y="501" width="0.0126%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="3697015"/><text x="0.2500%" y="511.50"></text></g><g><title>_int_malloc (3,697,015 samples, 0.01%)</title><rect x="0.0000%" y="485" width="0.0126%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="3697015"/><text x="0.2500%" y="495.50"></text></g><g><title>[unknown] (3,697,015 samples, 0.01%)</title><rect x="0.0000%" y="469" width="0.0126%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="3697015"/><text x="0.2500%" y="479.50"></text></g><g><title>[unknown] (4,185,125 samples, 0.01%)</title><rect x="0.0126%" y="517" width="0.0143%" height="15" fill="rgb(208,68,35)" fg:x="3697015" fg:w="4185125"/><text x="0.2626%" y="527.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h582e6995221ab373E.llvm.2902323996697549742 (4,185,125 samples, 0.01%)</title><rect x="0.0126%" y="501" width="0.0143%" height="15" fill="rgb(232,128,0)" fg:x="3697015" fg:w="4185125"/><text x="0.2626%" y="511.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4,185,125 samples, 0.01%)</title><rect x="0.0126%" y="485" width="0.0143%" height="15" fill="rgb(207,160,47)" fg:x="3697015" fg:w="4185125"/><text x="0.2626%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_cb::RRPickerPicker&gt; (4,185,125 samples, 0.01%)</title><rect x="0.0126%" y="469" width="0.0143%" height="15" fill="rgb(228,23,34)" fg:x="3697015" fg:w="4185125"/><text x="0.2626%" y="479.50"></text></g><g><title>[unknown] (4,185,125 samples, 0.01%)</title><rect x="0.0126%" y="453" width="0.0143%" height="15" fill="rgb(218,30,26)" fg:x="3697015" fg:w="4185125"/><text x="0.2626%" y="463.50"></text></g><g><title>[unknown] (3,945,980 samples, 0.01%)</title><rect x="0.1426%" y="277" width="0.0134%" height="15" fill="rgb(220,122,19)" fg:x="41862844" fg:w="3945980"/><text x="0.3926%" y="287.50"></text></g><g><title>[unknown] (3,945,980 samples, 0.01%)</title><rect x="0.1426%" y="261" width="0.0134%" height="15" fill="rgb(250,228,42)" fg:x="41862844" fg:w="3945980"/><text x="0.3926%" y="271.50"></text></g><g><title>[unknown] (3,945,980 samples, 0.01%)</title><rect x="0.1426%" y="245" width="0.0134%" height="15" fill="rgb(240,193,28)" fg:x="41862844" fg:w="3945980"/><text x="0.3926%" y="255.50"></text></g><g><title>[unknown] (3,945,980 samples, 0.01%)</title><rect x="0.1426%" y="229" width="0.0134%" height="15" fill="rgb(216,20,37)" fg:x="41862844" fg:w="3945980"/><text x="0.3926%" y="239.50"></text></g><g><title>__GI___libc_malloc (22,536,862 samples, 0.08%)</title><rect x="0.1560%" y="277" width="0.0767%" height="15" fill="rgb(206,188,39)" fg:x="45808824" fg:w="22536862"/><text x="0.4060%" y="287.50"></text></g><g><title>_int_malloc (18,464,462 samples, 0.06%)</title><rect x="0.1699%" y="261" width="0.0629%" height="15" fill="rgb(217,207,13)" fg:x="49881224" fg:w="18464462"/><text x="0.4199%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3,950,912 samples, 0.01%)</title><rect x="0.2327%" y="277" width="0.0135%" height="15" fill="rgb(231,73,38)" fg:x="68345686" fg:w="3950912"/><text x="0.4827%" y="287.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (3,950,912 samples, 0.01%)</title><rect x="0.2327%" y="261" width="0.0135%" height="15" fill="rgb(225,20,46)" fg:x="68345686" fg:w="3950912"/><text x="0.4827%" y="271.50"></text></g><g><title>__GI___libc_realloc (3,950,912 samples, 0.01%)</title><rect x="0.2327%" y="245" width="0.0135%" height="15" fill="rgb(210,31,41)" fg:x="68345686" fg:w="3950912"/><text x="0.4827%" y="255.50"></text></g><g><title>_int_realloc (3,950,912 samples, 0.01%)</title><rect x="0.2327%" y="229" width="0.0135%" height="15" fill="rgb(221,200,47)" fg:x="68345686" fg:w="3950912"/><text x="0.4827%" y="239.50"></text></g><g><title>_int_malloc (3,950,912 samples, 0.01%)</title><rect x="0.2327%" y="213" width="0.0135%" height="15" fill="rgb(226,26,5)" fg:x="68345686" fg:w="3950912"/><text x="0.4827%" y="223.50"></text></g><g><title>malloc_consolidate (3,950,912 samples, 0.01%)</title><rect x="0.2327%" y="197" width="0.0135%" height="15" fill="rgb(249,33,26)" fg:x="68345686" fg:w="3950912"/><text x="0.4827%" y="207.50"></text></g><g><title>unlink_chunk (3,950,912 samples, 0.01%)</title><rect x="0.2327%" y="181" width="0.0135%" height="15" fill="rgb(235,183,28)" fg:x="68345686" fg:w="3950912"/><text x="0.4827%" y="191.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (46,292,140 samples, 0.16%)</title><rect x="0.1152%" y="293" width="0.1576%" height="15" fill="rgb(221,5,38)" fg:x="33841581" fg:w="46292140"/><text x="0.3652%" y="303.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (7,837,123 samples, 0.03%)</title><rect x="0.2462%" y="277" width="0.0267%" height="15" fill="rgb(247,18,42)" fg:x="72296598" fg:w="7837123"/><text x="0.4962%" y="287.50"></text></g><g><title>__GI___libc_realloc (11,234,773 samples, 0.04%)</title><rect x="0.2729%" y="261" width="0.0383%" height="15" fill="rgb(241,131,45)" fg:x="80133721" fg:w="11234773"/><text x="0.5229%" y="271.50"></text></g><g><title>_int_realloc (11,234,773 samples, 0.04%)</title><rect x="0.2729%" y="245" width="0.0383%" height="15" fill="rgb(249,31,29)" fg:x="80133721" fg:w="11234773"/><text x="0.5229%" y="255.50"></text></g><g><title>__GI_memcpy (8,023,233 samples, 0.03%)</title><rect x="0.2838%" y="229" width="0.0273%" height="15" fill="rgb(225,111,53)" fg:x="83345261" fg:w="8023233"/><text x="0.5338%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,023,233 samples, 0.03%)</title><rect x="0.2838%" y="213" width="0.0273%" height="15" fill="rgb(238,160,17)" fg:x="83345261" fg:w="8023233"/><text x="0.5338%" y="223.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (71,498,234 samples, 0.24%)</title><rect x="0.0815%" y="309" width="0.2435%" height="15" fill="rgb(214,148,48)" fg:x="23926061" fg:w="71498234"/><text x="0.3315%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (15,290,574 samples, 0.05%)</title><rect x="0.2729%" y="293" width="0.0521%" height="15" fill="rgb(232,36,49)" fg:x="80133721" fg:w="15290574"/><text x="0.5229%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (15,290,574 samples, 0.05%)</title><rect x="0.2729%" y="277" width="0.0521%" height="15" fill="rgb(209,103,24)" fg:x="80133721" fg:w="15290574"/><text x="0.5229%" y="287.50"></text></g><g><title>__rust_realloc (4,055,801 samples, 0.01%)</title><rect x="0.3111%" y="261" width="0.0138%" height="15" fill="rgb(229,88,8)" fg:x="91368494" fg:w="4055801"/><text x="0.5611%" y="271.50"></text></g><g><title>__GI___libc_free (16,005,698 samples, 0.05%)</title><rect x="0.3250%" y="309" width="0.0545%" height="15" fill="rgb(213,181,19)" fg:x="95424295" fg:w="16005698"/><text x="0.5750%" y="319.50"></text></g><g><title>_int_free (11,960,857 samples, 0.04%)</title><rect x="0.3387%" y="293" width="0.0407%" height="15" fill="rgb(254,191,54)" fg:x="99469136" fg:w="11960857"/><text x="0.5887%" y="303.50"></text></g><g><title>__rdl_dealloc (4,057,837 samples, 0.01%)</title><rect x="0.3795%" y="309" width="0.0138%" height="15" fill="rgb(241,83,37)" fg:x="111429993" fg:w="4057837"/><text x="0.6295%" y="319.50"></text></g><g><title>__GI___libc_malloc (12,018,931 samples, 0.04%)</title><rect x="0.5297%" y="277" width="0.0409%" height="15" fill="rgb(233,36,39)" fg:x="155546932" fg:w="12018931"/><text x="0.7797%" y="287.50"></text></g><g><title>_int_malloc (12,018,931 samples, 0.04%)</title><rect x="0.5297%" y="261" width="0.0409%" height="15" fill="rgb(226,3,54)" fg:x="155546932" fg:w="12018931"/><text x="0.7797%" y="271.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h368aaacc3eb2e184E.llvm.9464877178135716140 (40,109,087 samples, 0.14%)</title><rect x="0.4476%" y="293" width="0.1366%" height="15" fill="rgb(245,192,40)" fg:x="131433237" fg:w="40109087"/><text x="0.6976%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (3,976,461 samples, 0.01%)</title><rect x="0.5706%" y="277" width="0.0135%" height="15" fill="rgb(238,167,29)" fg:x="167565863" fg:w="3976461"/><text x="0.8206%" y="287.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (163,342,202 samples, 0.56%)</title><rect x="0.0815%" y="325" width="0.5562%" height="15" fill="rgb(232,182,51)" fg:x="23926061" fg:w="163342202"/><text x="0.3315%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (71,780,433 samples, 0.24%)</title><rect x="0.3933%" y="309" width="0.2444%" height="15" fill="rgb(231,60,39)" fg:x="115487830" fg:w="71780433"/><text x="0.6433%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15,725,939 samples, 0.05%)</title><rect x="0.5842%" y="293" width="0.0536%" height="15" fill="rgb(208,69,12)" fg:x="171542324" fg:w="15725939"/><text x="0.8342%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (3,932,532 samples, 0.01%)</title><rect x="0.6243%" y="277" width="0.0134%" height="15" fill="rgb(235,93,37)" fg:x="183335731" fg:w="3932532"/><text x="0.8743%" y="287.50"></text></g><g><title>__GI___libc_malloc (16,054,378 samples, 0.05%)</title><rect x="0.7465%" y="277" width="0.0547%" height="15" fill="rgb(213,116,39)" fg:x="219214071" fg:w="16054378"/><text x="0.9965%" y="287.50"></text></g><g><title>_int_malloc (16,054,378 samples, 0.05%)</title><rect x="0.7465%" y="261" width="0.0547%" height="15" fill="rgb(222,207,29)" fg:x="219214071" fg:w="16054378"/><text x="0.9965%" y="271.50"></text></g><g><title>__rdl_alloc (4,058,489 samples, 0.01%)</title><rect x="0.8012%" y="277" width="0.0138%" height="15" fill="rgb(206,96,30)" fg:x="235268449" fg:w="4058489"/><text x="1.0512%" y="287.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h5e4397d94e40bc48E.llvm.6231558932131486975 (56,025,154 samples, 0.19%)</title><rect x="0.6377%" y="325" width="0.1908%" height="15" fill="rgb(218,138,4)" fg:x="187268263" fg:w="56025154"/><text x="0.8877%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (56,025,154 samples, 0.19%)</title><rect x="0.6377%" y="309" width="0.1908%" height="15" fill="rgb(250,191,14)" fg:x="187268263" fg:w="56025154"/><text x="0.8877%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (39,977,825 samples, 0.14%)</title><rect x="0.6924%" y="293" width="0.1361%" height="15" fill="rgb(239,60,40)" fg:x="203315592" fg:w="39977825"/><text x="0.9424%" y="303.50"></text></g><g><title>__rust_alloc (3,966,479 samples, 0.01%)</title><rect x="0.8150%" y="277" width="0.0135%" height="15" fill="rgb(206,27,48)" fg:x="239326938" fg:w="3966479"/><text x="1.0650%" y="287.50"></text></g><g><title>__GI___libc_malloc (7,842,568 samples, 0.03%)</title><rect x="0.8285%" y="325" width="0.0267%" height="15" fill="rgb(225,35,8)" fg:x="243293417" fg:w="7842568"/><text x="1.0785%" y="335.50"></text></g><g><title>grpc::client::load_balancing::LbState::initial (4,067,022 samples, 0.01%)</title><rect x="0.8552%" y="325" width="0.0138%" height="15" fill="rgb(250,213,24)" fg:x="251135985" fg:w="4067022"/><text x="1.1052%" y="335.50"></text></g><g><title>__GI___libc_malloc (4,067,022 samples, 0.01%)</title><rect x="0.8552%" y="309" width="0.0138%" height="15" fill="rgb(247,123,22)" fg:x="251135985" fg:w="4067022"/><text x="1.1052%" y="319.50"></text></g><g><title>tcache_get (4,067,022 samples, 0.01%)</title><rect x="0.8552%" y="293" width="0.0138%" height="15" fill="rgb(231,138,38)" fg:x="251135985" fg:w="4067022"/><text x="1.1052%" y="303.50"></text></g><g><title>tcache_get_n (4,067,022 samples, 0.01%)</title><rect x="0.8552%" y="277" width="0.0138%" height="15" fill="rgb(231,145,46)" fg:x="251135985" fg:w="4067022"/><text x="1.1052%" y="287.50"></text></g><g><title>[unknown] (11,943,295 samples, 0.04%)</title><rect x="0.9773%" y="277" width="0.0407%" height="15" fill="rgb(251,118,11)" fg:x="286973696" fg:w="11943295"/><text x="1.2273%" y="287.50"></text></g><g><title>[unknown] (11,943,295 samples, 0.04%)</title><rect x="0.9773%" y="261" width="0.0407%" height="15" fill="rgb(217,147,25)" fg:x="286973696" fg:w="11943295"/><text x="1.2273%" y="271.50"></text></g><g><title>[unknown] (11,943,295 samples, 0.04%)</title><rect x="0.9773%" y="245" width="0.0407%" height="15" fill="rgb(247,81,37)" fg:x="286973696" fg:w="11943295"/><text x="1.2273%" y="255.50"></text></g><g><title>[unknown] (11,943,295 samples, 0.04%)</title><rect x="0.9773%" y="229" width="0.0407%" height="15" fill="rgb(209,12,38)" fg:x="286973696" fg:w="11943295"/><text x="1.2273%" y="239.50"></text></g><g><title>[unknown] (11,943,295 samples, 0.04%)</title><rect x="0.9773%" y="213" width="0.0407%" height="15" fill="rgb(227,1,9)" fg:x="286973696" fg:w="11943295"/><text x="1.2273%" y="223.50"></text></g><g><title>[unknown] (11,943,295 samples, 0.04%)</title><rect x="0.9773%" y="197" width="0.0407%" height="15" fill="rgb(248,47,43)" fg:x="286973696" fg:w="11943295"/><text x="1.2273%" y="207.50"></text></g><g><title>[unknown] (11,943,295 samples, 0.04%)</title><rect x="0.9773%" y="181" width="0.0407%" height="15" fill="rgb(221,10,30)" fg:x="286973696" fg:w="11943295"/><text x="1.2273%" y="191.50"></text></g><g><title>[unknown] (11,943,295 samples, 0.04%)</title><rect x="0.9773%" y="165" width="0.0407%" height="15" fill="rgb(210,229,1)" fg:x="286973696" fg:w="11943295"/><text x="1.2273%" y="175.50"></text></g><g><title>[unknown] (8,004,759 samples, 0.03%)</title><rect x="0.9907%" y="149" width="0.0273%" height="15" fill="rgb(222,148,37)" fg:x="290912232" fg:w="8004759"/><text x="1.2407%" y="159.50"></text></g><g><title>[unknown] (8,004,759 samples, 0.03%)</title><rect x="0.9907%" y="133" width="0.0273%" height="15" fill="rgb(234,67,33)" fg:x="290912232" fg:w="8004759"/><text x="1.2407%" y="143.50"></text></g><g><title>[unknown] (4,065,104 samples, 0.01%)</title><rect x="1.0041%" y="117" width="0.0138%" height="15" fill="rgb(247,98,35)" fg:x="294851887" fg:w="4065104"/><text x="1.2541%" y="127.50"></text></g><g><title>__GI___libc_malloc (20,047,705 samples, 0.07%)</title><rect x="1.0179%" y="277" width="0.0683%" height="15" fill="rgb(247,138,52)" fg:x="298916991" fg:w="20047705"/><text x="1.2679%" y="287.50"></text></g><g><title>_int_malloc (20,047,705 samples, 0.07%)</title><rect x="1.0179%" y="261" width="0.0683%" height="15" fill="rgb(213,79,30)" fg:x="298916991" fg:w="20047705"/><text x="1.2679%" y="271.50"></text></g><g><title>malloc_consolidate (20,047,705 samples, 0.07%)</title><rect x="1.0179%" y="245" width="0.0683%" height="15" fill="rgb(246,177,23)" fg:x="298916991" fg:w="20047705"/><text x="1.2679%" y="255.50"></text></g><g><title>unlink_chunk (7,956,284 samples, 0.03%)</title><rect x="1.0591%" y="229" width="0.0271%" height="15" fill="rgb(230,62,27)" fg:x="311008412" fg:w="7956284"/><text x="1.3091%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h03e3fa1e86f88544E.llvm.9464877178135716140 (63,930,890 samples, 0.22%)</title><rect x="0.9227%" y="293" width="0.2177%" height="15" fill="rgb(216,154,8)" fg:x="270948339" fg:w="63930890"/><text x="1.1727%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15,914,533 samples, 0.05%)</title><rect x="1.0862%" y="277" width="0.0542%" height="15" fill="rgb(244,35,45)" fg:x="318964696" fg:w="15914533"/><text x="1.3362%" y="287.50"></text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (95,552,390 samples, 0.33%)</title><rect x="0.8691%" y="325" width="0.3254%" height="15" fill="rgb(251,115,12)" fg:x="255203007" fg:w="95552390"/><text x="1.1191%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (95,552,390 samples, 0.33%)</title><rect x="0.8691%" y="309" width="0.3254%" height="15" fill="rgb(240,54,50)" fg:x="255203007" fg:w="95552390"/><text x="1.1191%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (15,876,168 samples, 0.05%)</title><rect x="1.1404%" y="293" width="0.0541%" height="15" fill="rgb(233,84,52)" fg:x="334879229" fg:w="15876168"/><text x="1.3904%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::resolver_update (364,560,966 samples, 1.24%)</title><rect x="0.0676%" y="341" width="1.2415%" height="15" fill="rgb(207,117,47)" fg:x="19843674" fg:w="364560966"/><text x="0.3176%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (33,649,243 samples, 0.11%)</title><rect x="1.1945%" y="325" width="0.1146%" height="15" fill="rgb(249,43,39)" fg:x="350755397" fg:w="33649243"/><text x="1.4445%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (33,649,243 samples, 0.11%)</title><rect x="1.1945%" y="309" width="0.1146%" height="15" fill="rgb(209,38,44)" fg:x="350755397" fg:w="33649243"/><text x="1.4445%" y="319.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (33,649,243 samples, 0.11%)</title><rect x="1.1945%" y="293" width="0.1146%" height="15" fill="rgb(236,212,23)" fg:x="350755397" fg:w="33649243"/><text x="1.4445%" y="303.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h4884cc1a4d2303d3E.llvm.3660540333688232871 (31,931,330 samples, 0.11%)</title><rect x="1.2003%" y="277" width="0.1087%" height="15" fill="rgb(242,79,21)" fg:x="352473310" fg:w="31931330"/><text x="1.4503%" y="287.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h4a9920109eef0ea0E.llvm.6231558932131486975 (3,962,819 samples, 0.01%)</title><rect x="1.3090%" y="341" width="0.0135%" height="15" fill="rgb(211,96,35)" fg:x="384404640" fg:w="3962819"/><text x="1.5590%" y="351.50"></text></g><g><title>__GI___libc_malloc (3,962,819 samples, 0.01%)</title><rect x="1.3090%" y="325" width="0.0135%" height="15" fill="rgb(253,215,40)" fg:x="384404640" fg:w="3962819"/><text x="1.5590%" y="335.50"></text></g><g><title>_int_malloc (3,962,819 samples, 0.01%)</title><rect x="1.3090%" y="309" width="0.0135%" height="15" fill="rgb(211,81,21)" fg:x="384404640" fg:w="3962819"/><text x="1.5590%" y="319.50"></text></g><g><title>malloc_consolidate (3,962,819 samples, 0.01%)</title><rect x="1.3090%" y="293" width="0.0135%" height="15" fill="rgb(208,190,38)" fg:x="384404640" fg:w="3962819"/><text x="1.5590%" y="303.50"></text></g><g><title>unlink_chunk (3,962,819 samples, 0.01%)</title><rect x="1.3090%" y="277" width="0.0135%" height="15" fill="rgb(235,213,38)" fg:x="384404640" fg:w="3962819"/><text x="1.5590%" y="287.50"></text></g><g><title>__GI___libc_malloc (24,156,898 samples, 0.08%)</title><rect x="1.3225%" y="341" width="0.0823%" height="15" fill="rgb(237,122,38)" fg:x="388367459" fg:w="24156898"/><text x="1.5725%" y="351.50"></text></g><g><title>_int_malloc (24,156,898 samples, 0.08%)</title><rect x="1.3225%" y="325" width="0.0823%" height="15" fill="rgb(244,218,35)" fg:x="388367459" fg:w="24156898"/><text x="1.5725%" y="335.50"></text></g><g><title>alloc_perturb (4,063,523 samples, 0.01%)</title><rect x="1.3910%" y="309" width="0.0138%" height="15" fill="rgb(240,68,47)" fg:x="408460834" fg:w="4063523"/><text x="1.6410%" y="319.50"></text></g><g><title>__rust_alloc (3,961,608 samples, 0.01%)</title><rect x="1.4048%" y="341" width="0.0135%" height="15" fill="rgb(210,16,53)" fg:x="412524357" fg:w="3961608"/><text x="1.6548%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15,903,844 samples, 0.05%)</title><rect x="1.4847%" y="309" width="0.0542%" height="15" fill="rgb(235,124,12)" fg:x="435978498" fg:w="15903844"/><text x="1.7347%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned (4,055,534 samples, 0.01%)</title><rect x="1.5250%" y="293" width="0.0138%" height="15" fill="rgb(224,169,11)" fg:x="447826808" fg:w="4055534"/><text x="1.7750%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned (4,033,179 samples, 0.01%)</title><rect x="1.6122%" y="277" width="0.0137%" height="15" fill="rgb(250,166,2)" fg:x="473423660" fg:w="4033179"/><text x="1.8622%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (90,303,308 samples, 0.31%)</title><rect x="1.5855%" y="293" width="0.3075%" height="15" fill="rgb(242,216,29)" fg:x="465584176" fg:w="90303308"/><text x="1.8355%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (78,430,645 samples, 0.27%)</title><rect x="1.6259%" y="277" width="0.2671%" height="15" fill="rgb(230,116,27)" fg:x="477456839" fg:w="78430645"/><text x="1.8759%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (68,273,640 samples, 0.23%)</title><rect x="1.6605%" y="261" width="0.2325%" height="15" fill="rgb(228,99,48)" fg:x="487613844" fg:w="68273640"/><text x="1.9105%" y="271.50"></text></g><g><title>__GI___libc_malloc (56,157,681 samples, 0.19%)</title><rect x="1.7018%" y="245" width="0.1912%" height="15" fill="rgb(253,11,6)" fg:x="499729803" fg:w="56157681"/><text x="1.9518%" y="255.50"></text></g><g><title>_int_malloc (40,278,678 samples, 0.14%)</title><rect x="1.7559%" y="229" width="0.1372%" height="15" fill="rgb(247,143,39)" fg:x="515608806" fg:w="40278678"/><text x="2.0059%" y="239.50"></text></g><g><title>alloc::fmt::format::format_inner (146,396,354 samples, 0.50%)</title><rect x="1.4183%" y="341" width="0.4985%" height="15" fill="rgb(236,97,10)" fg:x="416485965" fg:w="146396354"/><text x="1.6683%" y="351.50"></text></g><g><title>core::fmt::write (138,253,334 samples, 0.47%)</title><rect x="1.4460%" y="325" width="0.4708%" height="15" fill="rgb(233,208,19)" fg:x="424628985" fg:w="138253334"/><text x="1.6960%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (110,999,977 samples, 0.38%)</title><rect x="1.5388%" y="309" width="0.3780%" height="15" fill="rgb(216,164,2)" fg:x="451882342" fg:w="110999977"/><text x="1.7888%" y="319.50"></text></g><g><title>core::fmt::Formatter::pad_integral (6,994,835 samples, 0.02%)</title><rect x="1.8930%" y="293" width="0.0238%" height="15" fill="rgb(220,129,5)" fg:x="555887484" fg:w="6994835"/><text x="2.1430%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (3,059,952 samples, 0.01%)</title><rect x="1.9064%" y="277" width="0.0104%" height="15" fill="rgb(242,17,10)" fg:x="559822367" fg:w="3059952"/><text x="2.1564%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (27,655,728 samples, 0.09%)</title><rect x="1.9168%" y="341" width="0.0942%" height="15" fill="rgb(242,107,0)" fg:x="562882319" fg:w="27655728"/><text x="2.1668%" y="351.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (27,655,728 samples, 0.09%)</title><rect x="1.9168%" y="325" width="0.0942%" height="15" fill="rgb(251,28,31)" fg:x="562882319" fg:w="27655728"/><text x="2.1668%" y="335.50"></text></g><g><title>__GI___libc_realloc (27,655,728 samples, 0.09%)</title><rect x="1.9168%" y="309" width="0.0942%" height="15" fill="rgb(233,223,10)" fg:x="562882319" fg:w="27655728"/><text x="2.1668%" y="319.50"></text></g><g><title>_int_realloc (27,655,728 samples, 0.09%)</title><rect x="1.9168%" y="293" width="0.0942%" height="15" fill="rgb(215,21,27)" fg:x="562882319" fg:w="27655728"/><text x="2.1668%" y="303.50"></text></g><g><title>_int_malloc (27,655,728 samples, 0.09%)</title><rect x="1.9168%" y="277" width="0.0942%" height="15" fill="rgb(232,23,21)" fg:x="562882319" fg:w="27655728"/><text x="2.1668%" y="287.50"></text></g><g><title>malloc_consolidate (23,725,185 samples, 0.08%)</title><rect x="1.9302%" y="261" width="0.0808%" height="15" fill="rgb(244,5,23)" fg:x="566812862" fg:w="23725185"/><text x="2.1802%" y="271.50"></text></g><g><title>unlink_chunk (8,038,324 samples, 0.03%)</title><rect x="1.9836%" y="245" width="0.0274%" height="15" fill="rgb(226,81,46)" fg:x="582499723" fg:w="8038324"/><text x="2.2336%" y="255.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (8,009,461 samples, 0.03%)</title><rect x="3.7501%" y="293" width="0.0273%" height="15" fill="rgb(247,70,30)" fg:x="1101216808" fg:w="8009461"/><text x="4.0001%" y="303.50"></text></g><g><title>__GI___libc_malloc (4,087,800 samples, 0.01%)</title><rect x="3.7774%" y="293" width="0.0139%" height="15" fill="rgb(212,68,19)" fg:x="1109226269" fg:w="4087800"/><text x="4.0274%" y="303.50"></text></g><g><title>__rust_alloc (4,066,951 samples, 0.01%)</title><rect x="3.7913%" y="293" width="0.0138%" height="15" fill="rgb(240,187,13)" fg:x="1113314069" fg:w="4066951"/><text x="4.0413%" y="303.50"></text></g><g><title>&lt;lb_apis::chi_pol_batched::ChildPolicy as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (652,355,298 samples, 2.22%)</title><rect x="2.3001%" y="309" width="2.2215%" height="15" fill="rgb(223,113,26)" fg:x="675419956" fg:w="652355298"/><text x="2.5501%" y="319.50">&lt;..</text></g><g><title>core::hash::BuildHasher::hash_one (210,394,234 samples, 0.72%)</title><rect x="3.8051%" y="293" width="0.7165%" height="15" fill="rgb(206,192,2)" fg:x="1117381020" fg:w="210394234"/><text x="4.0551%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (16,230,101 samples, 0.06%)</title><rect x="4.4663%" y="277" width="0.0553%" height="15" fill="rgb(241,108,4)" fg:x="1311545153" fg:w="16230101"/><text x="4.7163%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,095,990 samples, 0.05%)</title><rect x="4.5216%" y="309" width="0.0548%" height="15" fill="rgb(247,173,49)" fg:x="1327775254" fg:w="16095990"/><text x="4.7716%" y="319.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (4,037,023 samples, 0.01%)</title><rect x="4.5627%" y="293" width="0.0137%" height="15" fill="rgb(224,114,35)" fg:x="1339834221" fg:w="4037023"/><text x="4.8127%" y="303.50"></text></g><g><title>__GI___libc_free (4,051,590 samples, 0.01%)</title><rect x="4.5902%" y="293" width="0.0138%" height="15" fill="rgb(245,159,27)" fg:x="1347928633" fg:w="4051590"/><text x="4.8402%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyBatched&gt;::subchannel_update (749,243,655 samples, 2.55%)</title><rect x="2.0936%" y="325" width="2.5515%" height="15" fill="rgb(245,172,44)" fg:x="614791646" fg:w="749243655"/><text x="2.3436%" y="335.50">&lt;g..</text></g><g><title>grpc::client::load_balancing::child_manager_batched::ChildManager&lt;T&gt;::resolve_child_controller (20,164,057 samples, 0.07%)</title><rect x="4.5764%" y="309" width="0.0687%" height="15" fill="rgb(236,23,11)" fg:x="1343871244" fg:w="20164057"/><text x="4.8264%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (12,055,078 samples, 0.04%)</title><rect x="4.6040%" y="293" width="0.0411%" height="15" fill="rgb(205,117,38)" fg:x="1351980223" fg:w="12055078"/><text x="4.8540%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,076,777 samples, 0.01%)</title><rect x="4.6451%" y="325" width="0.0139%" height="15" fill="rgb(237,72,25)" fg:x="1364035301" fg:w="4076777"/><text x="4.8951%" y="335.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (11,934,138 samples, 0.04%)</title><rect x="4.6590%" y="325" width="0.0406%" height="15" fill="rgb(244,70,9)" fg:x="1368112078" fg:w="11934138"/><text x="4.9090%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (60,521,293 samples, 0.21%)</title><rect x="4.8911%" y="309" width="0.2061%" height="15" fill="rgb(217,125,39)" fg:x="1436279495" fg:w="60521293"/><text x="5.1411%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (20,322,388 samples, 0.07%)</title><rect x="5.0280%" y="293" width="0.0692%" height="15" fill="rgb(235,36,10)" fg:x="1476478400" fg:w="20322388"/><text x="5.2780%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (16,271,656 samples, 0.06%)</title><rect x="5.0418%" y="277" width="0.0554%" height="15" fill="rgb(251,123,47)" fg:x="1480529132" fg:w="16271656"/><text x="5.2918%" y="287.50"></text></g><g><title>__GI___libc_realloc (16,271,656 samples, 0.06%)</title><rect x="5.0418%" y="261" width="0.0554%" height="15" fill="rgb(221,13,13)" fg:x="1480529132" fg:w="16271656"/><text x="5.2918%" y="271.50"></text></g><g><title>_int_realloc (16,271,656 samples, 0.06%)</title><rect x="5.0418%" y="245" width="0.0554%" height="15" fill="rgb(238,131,9)" fg:x="1480529132" fg:w="16271656"/><text x="5.2918%" y="255.50"></text></g><g><title>_int_malloc (16,271,656 samples, 0.06%)</title><rect x="5.0418%" y="229" width="0.0554%" height="15" fill="rgb(211,50,8)" fg:x="1480529132" fg:w="16271656"/><text x="5.2918%" y="239.50"></text></g><g><title>unlink_chunk (4,079,325 samples, 0.01%)</title><rect x="5.0833%" y="213" width="0.0139%" height="15" fill="rgb(245,182,24)" fg:x="1492721463" fg:w="4079325"/><text x="5.3333%" y="223.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (4,041,781 samples, 0.01%)</title><rect x="5.0972%" y="309" width="0.0138%" height="15" fill="rgb(242,14,37)" fg:x="1496800788" fg:w="4041781"/><text x="5.3472%" y="319.50"></text></g><g><title>__GI___libc_malloc (4,080,640 samples, 0.01%)</title><rect x="5.1110%" y="309" width="0.0139%" height="15" fill="rgb(246,228,12)" fg:x="1500842569" fg:w="4080640"/><text x="5.3610%" y="319.50"></text></g><g><title>_int_malloc (4,080,640 samples, 0.01%)</title><rect x="5.1110%" y="293" width="0.0139%" height="15" fill="rgb(213,55,15)" fg:x="1500842569" fg:w="4080640"/><text x="5.3610%" y="303.50"></text></g><g><title>unlink_chunk (4,080,640 samples, 0.01%)</title><rect x="5.1110%" y="277" width="0.0139%" height="15" fill="rgb(209,9,3)" fg:x="1500842569" fg:w="4080640"/><text x="5.3610%" y="287.50"></text></g><g><title>__rust_alloc (3,405,451 samples, 0.01%)</title><rect x="5.1249%" y="309" width="0.0116%" height="15" fill="rgb(230,59,30)" fg:x="1504923209" fg:w="3405451"/><text x="5.3749%" y="319.50"></text></g><g><title>_ZN7lb_apis15del_pol_batched16DelegatingPolicy13update_picker17h4a9920109eef0ea0E.llvm.6231558932131486975 (172,816,234 samples, 0.59%)</title><rect x="4.6996%" y="325" width="0.5885%" height="15" fill="rgb(209,121,21)" fg:x="1380046216" fg:w="172816234"/><text x="4.9496%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (44,533,790 samples, 0.15%)</title><rect x="5.1365%" y="309" width="0.1517%" height="15" fill="rgb(220,109,13)" fg:x="1508328660" fg:w="44533790"/><text x="5.3865%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::RRPickerPicker&gt; (44,533,790 samples, 0.15%)</title><rect x="5.1365%" y="293" width="0.1517%" height="15" fill="rgb(232,18,1)" fg:x="1508328660" fg:w="44533790"/><text x="5.3865%" y="303.50"></text></g><g><title>__GI___libc_malloc (4,035,567 samples, 0.01%)</title><rect x="5.3944%" y="277" width="0.0137%" height="15" fill="rgb(215,41,42)" fg:x="1584072133" fg:w="4035567"/><text x="5.6444%" y="287.50"></text></g><g><title>_int_malloc (4,035,567 samples, 0.01%)</title><rect x="5.3944%" y="261" width="0.0137%" height="15" fill="rgb(224,123,36)" fg:x="1584072133" fg:w="4035567"/><text x="5.6444%" y="271.50"></text></g><g><title>malloc_consolidate (4,035,567 samples, 0.01%)</title><rect x="5.3944%" y="245" width="0.0137%" height="15" fill="rgb(240,125,3)" fg:x="1584072133" fg:w="4035567"/><text x="5.6444%" y="255.50"></text></g><g><title>__rdl_alloc (4,061,552 samples, 0.01%)</title><rect x="5.4081%" y="277" width="0.0138%" height="15" fill="rgb(205,98,50)" fg:x="1588107700" fg:w="4061552"/><text x="5.6581%" y="287.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17hc6f2942aea7926dbE.llvm.10499638702280511522 (39,313,216 samples, 0.13%)</title><rect x="5.3157%" y="293" width="0.1339%" height="15" fill="rgb(205,185,37)" fg:x="1560958080" fg:w="39313216"/><text x="5.5657%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,102,044 samples, 0.03%)</title><rect x="5.4220%" y="277" width="0.0276%" height="15" fill="rgb(238,207,15)" fg:x="1592169252" fg:w="8102044"/><text x="5.6720%" y="287.50"></text></g><g><title>grpc::client::load_balancing::SubchannelUpdate::set (51,506,510 samples, 0.18%)</title><rect x="5.2881%" y="325" width="0.1754%" height="15" fill="rgb(213,199,42)" fg:x="1552862450" fg:w="51506510"/><text x="5.5381%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (51,506,510 samples, 0.18%)</title><rect x="5.2881%" y="309" width="0.1754%" height="15" fill="rgb(235,201,11)" fg:x="1552862450" fg:w="51506510"/><text x="5.5381%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,097,664 samples, 0.01%)</title><rect x="5.4496%" y="293" width="0.0140%" height="15" fill="rgb(207,46,11)" fg:x="1600271296" fg:w="4097664"/><text x="5.6996%" y="303.50"></text></g><g><title>rand::rngs::adapter::reseeding::fork::get_fork_counter (3,963,848 samples, 0.01%)</title><rect x="5.4635%" y="325" width="0.0135%" height="15" fill="rgb(241,35,35)" fg:x="1604368960" fg:w="3963848"/><text x="5.7135%" y="335.50"></text></g><g><title>bencher::Bencher::iter (1,025,896,868 samples, 3.49%)</title><rect x="2.0110%" y="341" width="3.4936%" height="15" fill="rgb(243,32,47)" fg:x="590538047" fg:w="1025896868"/><text x="2.2610%" y="351.50">ben..</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (8,102,107 samples, 0.03%)</title><rect x="5.4770%" y="325" width="0.0276%" height="15" fill="rgb(247,202,23)" fg:x="1608332808" fg:w="8102107"/><text x="5.7270%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8,025,327 samples, 0.03%)</title><rect x="5.5046%" y="325" width="0.0273%" height="15" fill="rgb(219,102,11)" fg:x="1616434915" fg:w="8025327"/><text x="5.7546%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (20,126,379 samples, 0.07%)</title><rect x="5.5592%" y="309" width="0.0685%" height="15" fill="rgb(243,110,44)" fg:x="1632478121" fg:w="20126379"/><text x="5.8092%" y="319.50"></text></g><g><title>__GI___libc_free (11,976,018 samples, 0.04%)</title><rect x="5.5870%" y="293" width="0.0408%" height="15" fill="rgb(222,74,54)" fg:x="1640628482" fg:w="11976018"/><text x="5.8370%" y="303.50"></text></g><g><title>_int_free (8,023,429 samples, 0.03%)</title><rect x="5.6004%" y="277" width="0.0273%" height="15" fill="rgb(216,99,12)" fg:x="1644581071" fg:w="8023429"/><text x="5.8504%" y="287.50"></text></g><g><title>_int_free (17,951,241 samples, 0.06%)</title><rect x="5.6278%" y="293" width="0.0611%" height="15" fill="rgb(226,22,26)" fg:x="1652604500" fg:w="17951241"/><text x="5.8778%" y="303.50"></text></g><g><title>_int_free_maybe_consolidate (19,997,655 samples, 0.07%)</title><rect x="5.6889%" y="293" width="0.0681%" height="15" fill="rgb(217,163,10)" fg:x="1670555741" fg:w="19997655"/><text x="5.9389%" y="303.50"></text></g><g><title>malloc_consolidate (19,997,655 samples, 0.07%)</title><rect x="5.6889%" y="277" width="0.0681%" height="15" fill="rgb(213,25,53)" fg:x="1670555741" fg:w="19997655"/><text x="5.9389%" y="287.50"></text></g><g><title>unlink_chunk (3,936,139 samples, 0.01%)</title><rect x="5.7436%" y="261" width="0.0134%" height="15" fill="rgb(252,105,26)" fg:x="1686617257" fg:w="3936139"/><text x="5.9936%" y="271.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h6fd88c756eedc8fdE.llvm.13391218907786022700 (69,952,648 samples, 0.24%)</title><rect x="5.5319%" y="325" width="0.2382%" height="15" fill="rgb(220,39,43)" fg:x="1624460242" fg:w="69952648"/><text x="5.7819%" y="335.50"></text></g><g><title>__GI___libc_free (41,808,390 samples, 0.14%)</title><rect x="5.6278%" y="309" width="0.1424%" height="15" fill="rgb(229,68,48)" fg:x="1652604500" fg:w="41808390"/><text x="5.8778%" y="319.50"></text></g><g><title>_int_free_merge_chunk (3,859,494 samples, 0.01%)</title><rect x="5.7570%" y="293" width="0.0131%" height="15" fill="rgb(252,8,32)" fg:x="1690553396" fg:w="3859494"/><text x="6.0070%" y="303.50"></text></g><g><title>lb_apis::batched (1,690,598,979 samples, 5.76%)</title><rect x="0.0268%" y="357" width="5.7572%" height="15" fill="rgb(223,20,43)" fg:x="7882141" fg:w="1690598979"/><text x="0.2768%" y="367.50">lb_apis..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_batched::DelegatingPolicy&gt; (82,046,205 samples, 0.28%)</title><rect x="5.5046%" y="341" width="0.2794%" height="15" fill="rgb(229,81,49)" fg:x="1616434915" fg:w="82046205"/><text x="5.7546%" y="351.50"></text></g><g><title>__GI___libc_free (4,068,230 samples, 0.01%)</title><rect x="5.7701%" y="325" width="0.0139%" height="15" fill="rgb(236,28,36)" fg:x="1694412890" fg:w="4068230"/><text x="6.0201%" y="335.50"></text></g><g><title>_int_free_maybe_consolidate (4,068,230 samples, 0.01%)</title><rect x="5.7701%" y="309" width="0.0139%" height="15" fill="rgb(249,185,26)" fg:x="1694412890" fg:w="4068230"/><text x="6.0201%" y="319.50"></text></g><g><title>malloc_consolidate (4,068,230 samples, 0.01%)</title><rect x="5.7701%" y="293" width="0.0139%" height="15" fill="rgb(249,174,33)" fg:x="1694412890" fg:w="4068230"/><text x="6.0201%" y="303.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="309" width="0.0125%" height="15" fill="rgb(233,201,37)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="319.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="293" width="0.0125%" height="15" fill="rgb(221,78,26)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="303.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="277" width="0.0125%" height="15" fill="rgb(250,127,30)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="287.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="261" width="0.0125%" height="15" fill="rgb(230,49,44)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="271.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="245" width="0.0125%" height="15" fill="rgb(229,67,23)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="255.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="229" width="0.0125%" height="15" fill="rgb(249,83,47)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="239.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="213" width="0.0125%" height="15" fill="rgb(215,43,3)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="223.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="197" width="0.0125%" height="15" fill="rgb(238,154,13)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="207.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="181" width="0.0125%" height="15" fill="rgb(219,56,2)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="191.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="165" width="0.0125%" height="15" fill="rgb(233,0,4)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="175.50"></text></g><g><title>[unknown] (3,672,184 samples, 0.01%)</title><rect x="6.0619%" y="149" width="0.0125%" height="15" fill="rgb(235,30,7)" fg:x="1780097055" fg:w="3672184"/><text x="6.3119%" y="159.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18,095,686 samples, 0.06%)</title><rect x="6.0243%" y="325" width="0.0616%" height="15" fill="rgb(250,79,13)" fg:x="1769042897" fg:w="18095686"/><text x="6.2743%" y="335.50"></text></g><g><title>__GI___libc_malloc (3,369,344 samples, 0.01%)</title><rect x="6.0744%" y="309" width="0.0115%" height="15" fill="rgb(211,146,34)" fg:x="1783769239" fg:w="3369344"/><text x="6.3244%" y="319.50"></text></g><g><title>_int_malloc (3,369,344 samples, 0.01%)</title><rect x="6.0744%" y="293" width="0.0115%" height="15" fill="rgb(228,22,38)" fg:x="1783769239" fg:w="3369344"/><text x="6.3244%" y="303.50"></text></g><g><title>[unknown] (3,369,344 samples, 0.01%)</title><rect x="6.0744%" y="277" width="0.0115%" height="15" fill="rgb(235,168,5)" fg:x="1783769239" fg:w="3369344"/><text x="6.3244%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel (11,816,700 samples, 0.04%)</title><rect x="6.3634%" y="309" width="0.0402%" height="15" fill="rgb(221,155,16)" fg:x="1868621039" fg:w="11816700"/><text x="6.6134%" y="319.50"></text></g><g><title>[unknown] (33,590,082 samples, 0.11%)</title><rect x="6.9306%" y="261" width="0.1144%" height="15" fill="rgb(215,215,53)" fg:x="2035188367" fg:w="33590082"/><text x="7.1806%" y="271.50"></text></g><g><title>[unknown] (29,628,089 samples, 0.10%)</title><rect x="6.9441%" y="245" width="0.1009%" height="15" fill="rgb(223,4,10)" fg:x="2039150360" fg:w="29628089"/><text x="7.1941%" y="255.50"></text></g><g><title>[unknown] (26,280,658 samples, 0.09%)</title><rect x="6.9555%" y="229" width="0.0895%" height="15" fill="rgb(234,103,6)" fg:x="2042497791" fg:w="26280658"/><text x="7.2055%" y="239.50"></text></g><g><title>[unknown] (22,281,715 samples, 0.08%)</title><rect x="6.9691%" y="213" width="0.0759%" height="15" fill="rgb(227,97,0)" fg:x="2046496734" fg:w="22281715"/><text x="7.2191%" y="223.50"></text></g><g><title>[unknown] (18,923,160 samples, 0.06%)</title><rect x="6.9806%" y="197" width="0.0644%" height="15" fill="rgb(234,150,53)" fg:x="2049855289" fg:w="18923160"/><text x="7.2306%" y="207.50"></text></g><g><title>[unknown] (15,532,392 samples, 0.05%)</title><rect x="6.9921%" y="181" width="0.0529%" height="15" fill="rgb(228,201,54)" fg:x="2053246057" fg:w="15532392"/><text x="7.2421%" y="191.50"></text></g><g><title>[unknown] (11,546,777 samples, 0.04%)</title><rect x="7.0057%" y="165" width="0.0393%" height="15" fill="rgb(222,22,37)" fg:x="2057231672" fg:w="11546777"/><text x="7.2557%" y="175.50"></text></g><g><title>[unknown] (11,546,777 samples, 0.04%)</title><rect x="7.0057%" y="149" width="0.0393%" height="15" fill="rgb(237,53,32)" fg:x="2057231672" fg:w="11546777"/><text x="7.2557%" y="159.50"></text></g><g><title>[unknown] (7,432,718 samples, 0.03%)</title><rect x="7.0197%" y="133" width="0.0253%" height="15" fill="rgb(233,25,53)" fg:x="2061345731" fg:w="7432718"/><text x="7.2697%" y="143.50"></text></g><g><title>[unknown] (7,432,718 samples, 0.03%)</title><rect x="7.0197%" y="117" width="0.0253%" height="15" fill="rgb(210,40,34)" fg:x="2061345731" fg:w="7432718"/><text x="7.2697%" y="127.50"></text></g><g><title>[unknown] (7,432,718 samples, 0.03%)</title><rect x="7.0197%" y="101" width="0.0253%" height="15" fill="rgb(241,220,44)" fg:x="2061345731" fg:w="7432718"/><text x="7.2697%" y="111.50"></text></g><g><title>alloc_perturb (7,671,832 samples, 0.03%)</title><rect x="7.0450%" y="261" width="0.0261%" height="15" fill="rgb(235,28,35)" fg:x="2068778449" fg:w="7671832"/><text x="7.2950%" y="271.50"></text></g><g><title>__GI___libc_malloc (127,210,438 samples, 0.43%)</title><rect x="6.6632%" y="293" width="0.4332%" height="15" fill="rgb(210,56,17)" fg:x="1956671809" fg:w="127210438"/><text x="6.9132%" y="303.50"></text></g><g><title>_int_malloc (119,724,470 samples, 0.41%)</title><rect x="6.6887%" y="277" width="0.4077%" height="15" fill="rgb(224,130,29)" fg:x="1964157777" fg:w="119724470"/><text x="6.9387%" y="287.50"></text></g><g><title>malloc_consolidate (7,431,966 samples, 0.03%)</title><rect x="7.0711%" y="261" width="0.0253%" height="15" fill="rgb(235,212,8)" fg:x="2076450281" fg:w="7431966"/><text x="7.3211%" y="271.50"></text></g><g><title>unlink_chunk (4,046,288 samples, 0.01%)</title><rect x="7.0827%" y="245" width="0.0138%" height="15" fill="rgb(223,33,50)" fg:x="2079835959" fg:w="4046288"/><text x="7.3327%" y="255.50"></text></g><g><title>__rdl_alloc (3,896,721 samples, 0.01%)</title><rect x="7.0964%" y="293" width="0.0133%" height="15" fill="rgb(219,149,13)" fg:x="2083882247" fg:w="3896721"/><text x="7.3464%" y="303.50"></text></g><g><title>__rust_alloc (11,126,014 samples, 0.04%)</title><rect x="7.1097%" y="293" width="0.0379%" height="15" fill="rgb(250,156,29)" fg:x="2087778968" fg:w="11126014"/><text x="7.3597%" y="303.50"></text></g><g><title>__GI_memcpy (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="229" width="0.0274%" height="15" fill="rgb(216,193,19)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="213" width="0.0274%" height="15" fill="rgb(216,135,14)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="223.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="197" width="0.0274%" height="15" fill="rgb(241,47,5)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="207.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="181" width="0.0274%" height="15" fill="rgb(233,42,35)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="191.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="165" width="0.0274%" height="15" fill="rgb(231,13,6)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="175.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="149" width="0.0274%" height="15" fill="rgb(207,181,40)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="159.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="133" width="0.0274%" height="15" fill="rgb(254,173,49)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="143.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="117" width="0.0274%" height="15" fill="rgb(221,1,38)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="127.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="101" width="0.0274%" height="15" fill="rgb(206,124,46)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="111.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="85" width="0.0274%" height="15" fill="rgb(249,21,11)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="95.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="69" width="0.0274%" height="15" fill="rgb(222,201,40)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="79.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="53" width="0.0274%" height="15" fill="rgb(235,61,29)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="63.50"></text></g><g><title>[unknown] (8,034,753 samples, 0.03%)</title><rect x="7.1618%" y="37" width="0.0274%" height="15" fill="rgb(219,207,3)" fg:x="2103083975" fg:w="8034753"/><text x="7.4118%" y="47.50"></text></g><g><title>[unknown] (4,176,507 samples, 0.01%)</title><rect x="7.1892%" y="213" width="0.0142%" height="15" fill="rgb(222,56,46)" fg:x="2111118728" fg:w="4176507"/><text x="7.4392%" y="223.50"></text></g><g><title>[unknown] (4,176,507 samples, 0.01%)</title><rect x="7.1892%" y="197" width="0.0142%" height="15" fill="rgb(239,76,54)" fg:x="2111118728" fg:w="4176507"/><text x="7.4392%" y="207.50"></text></g><g><title>[unknown] (4,176,507 samples, 0.01%)</title><rect x="7.1892%" y="181" width="0.0142%" height="15" fill="rgb(231,124,27)" fg:x="2111118728" fg:w="4176507"/><text x="7.4392%" y="191.50"></text></g><g><title>[unknown] (4,176,507 samples, 0.01%)</title><rect x="7.1892%" y="165" width="0.0142%" height="15" fill="rgb(249,195,6)" fg:x="2111118728" fg:w="4176507"/><text x="7.4392%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (32,250,689 samples, 0.11%)</title><rect x="7.1476%" y="293" width="0.1098%" height="15" fill="rgb(237,174,47)" fg:x="2098904982" fg:w="32250689"/><text x="7.3976%" y="303.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (32,250,689 samples, 0.11%)</title><rect x="7.1476%" y="277" width="0.1098%" height="15" fill="rgb(206,201,31)" fg:x="2098904982" fg:w="32250689"/><text x="7.3976%" y="287.50"></text></g><g><title>__GI___libc_realloc (32,250,689 samples, 0.11%)</title><rect x="7.1476%" y="261" width="0.1098%" height="15" fill="rgb(231,57,52)" fg:x="2098904982" fg:w="32250689"/><text x="7.3976%" y="271.50"></text></g><g><title>_int_realloc (32,250,689 samples, 0.11%)</title><rect x="7.1476%" y="245" width="0.1098%" height="15" fill="rgb(248,177,22)" fg:x="2098904982" fg:w="32250689"/><text x="7.3976%" y="255.50"></text></g><g><title>_int_malloc (20,036,943 samples, 0.07%)</title><rect x="7.1892%" y="229" width="0.0682%" height="15" fill="rgb(215,211,37)" fg:x="2111118728" fg:w="20036943"/><text x="7.4392%" y="239.50"></text></g><g><title>malloc_consolidate (15,860,436 samples, 0.05%)</title><rect x="7.2034%" y="213" width="0.0540%" height="15" fill="rgb(241,128,51)" fg:x="2115295235" fg:w="15860436"/><text x="7.4534%" y="223.50"></text></g><g><title>unlink_chunk (11,675,348 samples, 0.04%)</title><rect x="7.2177%" y="197" width="0.0398%" height="15" fill="rgb(227,165,31)" fg:x="2119480323" fg:w="11675348"/><text x="7.4677%" y="207.50"></text></g><g><title>&lt;lb_apis::StubChannelControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::new_subchannel (258,772,458 samples, 0.88%)</title><rect x="6.4036%" y="309" width="0.8812%" height="15" fill="rgb(228,167,24)" fg:x="1880437739" fg:w="258772458"/><text x="6.6536%" y="319.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (8,054,526 samples, 0.03%)</title><rect x="7.2574%" y="293" width="0.0274%" height="15" fill="rgb(228,143,12)" fg:x="2131155671" fg:w="8054526"/><text x="7.5074%" y="303.50"></text></g><g><title>_int_free (15,521,690 samples, 0.05%)</title><rect x="7.3376%" y="293" width="0.0529%" height="15" fill="rgb(249,149,8)" fg:x="2154711903" fg:w="15521690"/><text x="7.5876%" y="303.50"></text></g><g><title>__GI___libc_free (35,054,553 samples, 0.12%)</title><rect x="7.2849%" y="309" width="0.1194%" height="15" fill="rgb(243,35,44)" fg:x="2139210197" fg:w="35054553"/><text x="7.5349%" y="319.50"></text></g><g><title>_int_free_merge_chunk (4,031,157 samples, 0.01%)</title><rect x="7.3905%" y="293" width="0.0137%" height="15" fill="rgb(246,89,9)" fg:x="2170233593" fg:w="4031157"/><text x="7.6405%" y="303.50"></text></g><g><title>unlink_chunk (4,031,157 samples, 0.01%)</title><rect x="7.3905%" y="277" width="0.0137%" height="15" fill="rgb(233,213,13)" fg:x="2170233593" fg:w="4031157"/><text x="7.6405%" y="287.50"></text></g><g><title>_int_malloc (4,132,985 samples, 0.01%)</title><rect x="7.4180%" y="293" width="0.0141%" height="15" fill="rgb(233,141,41)" fg:x="2178305133" fg:w="4132985"/><text x="7.6680%" y="303.50"></text></g><g><title>tcache_put (4,132,985 samples, 0.01%)</title><rect x="7.4180%" y="277" width="0.0141%" height="15" fill="rgb(239,167,4)" fg:x="2178305133" fg:w="4132985"/><text x="7.6680%" y="287.50"></text></g><g><title>__GI___libc_malloc (12,134,081 samples, 0.04%)</title><rect x="7.4042%" y="309" width="0.0413%" height="15" fill="rgb(209,217,16)" fg:x="2174264750" fg:w="12134081"/><text x="7.6542%" y="319.50"></text></g><g><title>tcache_get (3,960,713 samples, 0.01%)</title><rect x="7.4321%" y="293" width="0.0135%" height="15" fill="rgb(219,88,35)" fg:x="2182438118" fg:w="3960713"/><text x="7.6821%" y="303.50"></text></g><g><title>tcache_get_n (3,960,713 samples, 0.01%)</title><rect x="7.4321%" y="277" width="0.0135%" height="15" fill="rgb(220,193,23)" fg:x="2182438118" fg:w="3960713"/><text x="7.6821%" y="287.50"></text></g><g><title>__rdl_dealloc (3,928,705 samples, 0.01%)</title><rect x="7.4456%" y="309" width="0.0134%" height="15" fill="rgb(230,90,52)" fg:x="2186398831" fg:w="3928705"/><text x="7.6956%" y="319.50"></text></g><g><title>__rust_alloc (3,713,190 samples, 0.01%)</title><rect x="7.4589%" y="309" width="0.0126%" height="15" fill="rgb(252,106,19)" fg:x="2190327536" fg:w="3713190"/><text x="7.7089%" y="319.50"></text></g><g><title>[unknown] (22,967,820 samples, 0.08%)</title><rect x="7.6789%" y="245" width="0.0782%" height="15" fill="rgb(206,74,20)" fg:x="2254922988" fg:w="22967820"/><text x="7.9289%" y="255.50"></text></g><g><title>[unknown] (22,967,820 samples, 0.08%)</title><rect x="7.6789%" y="229" width="0.0782%" height="15" fill="rgb(230,138,44)" fg:x="2254922988" fg:w="22967820"/><text x="7.9289%" y="239.50"></text></g><g><title>[unknown] (19,606,293 samples, 0.07%)</title><rect x="7.6904%" y="213" width="0.0668%" height="15" fill="rgb(235,182,43)" fg:x="2258284515" fg:w="19606293"/><text x="7.9404%" y="223.50"></text></g><g><title>[unknown] (15,719,015 samples, 0.05%)</title><rect x="7.7036%" y="197" width="0.0535%" height="15" fill="rgb(242,16,51)" fg:x="2262171793" fg:w="15719015"/><text x="7.9536%" y="207.50"></text></g><g><title>[unknown] (11,991,622 samples, 0.04%)</title><rect x="7.7163%" y="181" width="0.0408%" height="15" fill="rgb(248,9,4)" fg:x="2265899186" fg:w="11991622"/><text x="7.9663%" y="191.50"></text></g><g><title>[unknown] (11,991,622 samples, 0.04%)</title><rect x="7.7163%" y="165" width="0.0408%" height="15" fill="rgb(210,31,22)" fg:x="2265899186" fg:w="11991622"/><text x="7.9663%" y="175.50"></text></g><g><title>[unknown] (11,991,622 samples, 0.04%)</title><rect x="7.7163%" y="149" width="0.0408%" height="15" fill="rgb(239,54,39)" fg:x="2265899186" fg:w="11991622"/><text x="7.9663%" y="159.50"></text></g><g><title>[unknown] (7,968,969 samples, 0.03%)</title><rect x="7.7300%" y="133" width="0.0271%" height="15" fill="rgb(230,99,41)" fg:x="2269921839" fg:w="7968969"/><text x="7.9800%" y="143.50"></text></g><g><title>[unknown] (7,968,969 samples, 0.03%)</title><rect x="7.7300%" y="117" width="0.0271%" height="15" fill="rgb(253,106,12)" fg:x="2269921839" fg:w="7968969"/><text x="7.9800%" y="127.50"></text></g><g><title>[unknown] (3,944,531 samples, 0.01%)</title><rect x="7.7437%" y="101" width="0.0134%" height="15" fill="rgb(213,46,41)" fg:x="2273946277" fg:w="3944531"/><text x="7.9937%" y="111.50"></text></g><g><title>malloc_consolidate (3,912,341 samples, 0.01%)</title><rect x="7.7571%" y="245" width="0.0133%" height="15" fill="rgb(215,133,35)" fg:x="2277890808" fg:w="3912341"/><text x="8.0071%" y="255.50"></text></g><g><title>unlink_chunk (3,912,341 samples, 0.01%)</title><rect x="7.7571%" y="229" width="0.0133%" height="15" fill="rgb(213,28,5)" fg:x="2277890808" fg:w="3912341"/><text x="8.0071%" y="239.50"></text></g><g><title>_int_malloc (30,609,470 samples, 0.10%)</title><rect x="7.6789%" y="261" width="0.1042%" height="15" fill="rgb(215,77,49)" fg:x="2254922988" fg:w="30609470"/><text x="7.9289%" y="271.50"></text></g><g><title>sysmalloc (3,729,309 samples, 0.01%)</title><rect x="7.7704%" y="245" width="0.0127%" height="15" fill="rgb(248,100,22)" fg:x="2281803149" fg:w="3729309"/><text x="8.0204%" y="255.50"></text></g><g><title>__glibc_morecore (3,729,309 samples, 0.01%)</title><rect x="7.7704%" y="229" width="0.0127%" height="15" fill="rgb(208,67,9)" fg:x="2281803149" fg:w="3729309"/><text x="8.0204%" y="239.50"></text></g><g><title>__GI___sbrk (3,729,309 samples, 0.01%)</title><rect x="7.7704%" y="213" width="0.0127%" height="15" fill="rgb(219,133,21)" fg:x="2281803149" fg:w="3729309"/><text x="8.0204%" y="223.50"></text></g><g><title>__brk (3,729,309 samples, 0.01%)</title><rect x="7.7704%" y="197" width="0.0127%" height="15" fill="rgb(246,46,29)" fg:x="2281803149" fg:w="3729309"/><text x="8.0204%" y="207.50"></text></g><g><title>[unknown] (3,729,309 samples, 0.01%)</title><rect x="7.7704%" y="181" width="0.0127%" height="15" fill="rgb(246,185,52)" fg:x="2281803149" fg:w="3729309"/><text x="8.0204%" y="191.50"></text></g><g><title>__GI___libc_malloc (41,824,328 samples, 0.14%)</title><rect x="7.6663%" y="277" width="0.1424%" height="15" fill="rgb(252,136,11)" fg:x="2251228486" fg:w="41824328"/><text x="7.9163%" y="287.50"></text></g><g><title>tcache_get (7,520,356 samples, 0.03%)</title><rect x="7.7831%" y="261" width="0.0256%" height="15" fill="rgb(219,138,53)" fg:x="2285532458" fg:w="7520356"/><text x="8.0331%" y="271.50"></text></g><g><title>tcache_get_n (7,520,356 samples, 0.03%)</title><rect x="7.7831%" y="245" width="0.0256%" height="15" fill="rgb(211,51,23)" fg:x="2285532458" fg:w="7520356"/><text x="8.0331%" y="255.50"></text></g><g><title>__memset_avx2_unaligned (8,106,078 samples, 0.03%)</title><rect x="7.8088%" y="277" width="0.0276%" height="15" fill="rgb(247,221,28)" fg:x="2293052814" fg:w="8106078"/><text x="8.0588%" y="287.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h368aaacc3eb2e184E.llvm.9464877178135716140 (103,177,751 samples, 0.35%)</title><rect x="7.5615%" y="293" width="0.3514%" height="15" fill="rgb(251,222,45)" fg:x="2220438963" fg:w="103177751"/><text x="7.8115%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (22,457,822 samples, 0.08%)</title><rect x="7.8364%" y="277" width="0.0765%" height="15" fill="rgb(217,162,53)" fg:x="2301158892" fg:w="22457822"/><text x="8.0864%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,129,101 samples, 0.03%)</title><rect x="7.8852%" y="261" width="0.0277%" height="15" fill="rgb(229,93,14)" fg:x="2315487613" fg:w="8129101"/><text x="8.1352%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (137,813,784 samples, 0.47%)</title><rect x="7.4716%" y="309" width="0.4693%" height="15" fill="rgb(209,67,49)" fg:x="2194040726" fg:w="137813784"/><text x="7.7216%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8,237,796 samples, 0.03%)</title><rect x="7.9128%" y="293" width="0.0281%" height="15" fill="rgb(213,87,29)" fg:x="2323616714" fg:w="8237796"/><text x="8.1628%" y="303.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (568,521,218 samples, 1.94%)</title><rect x="6.0859%" y="325" width="1.9360%" height="15" fill="rgb(205,151,52)" fg:x="1787138583" fg:w="568521218"/><text x="6.3359%" y="335.50">&lt;..</text></g><g><title>tokio::sync::notify::Notify::notify_one (23,805,291 samples, 0.08%)</title><rect x="7.9409%" y="309" width="0.0811%" height="15" fill="rgb(253,215,39)" fg:x="2331854510" fg:w="23805291"/><text x="8.1909%" y="319.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::default::Default&gt;::default (15,646,484 samples, 0.05%)</title><rect x="8.0499%" y="309" width="0.0533%" height="15" fill="rgb(221,220,41)" fg:x="2363863264" fg:w="15646484"/><text x="8.2999%" y="319.50"></text></g><g><title>__GI___libc_malloc (11,604,582 samples, 0.04%)</title><rect x="8.0637%" y="293" width="0.0395%" height="15" fill="rgb(218,133,21)" fg:x="2367905166" fg:w="11604582"/><text x="8.3137%" y="303.50"></text></g><g><title>_int_malloc (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="277" width="0.0142%" height="15" fill="rgb(221,193,43)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="287.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="261" width="0.0142%" height="15" fill="rgb(240,128,52)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="271.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="245" width="0.0142%" height="15" fill="rgb(253,114,12)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="255.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="229" width="0.0142%" height="15" fill="rgb(215,223,47)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="239.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="213" width="0.0142%" height="15" fill="rgb(248,225,23)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="223.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="197" width="0.0142%" height="15" fill="rgb(250,108,0)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="207.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="181" width="0.0142%" height="15" fill="rgb(228,208,7)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="191.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="165" width="0.0142%" height="15" fill="rgb(244,45,10)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="175.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="149" width="0.0142%" height="15" fill="rgb(207,125,25)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="159.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="133" width="0.0142%" height="15" fill="rgb(210,195,18)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="143.50"></text></g><g><title>[unknown] (4,180,833 samples, 0.01%)</title><rect x="8.0889%" y="117" width="0.0142%" height="15" fill="rgb(249,80,12)" fg:x="2375328915" fg:w="4180833"/><text x="8.3389%" y="127.50"></text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicyBuilder as grpc::client::load_balancing::LbPolicyBuilderCallbacks&gt;::build (30,697,217 samples, 0.10%)</title><rect x="8.0220%" y="325" width="0.1045%" height="15" fill="rgb(221,65,9)" fg:x="2355659801" fg:w="30697217"/><text x="8.2720%" y="335.50"></text></g><g><title>__GI___libc_malloc (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="309" width="0.0233%" height="15" fill="rgb(235,49,36)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="319.50"></text></g><g><title>_int_malloc (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="293" width="0.0233%" height="15" fill="rgb(225,32,20)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="303.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="277" width="0.0233%" height="15" fill="rgb(215,141,46)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="287.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="261" width="0.0233%" height="15" fill="rgb(250,160,47)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="271.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="245" width="0.0233%" height="15" fill="rgb(216,222,40)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="255.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="229" width="0.0233%" height="15" fill="rgb(234,217,39)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="239.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="213" width="0.0233%" height="15" fill="rgb(207,178,40)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="223.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="197" width="0.0233%" height="15" fill="rgb(221,136,13)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="207.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="181" width="0.0233%" height="15" fill="rgb(249,199,10)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="191.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="165" width="0.0233%" height="15" fill="rgb(249,222,13)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="175.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="149" width="0.0233%" height="15" fill="rgb(244,185,38)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="159.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="133" width="0.0233%" height="15" fill="rgb(236,202,9)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="143.50"></text></g><g><title>[unknown] (6,847,270 samples, 0.02%)</title><rect x="8.1032%" y="117" width="0.0233%" height="15" fill="rgb(250,229,37)" fg:x="2379509748" fg:w="6847270"/><text x="8.3532%" y="127.50"></text></g><g><title>__memcpy_avx_unaligned_erms (3,346,602 samples, 0.01%)</title><rect x="8.3848%" y="261" width="0.0114%" height="15" fill="rgb(206,174,23)" fg:x="2462196961" fg:w="3346602"/><text x="8.6348%" y="271.50"></text></g><g><title>[unknown] (3,346,602 samples, 0.01%)</title><rect x="8.3848%" y="245" width="0.0114%" height="15" fill="rgb(211,33,43)" fg:x="2462196961" fg:w="3346602"/><text x="8.6348%" y="255.50"></text></g><g><title>[unknown] (35,322,136 samples, 0.12%)</title><rect x="8.5721%" y="245" width="0.1203%" height="15" fill="rgb(245,58,50)" fg:x="2517218329" fg:w="35322136"/><text x="8.8221%" y="255.50"></text></g><g><title>[unknown] (31,267,000 samples, 0.11%)</title><rect x="8.5859%" y="229" width="0.1065%" height="15" fill="rgb(244,68,36)" fg:x="2521273465" fg:w="31267000"/><text x="8.8359%" y="239.50"></text></g><g><title>[unknown] (31,267,000 samples, 0.11%)</title><rect x="8.5859%" y="213" width="0.1065%" height="15" fill="rgb(232,229,15)" fg:x="2521273465" fg:w="31267000"/><text x="8.8359%" y="223.50"></text></g><g><title>[unknown] (27,128,287 samples, 0.09%)</title><rect x="8.6000%" y="197" width="0.0924%" height="15" fill="rgb(254,30,23)" fg:x="2525412178" fg:w="27128287"/><text x="8.8500%" y="207.50"></text></g><g><title>[unknown] (27,128,287 samples, 0.09%)</title><rect x="8.6000%" y="181" width="0.0924%" height="15" fill="rgb(235,160,14)" fg:x="2525412178" fg:w="27128287"/><text x="8.8500%" y="191.50"></text></g><g><title>[unknown] (19,455,773 samples, 0.07%)</title><rect x="8.6262%" y="165" width="0.0663%" height="15" fill="rgb(212,155,44)" fg:x="2533084692" fg:w="19455773"/><text x="8.8762%" y="175.50"></text></g><g><title>[unknown] (15,763,266 samples, 0.05%)</title><rect x="8.6387%" y="149" width="0.0537%" height="15" fill="rgb(226,2,50)" fg:x="2536777199" fg:w="15763266"/><text x="8.8887%" y="159.50"></text></g><g><title>[unknown] (15,763,266 samples, 0.05%)</title><rect x="8.6387%" y="133" width="0.0537%" height="15" fill="rgb(234,177,6)" fg:x="2536777199" fg:w="15763266"/><text x="8.8887%" y="143.50"></text></g><g><title>[unknown] (15,763,266 samples, 0.05%)</title><rect x="8.6387%" y="117" width="0.0537%" height="15" fill="rgb(217,24,9)" fg:x="2536777199" fg:w="15763266"/><text x="8.8887%" y="127.50"></text></g><g><title>[unknown] (11,583,293 samples, 0.04%)</title><rect x="8.6530%" y="101" width="0.0394%" height="15" fill="rgb(220,13,46)" fg:x="2540957172" fg:w="11583293"/><text x="8.9030%" y="111.50"></text></g><g><title>[unknown] (11,583,293 samples, 0.04%)</title><rect x="8.6530%" y="85" width="0.0394%" height="15" fill="rgb(239,221,27)" fg:x="2540957172" fg:w="11583293"/><text x="8.9030%" y="95.50"></text></g><g><title>__GI___libc_malloc (113,571,872 samples, 0.39%)</title><rect x="8.3197%" y="277" width="0.3868%" height="15" fill="rgb(222,198,25)" fg:x="2443095034" fg:w="113571872"/><text x="8.5697%" y="287.50"></text></g><g><title>_int_malloc (91,123,343 samples, 0.31%)</title><rect x="8.3962%" y="261" width="0.3103%" height="15" fill="rgb(211,99,13)" fg:x="2465543563" fg:w="91123343"/><text x="8.6462%" y="271.50"></text></g><g><title>sysmalloc (4,126,441 samples, 0.01%)</title><rect x="8.6924%" y="245" width="0.0141%" height="15" fill="rgb(232,111,31)" fg:x="2552540465" fg:w="4126441"/><text x="8.9424%" y="255.50"></text></g><g><title>__glibc_morecore (4,126,441 samples, 0.01%)</title><rect x="8.6924%" y="229" width="0.0141%" height="15" fill="rgb(245,82,37)" fg:x="2552540465" fg:w="4126441"/><text x="8.9424%" y="239.50"></text></g><g><title>__GI___sbrk (4,126,441 samples, 0.01%)</title><rect x="8.6924%" y="213" width="0.0141%" height="15" fill="rgb(227,149,46)" fg:x="2552540465" fg:w="4126441"/><text x="8.9424%" y="223.50"></text></g><g><title>__brk (4,126,441 samples, 0.01%)</title><rect x="8.6924%" y="197" width="0.0141%" height="15" fill="rgb(218,36,50)" fg:x="2552540465" fg:w="4126441"/><text x="8.9424%" y="207.50"></text></g><g><title>[unknown] (4,126,441 samples, 0.01%)</title><rect x="8.6924%" y="181" width="0.0141%" height="15" fill="rgb(226,80,48)" fg:x="2552540465" fg:w="4126441"/><text x="8.9424%" y="191.50"></text></g><g><title>[unknown] (4,126,441 samples, 0.01%)</title><rect x="8.6924%" y="165" width="0.0141%" height="15" fill="rgb(238,224,15)" fg:x="2552540465" fg:w="4126441"/><text x="8.9424%" y="175.50"></text></g><g><title>[unknown] (4,126,441 samples, 0.01%)</title><rect x="8.6924%" y="149" width="0.0141%" height="15" fill="rgb(241,136,10)" fg:x="2552540465" fg:w="4126441"/><text x="8.9424%" y="159.50"></text></g><g><title>__memcpy_avx_unaligned (3,724,652 samples, 0.01%)</title><rect x="8.7065%" y="277" width="0.0127%" height="15" fill="rgb(208,32,45)" fg:x="2556666906" fg:w="3724652"/><text x="8.9565%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (15,837,054 samples, 0.05%)</title><rect x="8.7191%" y="277" width="0.0539%" height="15" fill="rgb(207,135,9)" fg:x="2560391558" fg:w="15837054"/><text x="8.9691%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (159,994,048 samples, 0.54%)</title><rect x="8.2418%" y="293" width="0.5448%" height="15" fill="rgb(206,86,44)" fg:x="2420205942" fg:w="159994048"/><text x="8.4918%" y="303.50"></text></g><g><title>__rdl_alloc (3,971,378 samples, 0.01%)</title><rect x="8.7731%" y="277" width="0.0135%" height="15" fill="rgb(245,177,15)" fg:x="2576228612" fg:w="3971378"/><text x="9.0231%" y="287.50"></text></g><g><title>[unknown] (38,684,767 samples, 0.13%)</title><rect x="8.7980%" y="261" width="0.1317%" height="15" fill="rgb(206,64,50)" fg:x="2583558584" fg:w="38684767"/><text x="9.0480%" y="271.50"></text></g><g><title>[unknown] (38,684,767 samples, 0.13%)</title><rect x="8.7980%" y="245" width="0.1317%" height="15" fill="rgb(234,36,40)" fg:x="2583558584" fg:w="38684767"/><text x="9.0480%" y="255.50"></text></g><g><title>[unknown] (34,499,112 samples, 0.12%)</title><rect x="8.8123%" y="229" width="0.1175%" height="15" fill="rgb(213,64,8)" fg:x="2587744239" fg:w="34499112"/><text x="9.0623%" y="239.50"></text></g><g><title>[unknown] (34,499,112 samples, 0.12%)</title><rect x="8.8123%" y="213" width="0.1175%" height="15" fill="rgb(210,75,36)" fg:x="2587744239" fg:w="34499112"/><text x="9.0623%" y="223.50"></text></g><g><title>[unknown] (30,345,825 samples, 0.10%)</title><rect x="8.8264%" y="197" width="0.1033%" height="15" fill="rgb(229,88,21)" fg:x="2591897526" fg:w="30345825"/><text x="9.0764%" y="207.50"></text></g><g><title>[unknown] (26,967,732 samples, 0.09%)</title><rect x="8.8379%" y="181" width="0.0918%" height="15" fill="rgb(252,204,47)" fg:x="2595275619" fg:w="26967732"/><text x="9.0879%" y="191.50"></text></g><g><title>[unknown] (26,967,732 samples, 0.09%)</title><rect x="8.8379%" y="165" width="0.0918%" height="15" fill="rgb(208,77,27)" fg:x="2595275619" fg:w="26967732"/><text x="9.0879%" y="175.50"></text></g><g><title>[unknown] (26,967,732 samples, 0.09%)</title><rect x="8.8379%" y="149" width="0.0918%" height="15" fill="rgb(221,76,26)" fg:x="2595275619" fg:w="26967732"/><text x="9.0879%" y="159.50"></text></g><g><title>[unknown] (22,814,597 samples, 0.08%)</title><rect x="8.8521%" y="133" width="0.0777%" height="15" fill="rgb(225,139,18)" fg:x="2599428754" fg:w="22814597"/><text x="9.1021%" y="143.50"></text></g><g><title>[unknown] (22,814,597 samples, 0.08%)</title><rect x="8.8521%" y="117" width="0.0777%" height="15" fill="rgb(230,137,11)" fg:x="2599428754" fg:w="22814597"/><text x="9.1021%" y="127.50"></text></g><g><title>[unknown] (18,675,730 samples, 0.06%)</title><rect x="8.8662%" y="101" width="0.0636%" height="15" fill="rgb(212,28,1)" fg:x="2603567621" fg:w="18675730"/><text x="9.1162%" y="111.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (235,836,702 samples, 0.80%)</title><rect x="8.1390%" y="309" width="0.8031%" height="15" fill="rgb(248,164,17)" fg:x="2390042383" fg:w="235836702"/><text x="8.3890%" y="319.50"></text></g><g><title>__GI___libc_malloc (45,679,095 samples, 0.16%)</title><rect x="8.7866%" y="293" width="0.1556%" height="15" fill="rgb(222,171,42)" fg:x="2580199990" fg:w="45679095"/><text x="9.0366%" y="303.50"></text></g><g><title>_int_malloc (45,679,095 samples, 0.16%)</title><rect x="8.7866%" y="277" width="0.1556%" height="15" fill="rgb(243,84,45)" fg:x="2580199990" fg:w="45679095"/><text x="9.0366%" y="287.50"></text></g><g><title>sysmalloc (3,635,734 samples, 0.01%)</title><rect x="8.9298%" y="261" width="0.0124%" height="15" fill="rgb(252,49,23)" fg:x="2622243351" fg:w="3635734"/><text x="9.1798%" y="271.50"></text></g><g><title>__glibc_morecore (3,635,734 samples, 0.01%)</title><rect x="8.9298%" y="245" width="0.0124%" height="15" fill="rgb(215,19,7)" fg:x="2622243351" fg:w="3635734"/><text x="9.1798%" y="255.50"></text></g><g><title>__GI___sbrk (3,635,734 samples, 0.01%)</title><rect x="8.9298%" y="229" width="0.0124%" height="15" fill="rgb(238,81,41)" fg:x="2622243351" fg:w="3635734"/><text x="9.1798%" y="239.50"></text></g><g><title>__brk (3,635,734 samples, 0.01%)</title><rect x="8.9298%" y="213" width="0.0124%" height="15" fill="rgb(210,199,37)" fg:x="2622243351" fg:w="3635734"/><text x="9.1798%" y="223.50"></text></g><g><title>[unknown] (3,635,734 samples, 0.01%)</title><rect x="8.9298%" y="197" width="0.0124%" height="15" fill="rgb(244,192,49)" fg:x="2622243351" fg:w="3635734"/><text x="9.1798%" y="207.50"></text></g><g><title>[unknown] (3,635,734 samples, 0.01%)</title><rect x="8.9298%" y="181" width="0.0124%" height="15" fill="rgb(226,211,11)" fg:x="2622243351" fg:w="3635734"/><text x="9.1798%" y="191.50"></text></g><g><title>[unknown] (3,635,734 samples, 0.01%)</title><rect x="8.9298%" y="165" width="0.0124%" height="15" fill="rgb(236,162,54)" fg:x="2622243351" fg:w="3635734"/><text x="9.1798%" y="175.50"></text></g><g><title>[unknown] (3,635,734 samples, 0.01%)</title><rect x="8.9298%" y="149" width="0.0124%" height="15" fill="rgb(220,229,9)" fg:x="2622243351" fg:w="3635734"/><text x="9.1798%" y="159.50"></text></g><g><title>[unknown] (3,635,734 samples, 0.01%)</title><rect x="8.9298%" y="133" width="0.0124%" height="15" fill="rgb(250,87,22)" fg:x="2622243351" fg:w="3635734"/><text x="9.1798%" y="143.50"></text></g><g><title>__GI___libc_malloc (3,285,962 samples, 0.01%)</title><rect x="8.9563%" y="277" width="0.0112%" height="15" fill="rgb(239,43,17)" fg:x="2630023698" fg:w="3285962"/><text x="9.2063%" y="287.50"></text></g><g><title>_int_malloc (3,285,962 samples, 0.01%)</title><rect x="8.9563%" y="261" width="0.0112%" height="15" fill="rgb(231,177,25)" fg:x="2630023698" fg:w="3285962"/><text x="9.2063%" y="271.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h164f6ec20c46bb4bE.llvm.2902323996697549742 (250,901,042 samples, 0.85%)</title><rect x="8.1265%" y="325" width="0.8544%" height="15" fill="rgb(219,179,1)" fg:x="2386357018" fg:w="250901042"/><text x="8.3765%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (11,378,975 samples, 0.04%)</title><rect x="8.9422%" y="309" width="0.0387%" height="15" fill="rgb(238,219,53)" fg:x="2625879085" fg:w="11378975"/><text x="9.1922%" y="319.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (11,378,975 samples, 0.04%)</title><rect x="8.9422%" y="293" width="0.0387%" height="15" fill="rgb(232,167,36)" fg:x="2625879085" fg:w="11378975"/><text x="9.1922%" y="303.50"></text></g><g><title>__GI___libc_realloc (3,948,400 samples, 0.01%)</title><rect x="8.9675%" y="277" width="0.0134%" height="15" fill="rgb(244,19,51)" fg:x="2633309660" fg:w="3948400"/><text x="9.2175%" y="287.50"></text></g><g><title>_int_realloc (3,948,400 samples, 0.01%)</title><rect x="8.9675%" y="261" width="0.0134%" height="15" fill="rgb(224,6,22)" fg:x="2633309660" fg:w="3948400"/><text x="9.2175%" y="271.50"></text></g><g><title>_int_malloc (3,948,400 samples, 0.01%)</title><rect x="8.9675%" y="245" width="0.0134%" height="15" fill="rgb(224,145,5)" fg:x="2633309660" fg:w="3948400"/><text x="9.2175%" y="255.50"></text></g><g><title>[unknown] (3,948,400 samples, 0.01%)</title><rect x="8.9675%" y="229" width="0.0134%" height="15" fill="rgb(234,130,49)" fg:x="2633309660" fg:w="3948400"/><text x="9.2175%" y="239.50"></text></g><g><title>[unknown] (3,948,400 samples, 0.01%)</title><rect x="8.9675%" y="213" width="0.0134%" height="15" fill="rgb(254,6,2)" fg:x="2633309660" fg:w="3948400"/><text x="9.2175%" y="223.50"></text></g><g><title>[unknown] (3,948,400 samples, 0.01%)</title><rect x="8.9675%" y="197" width="0.0134%" height="15" fill="rgb(208,96,46)" fg:x="2633309660" fg:w="3948400"/><text x="9.2175%" y="207.50"></text></g><g><title>__GI___libc_malloc (8,300,013 samples, 0.03%)</title><rect x="8.9809%" y="325" width="0.0283%" height="15" fill="rgb(239,3,39)" fg:x="2637258060" fg:w="8300013"/><text x="9.2309%" y="335.50"></text></g><g><title>_int_malloc (4,145,332 samples, 0.01%)</title><rect x="8.9951%" y="309" width="0.0141%" height="15" fill="rgb(233,210,1)" fg:x="2641412741" fg:w="4145332"/><text x="9.2451%" y="319.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update (968,037,014 samples, 3.30%)</title><rect x="5.9445%" y="341" width="3.2965%" height="15" fill="rgb(244,137,37)" fg:x="1745600652" fg:w="968037014"/><text x="6.1945%" y="351.50">&lt;gr..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (66,204,904 samples, 0.23%)</title><rect x="9.0156%" y="325" width="0.2255%" height="15" fill="rgb(240,136,2)" fg:x="2647432762" fg:w="66204904"/><text x="9.2656%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (62,806,987 samples, 0.21%)</title><rect x="9.0271%" y="309" width="0.2139%" height="15" fill="rgb(239,18,37)" fg:x="2650830679" fg:w="62806987"/><text x="9.2771%" y="319.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (59,103,026 samples, 0.20%)</title><rect x="9.0397%" y="293" width="0.2013%" height="15" fill="rgb(218,185,22)" fg:x="2654534640" fg:w="59103026"/><text x="9.2897%" y="303.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h4884cc1a4d2303d3E.llvm.3660540333688232871 (54,983,780 samples, 0.19%)</title><rect x="9.0538%" y="277" width="0.1872%" height="15" fill="rgb(225,218,4)" fg:x="2658653886" fg:w="54983780"/><text x="9.3038%" y="287.50"></text></g><g><title>__GI___libc_malloc (81,400,541 samples, 0.28%)</title><rect x="9.2410%" y="341" width="0.2772%" height="15" fill="rgb(230,182,32)" fg:x="2713637666" fg:w="81400541"/><text x="9.4910%" y="351.50"></text></g><g><title>_int_malloc (70,148,849 samples, 0.24%)</title><rect x="9.2793%" y="325" width="0.2389%" height="15" fill="rgb(242,56,43)" fg:x="2724889358" fg:w="70148849"/><text x="9.5293%" y="335.50"></text></g><g><title>[unknown] (4,133,342 samples, 0.01%)</title><rect x="9.5041%" y="309" width="0.0141%" height="15" fill="rgb(233,99,24)" fg:x="2790904865" fg:w="4133342"/><text x="9.7541%" y="319.50"></text></g><g><title>[unknown] (4,133,342 samples, 0.01%)</title><rect x="9.5041%" y="293" width="0.0141%" height="15" fill="rgb(234,209,42)" fg:x="2790904865" fg:w="4133342"/><text x="9.7541%" y="303.50"></text></g><g><title>[unknown] (4,133,342 samples, 0.01%)</title><rect x="9.5041%" y="277" width="0.0141%" height="15" fill="rgb(227,7,12)" fg:x="2790904865" fg:w="4133342"/><text x="9.7541%" y="287.50"></text></g><g><title>[unknown] (4,133,342 samples, 0.01%)</title><rect x="9.5041%" y="261" width="0.0141%" height="15" fill="rgb(245,203,43)" fg:x="2790904865" fg:w="4133342"/><text x="9.7541%" y="271.50"></text></g><g><title>[unknown] (4,133,342 samples, 0.01%)</title><rect x="9.5041%" y="245" width="0.0141%" height="15" fill="rgb(238,205,33)" fg:x="2790904865" fg:w="4133342"/><text x="9.7541%" y="255.50"></text></g><g><title>[unknown] (4,133,342 samples, 0.01%)</title><rect x="9.5041%" y="229" width="0.0141%" height="15" fill="rgb(231,56,7)" fg:x="2790904865" fg:w="4133342"/><text x="9.7541%" y="239.50"></text></g><g><title>[unknown] (4,133,342 samples, 0.01%)</title><rect x="9.5041%" y="213" width="0.0141%" height="15" fill="rgb(244,186,29)" fg:x="2790904865" fg:w="4133342"/><text x="9.7541%" y="223.50"></text></g><g><title>__rdl_alloc (4,184,791 samples, 0.01%)</title><rect x="9.5182%" y="341" width="0.0143%" height="15" fill="rgb(234,111,31)" fg:x="2795038207" fg:w="4184791"/><text x="9.7682%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (7,883,782 samples, 0.03%)</title><rect x="9.7591%" y="309" width="0.0268%" height="15" fill="rgb(241,149,10)" fg:x="2865778340" fg:w="7883782"/><text x="10.0091%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,883,782 samples, 0.03%)</title><rect x="9.7591%" y="293" width="0.0268%" height="15" fill="rgb(249,206,44)" fg:x="2865778340" fg:w="7883782"/><text x="10.0091%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned (8,182,519 samples, 0.03%)</title><rect x="9.9712%" y="277" width="0.0279%" height="15" fill="rgb(251,153,30)" fg:x="2928054925" fg:w="8182519"/><text x="10.2212%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (7,395,516 samples, 0.03%)</title><rect x="9.9990%" y="277" width="0.0252%" height="15" fill="rgb(239,152,38)" fg:x="2936237444" fg:w="7395516"/><text x="10.2490%" y="287.50"></text></g><g><title>[unknown] (18,440,549 samples, 0.06%)</title><rect x="10.2383%" y="213" width="0.0628%" height="15" fill="rgb(249,139,47)" fg:x="3006493264" fg:w="18440549"/><text x="10.4883%" y="223.50"></text></g><g><title>[unknown] (18,440,549 samples, 0.06%)</title><rect x="10.2383%" y="197" width="0.0628%" height="15" fill="rgb(244,64,35)" fg:x="3006493264" fg:w="18440549"/><text x="10.4883%" y="207.50"></text></g><g><title>[unknown] (18,440,549 samples, 0.06%)</title><rect x="10.2383%" y="181" width="0.0628%" height="15" fill="rgb(216,46,15)" fg:x="3006493264" fg:w="18440549"/><text x="10.4883%" y="191.50"></text></g><g><title>[unknown] (18,440,549 samples, 0.06%)</title><rect x="10.2383%" y="165" width="0.0628%" height="15" fill="rgb(250,74,19)" fg:x="3006493264" fg:w="18440549"/><text x="10.4883%" y="175.50"></text></g><g><title>[unknown] (15,175,011 samples, 0.05%)</title><rect x="10.2494%" y="149" width="0.0517%" height="15" fill="rgb(249,42,33)" fg:x="3009758802" fg:w="15175011"/><text x="10.4994%" y="159.50"></text></g><g><title>[unknown] (15,175,011 samples, 0.05%)</title><rect x="10.2494%" y="133" width="0.0517%" height="15" fill="rgb(242,149,17)" fg:x="3009758802" fg:w="15175011"/><text x="10.4994%" y="143.50"></text></g><g><title>[unknown] (15,175,011 samples, 0.05%)</title><rect x="10.2494%" y="117" width="0.0517%" height="15" fill="rgb(244,29,21)" fg:x="3009758802" fg:w="15175011"/><text x="10.4994%" y="127.50"></text></g><g><title>[unknown] (15,175,011 samples, 0.05%)</title><rect x="10.2494%" y="101" width="0.0517%" height="15" fill="rgb(220,130,37)" fg:x="3009758802" fg:w="15175011"/><text x="10.4994%" y="111.50"></text></g><g><title>[unknown] (15,175,011 samples, 0.05%)</title><rect x="10.2494%" y="85" width="0.0517%" height="15" fill="rgb(211,67,2)" fg:x="3009758802" fg:w="15175011"/><text x="10.4994%" y="95.50"></text></g><g><title>[unknown] (15,175,011 samples, 0.05%)</title><rect x="10.2494%" y="69" width="0.0517%" height="15" fill="rgb(235,68,52)" fg:x="3009758802" fg:w="15175011"/><text x="10.4994%" y="79.50"></text></g><g><title>[unknown] (7,500,578 samples, 0.03%)</title><rect x="10.2756%" y="53" width="0.0255%" height="15" fill="rgb(246,142,3)" fg:x="3017433235" fg:w="7500578"/><text x="10.5256%" y="63.50"></text></g><g><title>sysmalloc (3,375,762 samples, 0.01%)</title><rect x="10.3011%" y="213" width="0.0115%" height="15" fill="rgb(241,25,7)" fg:x="3024933813" fg:w="3375762"/><text x="10.5511%" y="223.50"></text></g><g><title>__glibc_morecore (3,375,762 samples, 0.01%)</title><rect x="10.3011%" y="197" width="0.0115%" height="15" fill="rgb(242,119,39)" fg:x="3024933813" fg:w="3375762"/><text x="10.5511%" y="207.50"></text></g><g><title>__GI___sbrk (3,375,762 samples, 0.01%)</title><rect x="10.3011%" y="181" width="0.0115%" height="15" fill="rgb(241,98,45)" fg:x="3024933813" fg:w="3375762"/><text x="10.5511%" y="191.50"></text></g><g><title>__brk (3,375,762 samples, 0.01%)</title><rect x="10.3011%" y="165" width="0.0115%" height="15" fill="rgb(254,28,30)" fg:x="3024933813" fg:w="3375762"/><text x="10.5511%" y="175.50"></text></g><g><title>[unknown] (3,375,762 samples, 0.01%)</title><rect x="10.3011%" y="149" width="0.0115%" height="15" fill="rgb(241,142,54)" fg:x="3024933813" fg:w="3375762"/><text x="10.5511%" y="159.50"></text></g><g><title>[unknown] (3,375,762 samples, 0.01%)</title><rect x="10.3011%" y="133" width="0.0115%" height="15" fill="rgb(222,85,15)" fg:x="3024933813" fg:w="3375762"/><text x="10.5511%" y="143.50"></text></g><g><title>[unknown] (3,375,762 samples, 0.01%)</title><rect x="10.3011%" y="117" width="0.0115%" height="15" fill="rgb(210,85,47)" fg:x="3024933813" fg:w="3375762"/><text x="10.5511%" y="127.50"></text></g><g><title>[unknown] (3,375,762 samples, 0.01%)</title><rect x="10.3011%" y="101" width="0.0115%" height="15" fill="rgb(224,206,25)" fg:x="3024933813" fg:w="3375762"/><text x="10.5511%" y="111.50"></text></g><g><title>__GI___libc_malloc (65,373,882 samples, 0.22%)</title><rect x="10.1025%" y="245" width="0.2226%" height="15" fill="rgb(243,201,19)" fg:x="2966603727" fg:w="65373882"/><text x="10.3525%" y="255.50"></text></g><g><title>_int_malloc (57,220,222 samples, 0.19%)</title><rect x="10.1302%" y="229" width="0.1949%" height="15" fill="rgb(236,59,4)" fg:x="2974757387" fg:w="57220222"/><text x="10.3802%" y="239.50"></text></g><g><title>unlink_chunk (3,668,034 samples, 0.01%)</title><rect x="10.3126%" y="213" width="0.0125%" height="15" fill="rgb(254,179,45)" fg:x="3028309575" fg:w="3668034"/><text x="10.5626%" y="223.50"></text></g><g><title>__rdl_alloc (7,658,733 samples, 0.03%)</title><rect x="10.3251%" y="245" width="0.0261%" height="15" fill="rgb(226,14,10)" fg:x="3031977609" fg:w="7658733"/><text x="10.5751%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (141,739,868 samples, 0.48%)</title><rect x="9.8797%" y="293" width="0.4827%" height="15" fill="rgb(244,27,41)" fg:x="2901199337" fg:w="141739868"/><text x="10.1297%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (99,306,245 samples, 0.34%)</title><rect x="10.0242%" y="277" width="0.3382%" height="15" fill="rgb(235,35,32)" fg:x="2943632960" fg:w="99306245"/><text x="10.2742%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (84,455,179 samples, 0.29%)</title><rect x="10.0748%" y="261" width="0.2876%" height="15" fill="rgb(218,68,31)" fg:x="2958484026" fg:w="84455179"/><text x="10.3248%" y="271.50"></text></g><g><title>__rust_alloc (3,302,863 samples, 0.01%)</title><rect x="10.3512%" y="245" width="0.0112%" height="15" fill="rgb(207,120,37)" fg:x="3039636342" fg:w="3302863"/><text x="10.6012%" y="255.50"></text></g><g><title>alloc::fmt::format::format_inner (269,998,823 samples, 0.92%)</title><rect x="9.5325%" y="341" width="0.9195%" height="15" fill="rgb(227,98,0)" fg:x="2799222998" fg:w="269998823"/><text x="9.7825%" y="351.50"></text></g><g><title>core::fmt::write (234,400,021 samples, 0.80%)</title><rect x="9.6537%" y="325" width="0.7982%" height="15" fill="rgb(207,7,3)" fg:x="2834821800" fg:w="234400021"/><text x="9.9037%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (195,559,699 samples, 0.67%)</title><rect x="9.7860%" y="309" width="0.6660%" height="15" fill="rgb(206,98,19)" fg:x="2873662122" fg:w="195559699"/><text x="10.0360%" y="319.50"></text></g><g><title>core::fmt::Formatter::pad_integral (26,282,616 samples, 0.09%)</title><rect x="10.3624%" y="293" width="0.0895%" height="15" fill="rgb(217,5,26)" fg:x="3042939205" fg:w="26282616"/><text x="10.6124%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (6,619,009 samples, 0.02%)</title><rect x="10.4294%" y="277" width="0.0225%" height="15" fill="rgb(235,190,38)" fg:x="3062602812" fg:w="6619009"/><text x="10.6794%" y="287.50"></text></g><g><title>[unknown] (4,185,368 samples, 0.01%)</title><rect x="10.4798%" y="277" width="0.0143%" height="15" fill="rgb(247,86,24)" fg:x="3077421355" fg:w="4185368"/><text x="10.7298%" y="287.50"></text></g><g><title>__GI_memcpy (4,118,782 samples, 0.01%)</title><rect x="10.4941%" y="277" width="0.0140%" height="15" fill="rgb(205,101,16)" fg:x="3081606723" fg:w="4118782"/><text x="10.7441%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,118,781 samples, 0.01%)</title><rect x="10.4941%" y="261" width="0.0140%" height="15" fill="rgb(246,168,33)" fg:x="3081606724" fg:w="4118781"/><text x="10.7441%" y="271.50"></text></g><g><title>[unknown] (72,737,846 samples, 0.25%)</title><rect x="10.5359%" y="261" width="0.2477%" height="15" fill="rgb(231,114,1)" fg:x="3093883431" fg:w="72737846"/><text x="10.7859%" y="271.50"></text></g><g><title>[unknown] (60,788,128 samples, 0.21%)</title><rect x="10.5766%" y="245" width="0.2070%" height="15" fill="rgb(207,184,53)" fg:x="3105833149" fg:w="60788128"/><text x="10.8266%" y="255.50"></text></g><g><title>[unknown] (56,831,954 samples, 0.19%)</title><rect x="10.5901%" y="229" width="0.1935%" height="15" fill="rgb(224,95,51)" fg:x="3109789323" fg:w="56831954"/><text x="10.8401%" y="239.50"></text></g><g><title>[unknown] (52,650,779 samples, 0.18%)</title><rect x="10.6043%" y="213" width="0.1793%" height="15" fill="rgb(212,188,45)" fg:x="3113970498" fg:w="52650779"/><text x="10.8543%" y="223.50"></text></g><g><title>[unknown] (52,650,779 samples, 0.18%)</title><rect x="10.6043%" y="197" width="0.1793%" height="15" fill="rgb(223,154,38)" fg:x="3113970498" fg:w="52650779"/><text x="10.8543%" y="207.50"></text></g><g><title>[unknown] (45,319,862 samples, 0.15%)</title><rect x="10.6293%" y="181" width="0.1543%" height="15" fill="rgb(251,22,52)" fg:x="3121301415" fg:w="45319862"/><text x="10.8793%" y="191.50"></text></g><g><title>[unknown] (45,319,862 samples, 0.15%)</title><rect x="10.6293%" y="165" width="0.1543%" height="15" fill="rgb(229,209,22)" fg:x="3121301415" fg:w="45319862"/><text x="10.8793%" y="175.50"></text></g><g><title>[unknown] (38,006,049 samples, 0.13%)</title><rect x="10.6542%" y="149" width="0.1294%" height="15" fill="rgb(234,138,34)" fg:x="3128615228" fg:w="38006049"/><text x="10.9042%" y="159.50"></text></g><g><title>[unknown] (38,006,049 samples, 0.13%)</title><rect x="10.6542%" y="133" width="0.1294%" height="15" fill="rgb(212,95,11)" fg:x="3128615228" fg:w="38006049"/><text x="10.9042%" y="143.50"></text></g><g><title>[unknown] (30,673,125 samples, 0.10%)</title><rect x="10.6791%" y="117" width="0.1045%" height="15" fill="rgb(240,179,47)" fg:x="3135948152" fg:w="30673125"/><text x="10.9291%" y="127.50"></text></g><g><title>[unknown] (23,179,171 samples, 0.08%)</title><rect x="10.7047%" y="101" width="0.0789%" height="15" fill="rgb(240,163,11)" fg:x="3143442106" fg:w="23179171"/><text x="10.9547%" y="111.50"></text></g><g><title>__GI___libc_realloc (100,962,070 samples, 0.34%)</title><rect x="10.4519%" y="309" width="0.3438%" height="15" fill="rgb(236,37,12)" fg:x="3069221821" fg:w="100962070"/><text x="10.7019%" y="319.50"></text></g><g><title>_int_realloc (100,962,070 samples, 0.34%)</title><rect x="10.4519%" y="293" width="0.3438%" height="15" fill="rgb(232,164,16)" fg:x="3069221821" fg:w="100962070"/><text x="10.7019%" y="303.50"></text></g><g><title>_int_malloc (84,458,380 samples, 0.29%)</title><rect x="10.5081%" y="277" width="0.2876%" height="15" fill="rgb(244,205,15)" fg:x="3085725511" fg:w="84458380"/><text x="10.7581%" y="287.50"></text></g><g><title>sysmalloc (3,562,614 samples, 0.01%)</title><rect x="10.7836%" y="261" width="0.0121%" height="15" fill="rgb(223,117,47)" fg:x="3166621277" fg:w="3562614"/><text x="11.0336%" y="271.50"></text></g><g><title>__glibc_morecore (3,562,614 samples, 0.01%)</title><rect x="10.7836%" y="245" width="0.0121%" height="15" fill="rgb(244,107,35)" fg:x="3166621277" fg:w="3562614"/><text x="11.0336%" y="255.50"></text></g><g><title>__GI___sbrk (3,562,614 samples, 0.01%)</title><rect x="10.7836%" y="229" width="0.0121%" height="15" fill="rgb(205,140,8)" fg:x="3166621277" fg:w="3562614"/><text x="11.0336%" y="239.50"></text></g><g><title>__brk (3,562,614 samples, 0.01%)</title><rect x="10.7836%" y="213" width="0.0121%" height="15" fill="rgb(228,84,46)" fg:x="3166621277" fg:w="3562614"/><text x="11.0336%" y="223.50"></text></g><g><title>[unknown] (3,562,614 samples, 0.01%)</title><rect x="10.7836%" y="197" width="0.0121%" height="15" fill="rgb(254,188,9)" fg:x="3166621277" fg:w="3562614"/><text x="11.0336%" y="207.50"></text></g><g><title>[unknown] (3,562,614 samples, 0.01%)</title><rect x="10.7836%" y="181" width="0.0121%" height="15" fill="rgb(206,112,54)" fg:x="3166621277" fg:w="3562614"/><text x="11.0336%" y="191.50"></text></g><g><title>[unknown] (3,562,614 samples, 0.01%)</title><rect x="10.7836%" y="165" width="0.0121%" height="15" fill="rgb(216,84,49)" fg:x="3166621277" fg:w="3562614"/><text x="11.0336%" y="175.50"></text></g><g><title>__rdl_realloc (3,337,421 samples, 0.01%)</title><rect x="10.7957%" y="309" width="0.0114%" height="15" fill="rgb(214,194,35)" fg:x="3170183891" fg:w="3337421"/><text x="11.0457%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (107,644,557 samples, 0.37%)</title><rect x="10.4519%" y="341" width="0.3666%" height="15" fill="rgb(249,28,3)" fg:x="3069221821" fg:w="107644557"/><text x="10.7019%" y="351.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (107,644,557 samples, 0.37%)</title><rect x="10.4519%" y="325" width="0.3666%" height="15" fill="rgb(222,56,52)" fg:x="3069221821" fg:w="107644557"/><text x="10.7019%" y="335.50"></text></g><g><title>__rust_realloc (3,345,066 samples, 0.01%)</title><rect x="10.8071%" y="309" width="0.0114%" height="15" fill="rgb(245,217,50)" fg:x="3173521312" fg:w="3345066"/><text x="11.0571%" y="319.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (16,022,449 samples, 0.05%)</title><rect x="10.9291%" y="325" width="0.0546%" height="15" fill="rgb(213,201,24)" fg:x="3209336873" fg:w="16022449"/><text x="11.1791%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3,475,979,206 samples, 11.84%)</title><rect x="17.9748%" y="261" width="11.8371%" height="15" fill="rgb(248,116,28)" fg:x="5278329185" fg:w="3475979206"/><text x="18.2248%" y="271.50">&lt;core::iter::adapt..</text></g><g><title>&lt;lb_apis::StubChannelControllerCallbacks as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (11,849,840 samples, 0.04%)</title><rect x="29.8119%" y="261" width="0.0404%" height="15" fill="rgb(219,72,43)" fg:x="8754308391" fg:w="11849840"/><text x="30.0619%" y="271.50"></text></g><g><title>__GI___libc_free (7,484,073 samples, 0.03%)</title><rect x="29.8522%" y="261" width="0.0255%" height="15" fill="rgb(209,138,14)" fg:x="8766158231" fg:w="7484073"/><text x="30.1022%" y="271.50"></text></g><g><title>_int_free (7,484,073 samples, 0.03%)</title><rect x="29.8522%" y="245" width="0.0255%" height="15" fill="rgb(222,18,33)" fg:x="8766158231" fg:w="7484073"/><text x="30.1022%" y="255.50"></text></g><g><title>malloc_consolidate (3,697,130 samples, 0.01%)</title><rect x="29.9722%" y="229" width="0.0126%" height="15" fill="rgb(213,199,7)" fg:x="8801377659" fg:w="3697130"/><text x="30.2222%" y="239.50"></text></g><g><title>unlink_chunk (3,697,130 samples, 0.01%)</title><rect x="29.9722%" y="213" width="0.0126%" height="15" fill="rgb(250,110,10)" fg:x="8801377659" fg:w="3697130"/><text x="30.2222%" y="223.50"></text></g><g><title>_int_malloc (49,801,606 samples, 0.17%)</title><rect x="29.9185%" y="245" width="0.1696%" height="15" fill="rgb(248,123,6)" fg:x="8785607742" fg:w="49801606"/><text x="30.1685%" y="255.50"></text></g><g><title>unlink_chunk (30,334,559 samples, 0.10%)</title><rect x="29.9848%" y="229" width="0.1033%" height="15" fill="rgb(206,91,31)" fg:x="8805074789" fg:w="30334559"/><text x="30.2348%" y="239.50"></text></g><g><title>__GI___libc_malloc (66,775,209 samples, 0.23%)</title><rect x="29.8777%" y="261" width="0.2274%" height="15" fill="rgb(211,154,13)" fg:x="8773642304" fg:w="66775209"/><text x="30.1277%" y="271.50"></text></g><g><title>tcache_get (5,008,165 samples, 0.02%)</title><rect x="30.0881%" y="245" width="0.0171%" height="15" fill="rgb(225,148,7)" fg:x="8835409348" fg:w="5008165"/><text x="30.3381%" y="255.50"></text></g><g><title>tcache_get_n (5,008,165 samples, 0.02%)</title><rect x="30.0881%" y="229" width="0.0171%" height="15" fill="rgb(220,160,43)" fg:x="8835409348" fg:w="5008165"/><text x="30.3381%" y="239.50"></text></g><g><title>__rdl_alloc (4,072,773 samples, 0.01%)</title><rect x="30.1051%" y="261" width="0.0139%" height="15" fill="rgb(213,52,39)" fg:x="8840417513" fg:w="4072773"/><text x="30.3551%" y="271.50"></text></g><g><title>_int_free (4,125,233 samples, 0.01%)</title><rect x="30.1327%" y="229" width="0.0140%" height="15" fill="rgb(243,137,7)" fg:x="8848529644" fg:w="4125233"/><text x="30.3827%" y="239.50"></text></g><g><title>__GI___libc_free (8,083,775 samples, 0.03%)</title><rect x="30.1327%" y="245" width="0.0275%" height="15" fill="rgb(230,79,13)" fg:x="8848529644" fg:w="8083775"/><text x="30.3827%" y="255.50"></text></g><g><title>_int_free_merge_chunk (3,958,542 samples, 0.01%)</title><rect x="30.1468%" y="229" width="0.0135%" height="15" fill="rgb(247,105,23)" fg:x="8852654877" fg:w="3958542"/><text x="30.3968%" y="239.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (2,263,944,301 samples, 7.71%)</title><rect x="30.1190%" y="261" width="7.7096%" height="15" fill="rgb(223,179,41)" fg:x="8844490286" fg:w="2263944301"/><text x="30.3690%" y="271.50">alloc::sync..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_cb::RRPickerPicker&gt; (2,251,821,168 samples, 7.67%)</title><rect x="30.1603%" y="245" width="7.6683%" height="15" fill="rgb(218,9,34)" fg:x="8856613419" fg:w="2251821168"/><text x="30.4103%" y="255.50">core::ptr:..</text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h582e6995221ab373E.llvm.2902323996697549742 (12,140,654,597 samples, 41.34%)</title><rect x="13.3053%" y="277" width="41.3437%" height="15" fill="rgb(222,106,8)" fg:x="3907126709" fg:w="12140654597"/><text x="13.5553%" y="287.50">_ZN4core3ops8function6FnOnce9call_once17h582e6995221ab373E.llvm.2902..</text></g><g><title>alloc::vec::in_place_collect::from_iter_in_place (4,939,346,719 samples, 16.82%)</title><rect x="37.8286%" y="261" width="16.8204%" height="15" fill="rgb(211,220,0)" fg:x="11108434587" fg:w="4939346719"/><text x="38.0786%" y="271.50">alloc::vec::in_place_colle..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (4,931,236,465 samples, 16.79%)</title><rect x="37.8562%" y="245" width="16.7928%" height="15" fill="rgb(229,52,16)" fg:x="11116544841" fg:w="4931236465"/><text x="38.1062%" y="255.50">&lt;alloc::vec::into_iter::In..</text></g><g><title>__GI___libc_free (8,032,603 samples, 0.03%)</title><rect x="54.6490%" y="277" width="0.0274%" height="15" fill="rgb(212,155,18)" fg:x="16047781306" fg:w="8032603"/><text x="54.8990%" y="287.50"></text></g><g><title>_int_free (4,092,068 samples, 0.01%)</title><rect x="54.6625%" y="261" width="0.0139%" height="15" fill="rgb(242,21,14)" fg:x="16051721841" fg:w="4092068"/><text x="54.9125%" y="271.50"></text></g><g><title>__rust_dealloc (3,909,694 samples, 0.01%)</title><rect x="54.6764%" y="277" width="0.0133%" height="15" fill="rgb(222,19,48)" fg:x="16055813909" fg:w="3909694"/><text x="54.9264%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCallbacks&lt;T&gt; as grpc::client::load_balancing::ChannelControllerCallbacks&gt;::update_picker (12,268,273,376 samples, 41.78%)</title><rect x="12.9912%" y="293" width="41.7783%" height="15" fill="rgb(232,45,27)" fg:x="3814873785" fg:w="12268273376"/><text x="13.2412%" y="303.50">&lt;grpc::client::load_balancing::child_manager_cb::WrappedControllerCa..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (23,423,558 samples, 0.08%)</title><rect x="54.6897%" y="277" width="0.0798%" height="15" fill="rgb(249,103,42)" fg:x="16059723603" fg:w="23423558"/><text x="54.9397%" y="287.50"></text></g><g><title>lb_apis::StubChannelControllerCallbacks::send_update (12,893,648,832 samples, 43.91%)</title><rect x="10.9836%" y="325" width="43.9080%" height="15" fill="rgb(246,81,33)" fg:x="3225359322" fg:w="12893648832"/><text x="11.2336%" y="335.50">lb_apis::StubChannelControllerCallbacks::send_update</text></g><g><title>&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPolicyCallbacks&gt;::resolver_update::_{{closure}} (12,821,163,453 samples, 43.66%)</title><rect x="11.2305%" y="309" width="43.6611%" height="15" fill="rgb(252,33,42)" fg:x="3297844701" fg:w="12821163453"/><text x="11.4805%" y="319.50">&lt;lb_apis::chi_pol_cb::ChildPolicy as grpc::client::load_balancing::LbPol..</text></g><g><title>core::hash::BuildHasher::hash_one (35,860,993 samples, 0.12%)</title><rect x="54.7695%" y="293" width="0.1221%" height="15" fill="rgb(209,212,41)" fg:x="16083147161" fg:w="35860993"/><text x="55.0195%" y="303.50"></text></g><g><title>lb_apis::callbacks (14,428,406,664 samples, 49.13%)</title><rect x="5.7840%" y="357" width="49.1344%" height="15" fill="rgb(207,154,6)" fg:x="1698481120" fg:w="14428406664"/><text x="6.0340%" y="367.50">lb_apis::callbacks</text></g><g><title>bencher::Bencher::iter (12,950,021,406 samples, 44.10%)</title><rect x="10.8185%" y="341" width="44.0999%" height="15" fill="rgb(223,64,47)" fg:x="3176866378" fg:w="12950021406"/><text x="11.0685%" y="351.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (7,879,630 samples, 0.03%)</title><rect x="54.8916%" y="325" width="0.0268%" height="15" fill="rgb(211,161,38)" fg:x="16119008154" fg:w="7879630"/><text x="55.1416%" y="335.50"></text></g><g><title>__GI___libc_malloc (78,158,154 samples, 0.27%)</title><rect x="55.3103%" y="277" width="0.2662%" height="15" fill="rgb(219,138,40)" fg:x="16241950154" fg:w="78158154"/><text x="55.5603%" y="287.50"></text></g><g><title>_int_malloc (65,864,102 samples, 0.22%)</title><rect x="55.3521%" y="261" width="0.2243%" height="15" fill="rgb(241,228,46)" fg:x="16254244206" fg:w="65864102"/><text x="55.6021%" y="271.50"></text></g><g><title>checked_request2size (4,129,359 samples, 0.01%)</title><rect x="55.5624%" y="245" width="0.0141%" height="15" fill="rgb(223,209,38)" fg:x="16315978949" fg:w="4129359"/><text x="55.8124%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4,116,469 samples, 0.01%)</title><rect x="55.5764%" y="277" width="0.0140%" height="15" fill="rgb(236,164,45)" fg:x="16320108308" fg:w="4116469"/><text x="55.8264%" y="287.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (4,116,469 samples, 0.01%)</title><rect x="55.5764%" y="261" width="0.0140%" height="15" fill="rgb(231,15,5)" fg:x="16320108308" fg:w="4116469"/><text x="55.8264%" y="271.50"></text></g><g><title>__GI___libc_realloc (4,116,469 samples, 0.01%)</title><rect x="55.5764%" y="245" width="0.0140%" height="15" fill="rgb(252,35,15)" fg:x="16320108308" fg:w="4116469"/><text x="55.8264%" y="255.50"></text></g><g><title>_int_realloc (4,116,469 samples, 0.01%)</title><rect x="55.5764%" y="229" width="0.0140%" height="15" fill="rgb(248,181,18)" fg:x="16320108308" fg:w="4116469"/><text x="55.8264%" y="239.50"></text></g><g><title>_int_malloc (4,116,469 samples, 0.01%)</title><rect x="55.5764%" y="213" width="0.0140%" height="15" fill="rgb(233,39,42)" fg:x="16320108308" fg:w="4116469"/><text x="55.8264%" y="223.50"></text></g><g><title>checked_request2size (4,116,469 samples, 0.01%)</title><rect x="55.5764%" y="197" width="0.0140%" height="15" fill="rgb(238,110,33)" fg:x="16320108308" fg:w="4116469"/><text x="55.8264%" y="207.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (110,935,204 samples, 0.38%)</title><rect x="55.2407%" y="293" width="0.3778%" height="15" fill="rgb(233,195,10)" fg:x="16221529000" fg:w="110935204"/><text x="55.4907%" y="303.50"></text></g><g><title>grpc::client::load_balancing::Subchannel::new (8,239,427 samples, 0.03%)</title><rect x="55.5904%" y="277" width="0.0281%" height="15" fill="rgb(254,105,3)" fg:x="16324224777" fg:w="8239427"/><text x="55.8404%" y="287.50"></text></g><g><title>__memcpy_avx_unaligned (4,099,124 samples, 0.01%)</title><rect x="55.6742%" y="213" width="0.0140%" height="15" fill="rgb(221,225,9)" fg:x="16348831277" fg:w="4099124"/><text x="55.9242%" y="223.50"></text></g><g><title>__GI_memcpy (8,116,625 samples, 0.03%)</title><rect x="55.6742%" y="229" width="0.0276%" height="15" fill="rgb(224,227,45)" fg:x="16348831277" fg:w="8116625"/><text x="55.9242%" y="239.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,017,501 samples, 0.01%)</title><rect x="55.6882%" y="213" width="0.0137%" height="15" fill="rgb(229,198,43)" fg:x="16352930401" fg:w="4017501"/><text x="55.9382%" y="223.50"></text></g><g><title>_int_free_merge_chunk (4,125,974 samples, 0.01%)</title><rect x="55.7019%" y="229" width="0.0141%" height="15" fill="rgb(206,209,35)" fg:x="16356947902" fg:w="4125974"/><text x="55.9519%" y="239.50"></text></g><g><title>_int_free_create_chunk (4,125,974 samples, 0.01%)</title><rect x="55.7019%" y="213" width="0.0141%" height="15" fill="rgb(245,195,53)" fg:x="16356947902" fg:w="4125974"/><text x="55.9519%" y="223.50"></text></g><g><title>__GI___libc_realloc (40,907,050 samples, 0.14%)</title><rect x="55.6185%" y="261" width="0.1393%" height="15" fill="rgb(240,92,26)" fg:x="16332464204" fg:w="40907050"/><text x="55.8685%" y="271.50"></text></g><g><title>_int_realloc (32,741,662 samples, 0.11%)</title><rect x="55.6463%" y="245" width="0.1115%" height="15" fill="rgb(207,40,23)" fg:x="16340629592" fg:w="32741662"/><text x="55.8963%" y="255.50"></text></g><g><title>_int_malloc (12,297,378 samples, 0.04%)</title><rect x="55.7159%" y="229" width="0.0419%" height="15" fill="rgb(223,111,35)" fg:x="16361073876" fg:w="12297378"/><text x="55.9659%" y="239.50"></text></g><g><title>unlink_chunk (4,133,783 samples, 0.01%)</title><rect x="55.7437%" y="213" width="0.0141%" height="15" fill="rgb(229,147,28)" fg:x="16369237471" fg:w="4133783"/><text x="55.9937%" y="223.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::new_subchannel (176,411,359 samples, 0.60%)</title><rect x="55.1710%" y="309" width="0.6008%" height="15" fill="rgb(211,29,28)" fg:x="16201062470" fg:w="176411359"/><text x="55.4210%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (45,009,625 samples, 0.15%)</title><rect x="55.6185%" y="293" width="0.1533%" height="15" fill="rgb(228,72,33)" fg:x="16332464204" fg:w="45009625"/><text x="55.8685%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (45,009,625 samples, 0.15%)</title><rect x="55.6185%" y="277" width="0.1533%" height="15" fill="rgb(205,214,31)" fg:x="16332464204" fg:w="45009625"/><text x="55.8685%" y="287.50"></text></g><g><title>__rust_alloc (4,102,575 samples, 0.01%)</title><rect x="55.7578%" y="261" width="0.0140%" height="15" fill="rgb(224,111,15)" fg:x="16373371254" fg:w="4102575"/><text x="56.0078%" y="271.50"></text></g><g><title>__GI___libc_free (28,631,480 samples, 0.10%)</title><rect x="55.7718%" y="309" width="0.0975%" height="15" fill="rgb(253,21,26)" fg:x="16377473829" fg:w="28631480"/><text x="56.0218%" y="319.50"></text></g><g><title>_int_free (20,434,550 samples, 0.07%)</title><rect x="55.7997%" y="293" width="0.0696%" height="15" fill="rgb(245,139,43)" fg:x="16385670759" fg:w="20434550"/><text x="56.0497%" y="303.50"></text></g><g><title>__rdl_dealloc (8,149,567 samples, 0.03%)</title><rect x="55.8693%" y="309" width="0.0278%" height="15" fill="rgb(252,170,7)" fg:x="16406105309" fg:w="8149567"/><text x="56.1193%" y="319.50"></text></g><g><title>__rust_dealloc (4,159,728 samples, 0.01%)</title><rect x="55.8970%" y="309" width="0.0142%" height="15" fill="rgb(231,118,14)" fg:x="16414254876" fg:w="4159728"/><text x="56.1470%" y="319.50"></text></g><g><title>__GI___libc_malloc (8,241,506 samples, 0.03%)</title><rect x="56.1348%" y="277" width="0.0281%" height="15" fill="rgb(238,83,0)" fg:x="16484085080" fg:w="8241506"/><text x="56.3848%" y="287.50"></text></g><g><title>_int_malloc (4,140,864 samples, 0.01%)</title><rect x="56.1488%" y="261" width="0.0141%" height="15" fill="rgb(221,39,39)" fg:x="16488185722" fg:w="4140864"/><text x="56.3988%" y="271.50"></text></g><g><title>__memset_avx2_unaligned (4,095,626 samples, 0.01%)</title><rect x="56.1629%" y="277" width="0.0139%" height="15" fill="rgb(222,119,46)" fg:x="16492326586" fg:w="4095626"/><text x="56.4129%" y="287.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h368aaacc3eb2e184E.llvm.9464877178135716140 (69,990,068 samples, 0.24%)</title><rect x="55.9949%" y="293" width="0.2383%" height="15" fill="rgb(222,165,49)" fg:x="16442986568" fg:w="69990068"/><text x="56.2449%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,554,424 samples, 0.06%)</title><rect x="56.1768%" y="277" width="0.0564%" height="15" fill="rgb(219,113,52)" fg:x="16496422212" fg:w="16554424"/><text x="56.4268%" y="287.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (4,159,445 samples, 0.01%)</title><rect x="56.2191%" y="261" width="0.0142%" height="15" fill="rgb(214,7,15)" fg:x="16508817191" fg:w="4159445"/><text x="56.4691%" y="271.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (139,478,412 samples, 0.47%)</title><rect x="55.9112%" y="309" width="0.4750%" height="15" fill="rgb(235,32,4)" fg:x="16418414604" fg:w="139478412"/><text x="56.1612%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (44,916,380 samples, 0.15%)</title><rect x="56.2332%" y="293" width="0.1530%" height="15" fill="rgb(238,90,54)" fg:x="16512976636" fg:w="44916380"/><text x="56.4832%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (4,020,378 samples, 0.01%)</title><rect x="56.3725%" y="277" width="0.0137%" height="15" fill="rgb(213,208,19)" fg:x="16553872638" fg:w="4020378"/><text x="56.6225%" y="287.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (377,393,222 samples, 1.29%)</title><rect x="55.1146%" y="325" width="1.2852%" height="15" fill="rgb(233,156,4)" fg:x="16184501756" fg:w="377393222"/><text x="55.3646%" y="335.50"></text></g><g><title>tokio::sync::notify::Notify::notify_one (4,001,962 samples, 0.01%)</title><rect x="56.3862%" y="309" width="0.0136%" height="15" fill="rgb(207,194,5)" fg:x="16557893016" fg:w="4001962"/><text x="56.6362%" y="319.50"></text></g><g><title>__GI___libc_malloc (8,259,974 samples, 0.03%)</title><rect x="56.3998%" y="309" width="0.0281%" height="15" fill="rgb(206,111,30)" fg:x="16561894978" fg:w="8259974"/><text x="56.6498%" y="319.50"></text></g><g><title>_int_malloc (4,127,493 samples, 0.01%)</title><rect x="56.4139%" y="293" width="0.0141%" height="15" fill="rgb(243,70,54)" fg:x="16566027459" fg:w="4127493"/><text x="56.6639%" y="303.50"></text></g><g><title>__rust_dealloc (4,153,786 samples, 0.01%)</title><rect x="56.4279%" y="309" width="0.0141%" height="15" fill="rgb(242,28,8)" fg:x="16570154952" fg:w="4153786"/><text x="56.6779%" y="319.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicyBuilder as grpc::client::load_balancing::LbPolicyBuilderSingle&gt;::build (16,564,221 samples, 0.06%)</title><rect x="56.3998%" y="325" width="0.0564%" height="15" fill="rgb(219,106,18)" fg:x="16561894978" fg:w="16564221"/><text x="56.6498%" y="335.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (4,150,461 samples, 0.01%)</title><rect x="56.4421%" y="309" width="0.0141%" height="15" fill="rgb(244,222,10)" fg:x="16574308738" fg:w="4150461"/><text x="56.6921%" y="319.50"></text></g><g><title>__GI___libc_malloc (49,379,909 samples, 0.17%)</title><rect x="56.6102%" y="277" width="0.1682%" height="15" fill="rgb(236,179,52)" fg:x="16623666556" fg:w="49379909"/><text x="56.8602%" y="287.50"></text></g><g><title>_int_malloc (41,187,692 samples, 0.14%)</title><rect x="56.6381%" y="261" width="0.1403%" height="15" fill="rgb(213,23,39)" fg:x="16631858773" fg:w="41187692"/><text x="56.8881%" y="271.50"></text></g><g><title>checked_request2size (4,139,222 samples, 0.01%)</title><rect x="56.7642%" y="245" width="0.0141%" height="15" fill="rgb(238,48,10)" fg:x="16668907243" fg:w="4139222"/><text x="57.0142%" y="255.50"></text></g><g><title>_ZN4core3ops8function6FnOnce9call_once17h731624bbe989dabeE.llvm.4780643635171514031 (98,750,900 samples, 0.34%)</title><rect x="56.4562%" y="325" width="0.3363%" height="15" fill="rgb(251,196,23)" fg:x="16578459199" fg:w="98750900"/><text x="56.7062%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (94,615,385 samples, 0.32%)</title><rect x="56.4703%" y="309" width="0.3222%" height="15" fill="rgb(250,152,24)" fg:x="16582594714" fg:w="94615385"/><text x="56.7203%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (65,839,241 samples, 0.22%)</title><rect x="56.5683%" y="293" width="0.2242%" height="15" fill="rgb(209,150,17)" fg:x="16611370858" fg:w="65839241"/><text x="56.8183%" y="303.50"></text></g><g><title>__memcpy_avx_unaligned_erms (4,163,634 samples, 0.01%)</title><rect x="56.7783%" y="277" width="0.0142%" height="15" fill="rgb(234,202,34)" fg:x="16673046465" fg:w="4163634"/><text x="57.0283%" y="287.50"></text></g><g><title>_int_free (3,867,270 samples, 0.01%)</title><rect x="56.8066%" y="293" width="0.0132%" height="15" fill="rgb(253,148,53)" fg:x="16681358134" fg:w="3867270"/><text x="57.0566%" y="303.50"></text></g><g><title>__GI___libc_free (8,009,732 samples, 0.03%)</title><rect x="56.8066%" y="309" width="0.0273%" height="15" fill="rgb(218,129,16)" fg:x="16681358134" fg:w="8009732"/><text x="57.0566%" y="319.50"></text></g><g><title>_int_free_merge_chunk (4,142,462 samples, 0.01%)</title><rect x="56.8198%" y="293" width="0.0141%" height="15" fill="rgb(216,85,19)" fg:x="16685225404" fg:w="4142462"/><text x="57.0698%" y="303.50"></text></g><g><title>_int_free_create_chunk (4,142,462 samples, 0.01%)</title><rect x="56.8198%" y="277" width="0.0141%" height="15" fill="rgb(235,228,7)" fg:x="16685225404" fg:w="4142462"/><text x="57.0698%" y="287.50"></text></g><g><title>unlink_chunk (4,142,462 samples, 0.01%)</title><rect x="56.8198%" y="261" width="0.0141%" height="15" fill="rgb(245,175,0)" fg:x="16685225404" fg:w="4142462"/><text x="57.0698%" y="271.50"></text></g><g><title>[unknown] (29,089,734 samples, 0.10%)</title><rect x="56.9881%" y="277" width="0.0991%" height="15" fill="rgb(208,168,36)" fg:x="16734636808" fg:w="29089734"/><text x="57.2381%" y="287.50"></text></g><g><title>[unknown] (24,938,965 samples, 0.08%)</title><rect x="57.0022%" y="261" width="0.0849%" height="15" fill="rgb(246,171,24)" fg:x="16738787577" fg:w="24938965"/><text x="57.2522%" y="271.50"></text></g><g><title>[unknown] (24,938,965 samples, 0.08%)</title><rect x="57.0022%" y="245" width="0.0849%" height="15" fill="rgb(215,142,24)" fg:x="16738787577" fg:w="24938965"/><text x="57.2522%" y="255.50"></text></g><g><title>[unknown] (20,816,173 samples, 0.07%)</title><rect x="57.0162%" y="229" width="0.0709%" height="15" fill="rgb(250,187,7)" fg:x="16742910369" fg:w="20816173"/><text x="57.2662%" y="239.50"></text></g><g><title>[unknown] (20,816,173 samples, 0.07%)</title><rect x="57.0162%" y="213" width="0.0709%" height="15" fill="rgb(228,66,33)" fg:x="16742910369" fg:w="20816173"/><text x="57.2662%" y="223.50"></text></g><g><title>[unknown] (8,152,063 samples, 0.03%)</title><rect x="57.0594%" y="197" width="0.0278%" height="15" fill="rgb(234,215,21)" fg:x="16755574479" fg:w="8152063"/><text x="57.3094%" y="207.50"></text></g><g><title>[unknown] (8,152,063 samples, 0.03%)</title><rect x="57.0594%" y="181" width="0.0278%" height="15" fill="rgb(222,191,20)" fg:x="16755574479" fg:w="8152063"/><text x="57.3094%" y="191.50"></text></g><g><title>[unknown] (8,152,063 samples, 0.03%)</title><rect x="57.0594%" y="165" width="0.0278%" height="15" fill="rgb(245,79,54)" fg:x="16755574479" fg:w="8152063"/><text x="57.3094%" y="175.50"></text></g><g><title>[unknown] (8,152,063 samples, 0.03%)</title><rect x="57.0594%" y="149" width="0.0278%" height="15" fill="rgb(240,10,37)" fg:x="16755574479" fg:w="8152063"/><text x="57.3094%" y="159.50"></text></g><g><title>[unknown] (4,008,549 samples, 0.01%)</title><rect x="57.0735%" y="133" width="0.0137%" height="15" fill="rgb(214,192,32)" fg:x="16759717993" fg:w="4008549"/><text x="57.3235%" y="143.50"></text></g><g><title>__GI___libc_malloc (36,738,608 samples, 0.13%)</title><rect x="57.0871%" y="277" width="0.1251%" height="15" fill="rgb(209,36,54)" fg:x="16763726542" fg:w="36738608"/><text x="57.3371%" y="287.50"></text></g><g><title>_int_malloc (36,738,608 samples, 0.13%)</title><rect x="57.0871%" y="261" width="0.1251%" height="15" fill="rgb(220,10,11)" fg:x="16763726542" fg:w="36738608"/><text x="57.3371%" y="271.50"></text></g><g><title>malloc_consolidate (36,738,608 samples, 0.13%)</title><rect x="57.0871%" y="245" width="0.1251%" height="15" fill="rgb(221,106,17)" fg:x="16763726542" fg:w="36738608"/><text x="57.3371%" y="255.50"></text></g><g><title>unlink_chunk (16,381,468 samples, 0.06%)</title><rect x="57.1564%" y="229" width="0.0558%" height="15" fill="rgb(251,142,44)" fg:x="16784083682" fg:w="16381468"/><text x="57.4064%" y="239.50"></text></g><g><title>_ZN9hashbrown3raw21RawTable$LT$T$C$A$GT$14reserve_rehash17h03e3fa1e86f88544E.llvm.9464877178135716140 (110,994,185 samples, 0.38%)</title><rect x="56.8899%" y="293" width="0.3780%" height="15" fill="rgb(238,13,15)" fg:x="16705825815" fg:w="110994185"/><text x="57.1399%" y="303.50"></text></g><g><title>core::hash::BuildHasher::hash_one (16,354,850 samples, 0.06%)</title><rect x="57.2122%" y="277" width="0.0557%" height="15" fill="rgb(208,107,27)" fg:x="16800465150" fg:w="16354850"/><text x="57.4622%" y="287.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17he69976d13d8f5112E.llvm.2957088687967014999 (143,747,098 samples, 0.49%)</title><rect x="56.7925%" y="325" width="0.4895%" height="15" fill="rgb(205,136,37)" fg:x="16677210099" fg:w="143747098"/><text x="57.0425%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (131,589,331 samples, 0.45%)</title><rect x="56.8339%" y="309" width="0.4481%" height="15" fill="rgb(250,205,27)" fg:x="16689367866" fg:w="131589331"/><text x="57.0839%" y="319.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4,137,197 samples, 0.01%)</title><rect x="57.2679%" y="293" width="0.0141%" height="15" fill="rgb(210,80,43)" fg:x="16816820000" fg:w="4137197"/><text x="57.5179%" y="303.50"></text></g><g><title>__GI___libc_malloc (4,161,767 samples, 0.01%)</title><rect x="57.2820%" y="325" width="0.0142%" height="15" fill="rgb(247,160,36)" fg:x="16820957197" fg:w="4161767"/><text x="57.5320%" y="335.50"></text></g><g><title>_int_malloc (4,161,767 samples, 0.01%)</title><rect x="57.2820%" y="309" width="0.0142%" height="15" fill="rgb(234,13,49)" fg:x="16820957197" fg:w="4161767"/><text x="57.5320%" y="319.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::resolver_update (706,149,605 samples, 2.40%)</title><rect x="55.1006%" y="341" width="2.4047%" height="15" fill="rgb(234,122,0)" fg:x="16180393284" fg:w="706149605"/><text x="55.3506%" y="351.50">&lt;g..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (61,423,925 samples, 0.21%)</title><rect x="57.2962%" y="325" width="0.2092%" height="15" fill="rgb(207,146,38)" fg:x="16825118964" fg:w="61423925"/><text x="57.5462%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (61,423,925 samples, 0.21%)</title><rect x="57.2962%" y="309" width="0.2092%" height="15" fill="rgb(207,177,25)" fg:x="16825118964" fg:w="61423925"/><text x="57.5462%" y="319.50"></text></g><g><title>&lt;grpc::client::name_resolution::Endpoint as core::hash::Hash&gt;::hash (53,234,642 samples, 0.18%)</title><rect x="57.3241%" y="293" width="0.1813%" height="15" fill="rgb(211,178,42)" fg:x="16833308247" fg:w="53234642"/><text x="57.5741%" y="303.50"></text></g><g><title>_ZN71_$LT$core..hash..sip..Hasher$LT$S$GT$$u20$as$u20$core..hash..Hasher$GT$5write17h4884cc1a4d2303d3E.llvm.3660540333688232871 (49,123,725 samples, 0.17%)</title><rect x="57.3381%" y="277" width="0.1673%" height="15" fill="rgb(230,69,54)" fg:x="16837419164" fg:w="49123725"/><text x="57.5881%" y="287.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h9f7b29ce195bd27dE.llvm.4780643635171514031 (9,287,652 samples, 0.03%)</title><rect x="57.5054%" y="341" width="0.0316%" height="15" fill="rgb(214,135,41)" fg:x="16886542889" fg:w="9287652"/><text x="57.7554%" y="351.50"></text></g><g><title>__GI___libc_malloc (8,223,352 samples, 0.03%)</title><rect x="57.5090%" y="325" width="0.0280%" height="15" fill="rgb(237,67,25)" fg:x="16887607189" fg:w="8223352"/><text x="57.7590%" y="335.50"></text></g><g><title>_int_malloc (8,223,352 samples, 0.03%)</title><rect x="57.5090%" y="309" width="0.0280%" height="15" fill="rgb(222,189,50)" fg:x="16887607189" fg:w="8223352"/><text x="57.7590%" y="319.50"></text></g><g><title>malloc_consolidate (8,223,352 samples, 0.03%)</title><rect x="57.5090%" y="293" width="0.0280%" height="15" fill="rgb(245,148,34)" fg:x="16887607189" fg:w="8223352"/><text x="57.7590%" y="303.50"></text></g><g><title>unlink_chunk (4,125,080 samples, 0.01%)</title><rect x="57.5229%" y="277" width="0.0140%" height="15" fill="rgb(222,29,6)" fg:x="16891705461" fg:w="4125080"/><text x="57.7729%" y="287.50"></text></g><g><title>__GI___libc_malloc (49,173,368 samples, 0.17%)</title><rect x="57.5370%" y="341" width="0.1675%" height="15" fill="rgb(221,189,43)" fg:x="16895830541" fg:w="49173368"/><text x="57.7870%" y="351.50"></text></g><g><title>_int_malloc (41,063,474 samples, 0.14%)</title><rect x="57.5646%" y="325" width="0.1398%" height="15" fill="rgb(207,36,27)" fg:x="16903940435" fg:w="41063474"/><text x="57.8146%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (24,800,160 samples, 0.08%)</title><rect x="57.7604%" y="309" width="0.0845%" height="15" fill="rgb(217,90,24)" fg:x="16961447118" fg:w="24800160"/><text x="58.0104%" y="319.50"></text></g><g><title>__memcpy_avx_unaligned (8,132,036 samples, 0.03%)</title><rect x="57.9992%" y="277" width="0.0277%" height="15" fill="rgb(224,66,35)" fg:x="17031560087" fg:w="8132036"/><text x="58.2492%" y="287.50"></text></g><g><title>__GI___libc_malloc (77,886,299 samples, 0.27%)</title><rect x="58.1385%" y="245" width="0.2652%" height="15" fill="rgb(221,13,50)" fg:x="17072462407" fg:w="77886299"/><text x="58.3885%" y="255.50"></text></g><g><title>_int_malloc (65,486,089 samples, 0.22%)</title><rect x="58.1807%" y="229" width="0.2230%" height="15" fill="rgb(236,68,49)" fg:x="17084862617" fg:w="65486089"/><text x="58.4307%" y="239.50"></text></g><g><title>unlink_chunk (4,156,201 samples, 0.01%)</title><rect x="58.3896%" y="213" width="0.0142%" height="15" fill="rgb(229,146,28)" fg:x="17146192505" fg:w="4156201"/><text x="58.6396%" y="223.50"></text></g><g><title>__rdl_alloc (8,301,294 samples, 0.03%)</title><rect x="58.4037%" y="245" width="0.0283%" height="15" fill="rgb(225,31,38)" fg:x="17150348706" fg:w="8301294"/><text x="58.6537%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (147,796,878 samples, 0.50%)</title><rect x="57.9427%" y="293" width="0.5033%" height="15" fill="rgb(250,208,3)" fg:x="17014975327" fg:w="147796878"/><text x="58.1927%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (123,080,082 samples, 0.42%)</title><rect x="58.0269%" y="277" width="0.4191%" height="15" fill="rgb(246,54,23)" fg:x="17039692123" fg:w="123080082"/><text x="58.2769%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (110,658,853 samples, 0.38%)</title><rect x="58.0692%" y="261" width="0.3768%" height="15" fill="rgb(243,76,11)" fg:x="17052113352" fg:w="110658853"/><text x="58.3192%" y="271.50"></text></g><g><title>__rust_alloc (4,122,205 samples, 0.01%)</title><rect x="58.4320%" y="245" width="0.0140%" height="15" fill="rgb(245,21,50)" fg:x="17158650000" fg:w="4122205"/><text x="58.6820%" y="255.50"></text></g><g><title>alloc::fmt::format::format_inner (259,139,801 samples, 0.88%)</title><rect x="57.7044%" y="341" width="0.8825%" height="15" fill="rgb(228,9,43)" fg:x="16945003909" fg:w="259139801"/><text x="57.9544%" y="351.50"></text></g><g><title>core::fmt::write (259,139,801 samples, 0.88%)</title><rect x="57.7044%" y="325" width="0.8825%" height="15" fill="rgb(208,100,47)" fg:x="16945003909" fg:w="259139801"/><text x="57.9544%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (217,896,432 samples, 0.74%)</title><rect x="57.8449%" y="309" width="0.7420%" height="15" fill="rgb(232,26,8)" fg:x="16986247278" fg:w="217896432"/><text x="58.0949%" y="319.50"></text></g><g><title>core::fmt::Formatter::pad_integral (41,371,505 samples, 0.14%)</title><rect x="58.4460%" y="293" width="0.1409%" height="15" fill="rgb(216,166,38)" fg:x="17162772205" fg:w="41371505"/><text x="58.6960%" y="303.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (24,798,064 samples, 0.08%)</title><rect x="58.5025%" y="277" width="0.0844%" height="15" fill="rgb(251,202,51)" fg:x="17179345646" fg:w="24798064"/><text x="58.7525%" y="287.50"></text></g><g><title>_int_free_merge_chunk (4,014,618 samples, 0.01%)</title><rect x="58.6148%" y="277" width="0.0137%" height="15" fill="rgb(254,216,34)" fg:x="17212329276" fg:w="4014618"/><text x="58.8648%" y="287.50"></text></g><g><title>_int_free_create_chunk (4,014,618 samples, 0.01%)</title><rect x="58.6148%" y="261" width="0.0137%" height="15" fill="rgb(251,32,27)" fg:x="17212329276" fg:w="4014618"/><text x="58.8648%" y="271.50"></text></g><g><title>_int_realloc (81,965,662 samples, 0.28%)</title><rect x="58.6148%" y="293" width="0.2791%" height="15" fill="rgb(208,127,28)" fg:x="17212329276" fg:w="81965662"/><text x="58.8648%" y="303.50"></text></g><g><title>_int_malloc (77,951,044 samples, 0.27%)</title><rect x="58.6285%" y="277" width="0.2655%" height="15" fill="rgb(224,137,22)" fg:x="17216343894" fg:w="77951044"/><text x="58.8785%" y="287.50"></text></g><g><title>malloc_consolidate (61,494,846 samples, 0.21%)</title><rect x="58.6845%" y="261" width="0.2094%" height="15" fill="rgb(254,70,32)" fg:x="17232800092" fg:w="61494846"/><text x="58.9345%" y="271.50"></text></g><g><title>unlink_chunk (28,753,635 samples, 0.10%)</title><rect x="58.7960%" y="245" width="0.0979%" height="15" fill="rgb(229,75,37)" fg:x="17265541303" fg:w="28753635"/><text x="59.0460%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (94,169,888 samples, 0.32%)</title><rect x="58.5869%" y="341" width="0.3207%" height="15" fill="rgb(252,64,23)" fg:x="17204143710" fg:w="94169888"/><text x="58.8369%" y="351.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (94,169,888 samples, 0.32%)</title><rect x="58.5869%" y="325" width="0.3207%" height="15" fill="rgb(232,162,48)" fg:x="17204143710" fg:w="94169888"/><text x="58.8369%" y="335.50"></text></g><g><title>__GI___libc_realloc (85,984,322 samples, 0.29%)</title><rect x="58.6148%" y="309" width="0.2928%" height="15" fill="rgb(246,160,12)" fg:x="17212329276" fg:w="85984322"/><text x="58.8648%" y="319.50"></text></g><g><title>musable (4,018,660 samples, 0.01%)</title><rect x="58.8939%" y="293" width="0.0137%" height="15" fill="rgb(247,166,0)" fg:x="17294294938" fg:w="4018660"/><text x="59.1439%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_batched::WrappedController as grpc::client::load_balancing::ChannelController&gt;::update_picker (16,514,470 samples, 0.06%)</title><rect x="61.7830%" y="293" width="0.0562%" height="15" fill="rgb(249,219,21)" fg:x="18142687596" fg:w="16514470"/><text x="62.0330%" y="303.50"></text></g><g><title>__GI___libc_malloc (8,249,651 samples, 0.03%)</title><rect x="61.8393%" y="293" width="0.0281%" height="15" fill="rgb(205,209,3)" fg:x="18159202066" fg:w="8249651"/><text x="62.0893%" y="303.50"></text></g><g><title>tcache_get (4,144,140 samples, 0.01%)</title><rect x="61.8532%" y="277" width="0.0141%" height="15" fill="rgb(243,44,1)" fg:x="18163307577" fg:w="4144140"/><text x="62.1032%" y="287.50"></text></g><g><title>tcache_get_n (4,144,140 samples, 0.01%)</title><rect x="61.8532%" y="261" width="0.0141%" height="15" fill="rgb(206,159,16)" fg:x="18163307577" fg:w="4144140"/><text x="62.1032%" y="271.50"></text></g><g><title>__rust_alloc (8,281,801 samples, 0.03%)</title><rect x="61.8674%" y="293" width="0.0282%" height="15" fill="rgb(244,77,30)" fg:x="18167451717" fg:w="8281801"/><text x="62.1174%" y="303.50"></text></g><g><title>&lt;lb_apis::chi_pol_single::ChildPolicy as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (646,926,650 samples, 2.20%)</title><rect x="59.7905%" y="309" width="2.2030%" height="15" fill="rgb(218,69,12)" fg:x="17557566188" fg:w="646926650"/><text x="60.0405%" y="319.50">&lt;..</text></g><g><title>core::hash::BuildHasher::hash_one (28,759,320 samples, 0.10%)</title><rect x="61.8956%" y="293" width="0.0979%" height="15" fill="rgb(212,87,7)" fg:x="18175733518" fg:w="28759320"/><text x="62.1456%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16,394,142 samples, 0.06%)</title><rect x="62.1335%" y="293" width="0.0558%" height="15" fill="rgb(245,114,25)" fg:x="18245615905" fg:w="16394142"/><text x="62.3835%" y="303.50"></text></g><g><title>__GI___libc_free (12,466,145 samples, 0.04%)</title><rect x="62.1894%" y="293" width="0.0425%" height="15" fill="rgb(210,61,42)" fg:x="18262010047" fg:w="12466145"/><text x="62.4394%" y="303.50"></text></g><g><title>_int_free (4,150,035 samples, 0.01%)</title><rect x="62.2177%" y="277" width="0.0141%" height="15" fill="rgb(211,52,33)" fg:x="18270326157" fg:w="4150035"/><text x="62.4677%" y="287.50"></text></g><g><title>__rust_dealloc (4,139,717 samples, 0.01%)</title><rect x="62.2318%" y="293" width="0.0141%" height="15" fill="rgb(234,58,33)" fg:x="18274476192" fg:w="4139717"/><text x="62.4818%" y="303.50"></text></g><g><title>_ZN4grpc6client14load_balancing20child_manager_single21ChildManager$LT$T$GT$24resolve_child_controller17he69976d13d8f5112E.llvm.2957088687967014999 (98,996,088 samples, 0.34%)</title><rect x="61.9935%" y="309" width="0.3371%" height="15" fill="rgb(220,115,36)" fg:x="18204492838" fg:w="98996088"/><text x="62.2435%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (24,873,017 samples, 0.08%)</title><rect x="62.2459%" y="293" width="0.0847%" height="15" fill="rgb(243,153,54)" fg:x="18278615909" fg:w="24873017"/><text x="62.4959%" y="303.50"></text></g><g><title>&lt;grpc::client::load_balancing::child_manager_single::ChildManager&lt;T&gt; as grpc::client::load_balancing::LbPolicySingle&gt;::subchannel_update (852,884,002 samples, 2.90%)</title><rect x="59.4963%" y="325" width="2.9044%" height="15" fill="rgb(251,47,18)" fg:x="17471181631" fg:w="852884002"/><text x="59.7463%" y="335.50">&lt;g..</text></g><g><title>core::hash::BuildHasher::hash_one (20,576,707 samples, 0.07%)</title><rect x="62.3306%" y="309" width="0.0701%" height="15" fill="rgb(242,102,42)" fg:x="18303488926" fg:w="20576707"/><text x="62.5806%" y="319.50"></text></g><g><title>&lt;grpc::client::load_balancing::Subchannel as core::hash::Hash&gt;::hash (8,285,733 samples, 0.03%)</title><rect x="62.3725%" y="293" width="0.0282%" height="15" fill="rgb(234,31,38)" fg:x="18315779900" fg:w="8285733"/><text x="62.6225%" y="303.50"></text></g><g><title>&lt;rand::rngs::thread::ThreadRng as core::default::Default&gt;::default (37,154,066 samples, 0.13%)</title><rect x="62.4007%" y="325" width="0.1265%" height="15" fill="rgb(221,117,51)" fg:x="18324065633" fg:w="37154066"/><text x="62.6507%" y="335.50"></text></g><g><title>__GI___libc_malloc (8,136,354 samples, 0.03%)</title><rect x="83.3392%" y="293" width="0.0277%" height="15" fill="rgb(212,20,18)" fg:x="24472681711" fg:w="8136354"/><text x="83.5892%" y="303.50"></text></g><g><title>tcache_get (4,117,064 samples, 0.01%)</title><rect x="83.3528%" y="277" width="0.0140%" height="15" fill="rgb(245,133,36)" fg:x="24476701001" fg:w="4117064"/><text x="83.6028%" y="287.50"></text></g><g><title>tcache_get_n (4,117,064 samples, 0.01%)</title><rect x="83.3528%" y="261" width="0.0140%" height="15" fill="rgb(212,6,19)" fg:x="24476701001" fg:w="4117064"/><text x="83.6028%" y="271.50"></text></g><g><title>__memcpy_avx_unaligned (3,994,072 samples, 0.01%)</title><rect x="84.3636%" y="213" width="0.0136%" height="15" fill="rgb(218,1,36)" fg:x="24773496627" fg:w="3994072"/><text x="84.6136%" y="223.50"></text></g><g><title>__memcpy_avx_unaligned_erms (206,242,127 samples, 0.70%)</title><rect x="84.3772%" y="213" width="0.7023%" height="15" fill="rgb(246,84,54)" fg:x="24777490699" fg:w="206242127"/><text x="84.6272%" y="223.50"></text></g><g><title>__GI_memcpy (226,543,760 samples, 0.77%)</title><rect x="84.3220%" y="229" width="0.7715%" height="15" fill="rgb(242,110,6)" fg:x="24761293738" fg:w="226543760"/><text x="84.5720%" y="239.50"></text></g><g><title>memcpy@@GLIBC_2.14@plt (4,104,672 samples, 0.01%)</title><rect x="85.0795%" y="213" width="0.0140%" height="15" fill="rgb(214,47,5)" fg:x="24983732826" fg:w="4104672"/><text x="85.3295%" y="223.50"></text></g><g><title>_int_free (40,795,548 samples, 0.14%)</title><rect x="85.0935%" y="229" width="0.1389%" height="15" fill="rgb(218,159,25)" fg:x="24987837498" fg:w="40795548"/><text x="85.3435%" y="239.50"></text></g><g><title>_int_free_create_chunk (61,741,732 samples, 0.21%)</title><rect x="85.3166%" y="213" width="0.2103%" height="15" fill="rgb(215,211,28)" fg:x="25053354406" fg:w="61741732"/><text x="85.5666%" y="223.50"></text></g><g><title>unlink_chunk (12,374,335 samples, 0.04%)</title><rect x="85.4847%" y="197" width="0.0421%" height="15" fill="rgb(238,59,32)" fg:x="25102721803" fg:w="12374335"/><text x="85.7347%" y="207.50"></text></g><g><title>_int_free_merge_chunk (90,562,158 samples, 0.31%)</title><rect x="85.2324%" y="229" width="0.3084%" height="15" fill="rgb(226,82,3)" fg:x="25028633046" fg:w="90562158"/><text x="85.4824%" y="239.50"></text></g><g><title>free_perturb (4,099,066 samples, 0.01%)</title><rect x="85.5268%" y="213" width="0.0140%" height="15" fill="rgb(240,164,32)" fg:x="25115096138" fg:w="4099066"/><text x="85.7768%" y="223.50"></text></g><g><title>checked_request2size (8,232,116 samples, 0.03%)</title><rect x="86.4042%" y="213" width="0.0280%" height="15" fill="rgb(232,46,7)" fg:x="25372745150" fg:w="8232116"/><text x="86.6542%" y="223.50"></text></g><g><title>_int_malloc (323,641,085 samples, 1.10%)</title><rect x="85.5408%" y="229" width="1.1021%" height="15" fill="rgb(229,129,53)" fg:x="25119195204" fg:w="323641085"/><text x="85.7908%" y="239.50"></text></g><g><title>unlink_chunk (61,859,023 samples, 0.21%)</title><rect x="86.4323%" y="213" width="0.2107%" height="15" fill="rgb(234,188,29)" fg:x="25380977266" fg:w="61859023"/><text x="86.6823%" y="223.50"></text></g><g><title>_int_realloc (780,511,118 samples, 2.66%)</title><rect x="83.9988%" y="245" width="2.6579%" height="15" fill="rgb(246,141,4)" fg:x="24666388951" fg:w="780511118"/><text x="84.2488%" y="255.50">_i..</text></g><g><title>unlink_chunk (4,063,780 samples, 0.01%)</title><rect x="86.6429%" y="229" width="0.0138%" height="15" fill="rgb(229,23,39)" fg:x="25442836289" fg:w="4063780"/><text x="86.8929%" y="239.50"></text></g><g><title>__GI___libc_realloc (854,596,579 samples, 2.91%)</title><rect x="83.7883%" y="261" width="2.9102%" height="15" fill="rgb(206,12,3)" fg:x="24604580588" fg:w="854596579"/><text x="84.0383%" y="271.50">__..</text></g><g><title>musable (12,277,098 samples, 0.04%)</title><rect x="86.6568%" y="245" width="0.0418%" height="15" fill="rgb(252,226,20)" fg:x="25446900069" fg:w="12277098"/><text x="86.9068%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4,798,512,113 samples, 16.34%)</title><rect x="70.3855%" y="309" width="16.3408%" height="15" fill="rgb(216,123,35)" fg:x="20668813585" fg:w="4798512113"/><text x="70.6355%" y="319.50">&lt;alloc::vec::Vec&lt;T&gt; as al..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (986,507,633 samples, 3.36%)</title><rect x="83.3669%" y="293" width="3.3594%" height="15" fill="rgb(212,68,40)" fg:x="24480818065" fg:w="986507633"/><text x="83.6169%" y="303.50">all..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h30e20a82fb14c775E.llvm.9640716567772130773 (903,922,099 samples, 3.08%)</title><rect x="83.6481%" y="277" width="3.0782%" height="15" fill="rgb(254,125,32)" fg:x="24563403599" fg:w="903922099"/><text x="83.8981%" y="287.50">_ZN..</text></g><g><title>__rdl_realloc (8,148,531 samples, 0.03%)</title><rect x="86.6986%" y="261" width="0.0277%" height="15" fill="rgb(253,97,22)" fg:x="25459177167" fg:w="8148531"/><text x="86.9486%" y="271.50"></text></g><g><title>&lt;lb_apis::StubChannelController as grpc::client::load_balancing::ChannelController&gt;::update_picker (24,740,501 samples, 0.08%)</title><rect x="86.7263%" y="309" width="0.0843%" height="15" fill="rgb(241,101,14)" fg:x="25467325698" fg:w="24740501"/><text x="86.9763%" y="319.50"></text></g><g><title>_int_free (37,060,390 samples, 0.13%)</title><rect x="86.8106%" y="293" width="0.1262%" height="15" fill="rgb(238,103,29)" fg:x="25492066199" fg:w="37060390"/><text x="87.0606%" y="303.50"></text></g><g><title>_int_free_merge_chunk (16,535,395 samples, 0.06%)</title><rect x="86.9368%" y="293" width="0.0563%" height="15" fill="rgb(233,195,47)" fg:x="25529126589" fg:w="16535395"/><text x="87.1868%" y="303.50"></text></g><g><title>_int_free_create_chunk (16,535,395 samples, 0.06%)</title><rect x="86.9368%" y="277" width="0.0563%" height="15" fill="rgb(246,218,30)" fg:x="25529126589" fg:w="16535395"/><text x="87.1868%" y="287.50"></text></g><g><title>unlink_chunk (4,143,287 samples, 0.01%)</title><rect x="86.9790%" y="261" width="0.0141%" height="15" fill="rgb(219,145,47)" fg:x="25541518697" fg:w="4143287"/><text x="87.2290%" y="271.50"></text></g><g><title>__GI___libc_free (57,725,077 samples, 0.20%)</title><rect x="86.8106%" y="309" width="0.1966%" height="15" fill="rgb(243,12,26)" fg:x="25492066199" fg:w="57725077"/><text x="87.0606%" y="319.50"></text></g><g><title>arena_for_chunk (4,129,292 samples, 0.01%)</title><rect x="86.9931%" y="293" width="0.0141%" height="15" fill="rgb(214,87,16)" fg:x="25545661984" fg:w="4129292"/><text x="87.2431%" y="303.50"></text></g><g><title>__GI___libc_malloc (162,271,140 samples, 0.55%)</title><rect x="87.0071%" y="309" width="0.5526%" height="15" fill="rgb(208,99,42)" fg:x="25549791276" fg:w="162271140"/><text x="87.2571%" y="319.50"></text></g><g><title>_int_malloc (141,658,796 samples, 0.48%)</title><rect x="87.0773%" y="293" width="0.4824%" height="15" fill="rgb(253,99,2)" fg:x="25570403620" fg:w="141658796"/><text x="87.3273%" y="303.50"></text></g><g><title>unlink_chunk (16,512,952 samples, 0.06%)</title><rect x="87.5035%" y="277" width="0.0562%" height="15" fill="rgb(220,168,23)" fg:x="25695549464" fg:w="16512952"/><text x="87.7535%" y="287.50"></text></g><g><title>__rust_alloc (4,077,456 samples, 0.01%)</title><rect x="87.5597%" y="309" width="0.0139%" height="15" fill="rgb(242,38,24)" fg:x="25712062416" fg:w="4077456"/><text x="87.8097%" y="319.50"></text></g><g><title>_int_free (8,280,340 samples, 0.03%)</title><rect x="87.6154%" y="277" width="0.0282%" height="15" fill="rgb(225,182,9)" fg:x="25728396411" fg:w="8280340"/><text x="87.8654%" y="287.50"></text></g><g><title>__GI___libc_free (37,253,771 samples, 0.13%)</title><rect x="87.6154%" y="293" width="0.1269%" height="15" fill="rgb(243,178,37)" fg:x="25728396411" fg:w="37253771"/><text x="87.8654%" y="303.50"></text></g><g><title>_int_free_merge_chunk (28,973,431 samples, 0.10%)</title><rect x="87.6436%" y="277" width="0.0987%" height="15" fill="rgb(232,139,19)" fg:x="25736676751" fg:w="28973431"/><text x="87.8936%" y="287.50"></text></g><g><title>_int_free_create_chunk (12,447,127 samples, 0.04%)</title><rect x="87.6998%" y="261" width="0.0424%" height="15" fill="rgb(225,201,24)" fg:x="25753203055" fg:w="12447127"/><text x="87.9498%" y="271.50"></text></g><g><title>unlink_chunk (4,154,710 samples, 0.01%)</title><rect x="87.7281%" y="245" width="0.0141%" height="15" fill="rgb(221,47,46)" fg:x="25761495472" fg:w="4154710"/><text x="87.9781%" y="255.50"></text></g><g><title>__rdl_dealloc (4,124,715 samples, 0.01%)</title><rect x="87.7422%" y="293" width="0.0140%" height="15" fill="rgb(249,23,13)" fg:x="25765650182" fg:w="4124715"/><text x="87.9922%" y="303.50"></text></g><g><title>_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker17h9f7b29ce195bd27dE.llvm.4780643635171514031 (10,833,957,702 samples, 36.89%)</title><rect x="62.5272%" y="325" width="36.8939%" height="15" fill="rgb(219,9,5)" fg:x="18361219699" fg:w="10833957702"/><text x="62.7772%" y="335.50">_ZN7lb_apis14del_pol_single16DelegatingPolicy13update_picker..</text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (3,479,037,529 samples, 11.85%)</title><rect x="87.5736%" y="309" width="11.8475%" height="15" fill="rgb(254,171,16)" fg:x="25716139872" fg:w="3479037529"/><text x="87.8236%" y="319.50">alloc::sync::Arc&lt;T..</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::RRPickerPicker&gt; (3,425,402,504 samples, 11.66%)</title><rect x="87.7563%" y="293" width="11.6649%" height="15" fill="rgb(230,171,20)" fg:x="25769774897" fg:w="3425402504"/><text x="88.0063%" y="303.50">core::ptr::drop_i..</text></g><g><title>bencher::Bencher::iter (11,917,430,748 samples, 40.58%)</title><rect x="58.9076%" y="341" width="40.5836%" height="15" fill="rgb(210,71,41)" fg:x="17298313598" fg:w="11917430748"/><text x="59.1576%" y="351.50">bencher::Bencher::iter</text></g><g><title>rand_chacha::guts::refill_wide::impl_avx2 (20,566,945 samples, 0.07%)</title><rect x="99.4211%" y="325" width="0.0700%" height="15" fill="rgb(206,173,20)" fg:x="29195177401" fg:w="20566945"/><text x="99.6711%" y="335.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,152,946 samples, 0.01%)</title><rect x="99.4912%" y="325" width="0.0141%" height="15" fill="rgb(233,88,34)" fg:x="29215744346" fg:w="4152946"/><text x="99.7412%" y="335.50"></text></g><g><title>__GI___libc_free (8,097,175 samples, 0.03%)</title><rect x="99.5748%" y="293" width="0.0276%" height="15" fill="rgb(223,209,46)" fg:x="29240293125" fg:w="8097175"/><text x="99.8248%" y="303.50"></text></g><g><title>_int_free (8,097,175 samples, 0.03%)</title><rect x="99.5748%" y="277" width="0.0276%" height="15" fill="rgb(250,43,18)" fg:x="29240293125" fg:w="8097175"/><text x="99.8248%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40,984,312 samples, 0.14%)</title><rect x="99.5471%" y="309" width="0.1396%" height="15" fill="rgb(208,13,10)" fg:x="29232174766" fg:w="40984312"/><text x="99.7971%" y="319.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (24,768,778 samples, 0.08%)</title><rect x="99.6023%" y="293" width="0.0843%" height="15" fill="rgb(212,200,36)" fg:x="29248390300" fg:w="24768778"/><text x="99.8523%" y="303.50"></text></g><g><title>_int_free (8,315,644 samples, 0.03%)</title><rect x="99.7286%" y="293" width="0.0283%" height="15" fill="rgb(225,90,30)" fg:x="29285460749" fg:w="8315644"/><text x="99.9786%" y="303.50"></text></g><g><title>__GI___libc_free (78,128,866 samples, 0.27%)</title><rect x="99.6867%" y="309" width="0.2661%" height="15" fill="rgb(236,182,39)" fg:x="29273159078" fg:w="78128866"/><text x="99.9367%" y="319.50"></text></g><g><title>_int_free_maybe_consolidate (57,511,551 samples, 0.20%)</title><rect x="99.7569%" y="293" width="0.1958%" height="15" fill="rgb(212,144,35)" fg:x="29293776393" fg:w="57511551"/><text x="100.0069%" y="303.50"></text></g><g><title>malloc_consolidate (57,511,551 samples, 0.20%)</title><rect x="99.7569%" y="277" width="0.1958%" height="15" fill="rgb(228,63,44)" fg:x="29293776393" fg:w="57511551"/><text x="100.0069%" y="287.50"></text></g><g><title>unlink_chunk (16,380,065 samples, 0.06%)</title><rect x="99.8970%" y="261" width="0.0558%" height="15" fill="rgb(228,109,6)" fg:x="29334907879" fg:w="16380065"/><text x="100.1470%" y="271.50"></text></g><g><title>__libc_start_main_impl (29,351,645,752 samples, 99.95%)</title><rect x="0.0268%" y="501" width="99.9540%" height="15" fill="rgb(238,117,24)" fg:x="7882141" fg:w="29351645752"/><text x="0.2768%" y="511.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (29,351,645,752 samples, 99.95%)</title><rect x="0.0268%" y="485" width="99.9540%" height="15" fill="rgb(242,26,26)" fg:x="7882141" fg:w="29351645752"/><text x="0.2768%" y="495.50">__libc_start_call_main</text></g><g><title>main (29,351,645,752 samples, 99.95%)</title><rect x="0.0268%" y="469" width="99.9540%" height="15" fill="rgb(221,92,48)" fg:x="7882141" fg:w="29351645752"/><text x="0.2768%" y="479.50">main</text></g><g><title>std::rt::lang_start_internal (29,351,645,752 samples, 99.95%)</title><rect x="0.0268%" y="453" width="99.9540%" height="15" fill="rgb(209,209,32)" fg:x="7882141" fg:w="29351645752"/><text x="0.2768%" y="463.50">std::rt::lang_start_internal</text></g><g><title>_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha3c3a5ccd7c12df4E.llvm.4008388692433172374 (29,351,645,752 samples, 99.95%)</title><rect x="0.0268%" y="437" width="99.9540%" height="15" fill="rgb(221,70,22)" fg:x="7882141" fg:w="29351645752"/><text x="0.2768%" y="447.50">_ZN3std2rt10lang_start28_$u7b$$u7b$closure$u7d$$u7d$17ha3c3a5ccd7c12df4E.llvm.4008388692433172374</text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (29,351,645,752 samples, 99.95%)</title><rect x="0.0268%" y="421" width="99.9540%" height="15" fill="rgb(248,145,5)" fg:x="7882141" fg:w="29351645752"/><text x="0.2768%" y="431.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>lb_apis::main (29,351,645,752 samples, 99.95%)</title><rect x="0.0268%" y="405" width="99.9540%" height="15" fill="rgb(226,116,26)" fg:x="7882141" fg:w="29351645752"/><text x="0.2768%" y="415.50">lb_apis::main</text></g><g><title>bencher::run_tests_console (29,351,645,752 samples, 99.95%)</title><rect x="0.0268%" y="389" width="99.9540%" height="15" fill="rgb(244,5,17)" fg:x="7882141" fg:w="29351645752"/><text x="0.2768%" y="399.50">bencher::run_tests_console</text></g><g><title>bencher::Bencher::auto_bench (29,351,645,752 samples, 99.95%)</title><rect x="0.0268%" y="373" width="99.9540%" height="15" fill="rgb(252,159,33)" fg:x="7882141" fg:w="29351645752"/><text x="0.2768%" y="383.50">bencher::Bencher::auto_bench</text></g><g><title>lb_apis::single (13,232,640,109 samples, 45.06%)</title><rect x="54.9184%" y="357" width="45.0624%" height="15" fill="rgb(206,71,0)" fg:x="16126887784" fg:w="13232640109"/><text x="55.1684%" y="367.50">lb_apis::single</text></g><g><title>core::ptr::drop_in_place&lt;lb_apis::del_pol_single::DelegatingPolicy&gt; (143,783,547 samples, 0.49%)</title><rect x="99.4912%" y="341" width="0.4896%" height="15" fill="rgb(233,118,54)" fg:x="29215744346" fg:w="143783547"/><text x="99.7412%" y="351.50"></text></g><g><title>_ZN4core3ptr126drop_in_place$LT$grpc..client..load_balancing..child_manager_batched..Child$LT$grpc..client..name_resolution..Endpoint$GT$$GT$17h6fd88c756eedc8fdE.llvm.13391218907786022700 (139,630,601 samples, 0.48%)</title><rect x="99.5053%" y="325" width="0.4755%" height="15" fill="rgb(234,83,48)" fg:x="29219897292" fg:w="139630601"/><text x="99.7553%" y="335.50"></text></g><g><title>__rdl_dealloc (8,239,949 samples, 0.03%)</title><rect x="99.9527%" y="309" width="0.0281%" height="15" fill="rgb(228,3,54)" fg:x="29351287944" fg:w="8239949"/><text x="100.2027%" y="319.50"></text></g><g><title>_start (29,353,232,641 samples, 99.96%)</title><rect x="0.0268%" y="517" width="99.9594%" height="15" fill="rgb(226,155,13)" fg:x="7882140" fg:w="29353232641"/><text x="0.2768%" y="527.50">_start</text></g><g><title>all (29,365,164,857 samples, 100%)</title><rect x="0.0000%" y="549" width="100.0000%" height="15" fill="rgb(241,28,37)" fg:x="0" fg:w="29365164857"/><text x="0.2500%" y="559.50"></text></g><g><title>lb_apis-7aa6005 (29,365,164,857 samples, 100.00%)</title><rect x="0.0000%" y="533" width="100.0000%" height="15" fill="rgb(233,93,10)" fg:x="0" fg:w="29365164857"/><text x="0.2500%" y="543.50">lb_apis-7aa6005</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (4,050,076 samples, 0.01%)</title><rect x="99.9862%" y="517" width="0.0138%" height="15" fill="rgb(225,113,19)" fg:x="29361114781" fg:w="4050076"/><text x="100.2362%" y="527.50"></text></g><g><title>core::fmt::Formatter::pad_integral (4,050,076 samples, 0.01%)</title><rect x="99.9862%" y="501" width="0.0138%" height="15" fill="rgb(241,2,18)" fg:x="29361114781" fg:w="4050076"/><text x="100.2362%" y="511.50"></text></g></svg></svg>